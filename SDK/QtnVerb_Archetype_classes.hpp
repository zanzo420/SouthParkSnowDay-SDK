#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x130 (0x9F0 - 0x8C0)
// BlueprintGeneratedClass QtnVerb_Archetype.QtnVerb_Archetype_C
class UQtnVerb_Archetype_C : public UQtnVerb
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x8C0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UTexture2D*                            CooldownWheel;                                     // 0x8C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         RequiresResource;                                  // 0x8D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_453E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ResourceCost;                                      // 0x8D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Resource__Per_Hit;                                 // 0x8D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CanInterruptHitReaction;                           // 0x8DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                         Don_t_Cause_Hit_Reactions;                         // 0x8DD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_453F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Attacks_Per_Second_Display_Estimate;               // 0x8E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         HiddenOnUI;                                        // 0x8E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4540[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               Ref_GameStatGameplayTable;                         // 0x8E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Ignore_Hit_Reaction_Threshold;                     // 0x8F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4542[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            TutorialFinished;                                  // 0x8F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FText>                          OrderedTextPrompts;                                // 0x908(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, bool>                    TutorialPrompt;                                    // 0x918(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, bool>                    FilledPrompts;                                     // 0x968(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         IsRangedForTrainingUI;                             // 0x9B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4546[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          PowerTypeTag;                                      // 0x9BC(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                         RequiresUnlockToUse;                               // 0x9C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4548[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                PowerTutorial;                                     // 0x9C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         UseGyroAiming;                                     // 0x9D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_4549[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UQtnDamageType>            OverrideDamageType;                                // 0x9D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FDataTableRowHandle                   SoundsToPrime;                                     // 0x9E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)

	static class UClass* StaticClass();
	static class UQtnVerb_Archetype_C* GetDefaultObj();

	void TrainingSatisfied_(class UClass* QtnTutorial, const class FString& Prompt, bool* IsFound, bool* IsSatisfied, bool CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void GetUnlockData(class UObject* Requester, bool* Locked, class FText* LockText, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerOccupiedBody_outputPin, class AQtnBodyPawn* CallFunc_GetLocalPlayerOccupiedBody_ReturnValue, class UQtnUnlocksComponent* CallFunc_GetUnlocksComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsUnlocked_ReturnValue, bool CallFunc_GetRowNameFromUnlockKey_rowExists, class FName CallFunc_GetRowNameFromUnlockKey_ReturnValue, class FText CallFunc_GetUnlockInfo_displayName, class FText CallFunc_GetUnlockInfo_description, bool CallFunc_GetUnlockInfo_isSecret, class UTexture2D* CallFunc_GetUnlockInfo_icon, const struct FGameplayTag& CallFunc_GetUnlockInfo_unlockKey, const struct FGameplayTag& CallFunc_GetUnlockInfo_unlockCategory, const struct FQtnUnlockRewards& CallFunc_GetUnlockInfo_unlockRewards, class FText CallFunc_GetUnlockInfo_rewardName, TSubclassOf<class UQtnDLCInfo> CallFunc_GetUnlockInfo_requiredDLC, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void ShowOnUI(bool* ShouldShow, bool CallFunc_Not_PreBool_ReturnValue);
	void IsVerbACheat(bool* IsCheat);
	void IsVerbWeaponBased(bool* IsWeaponBased, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetCooldownWheelTexture(class UTexture2D** CooldownWheelTexture);
	void IsVerbAPower(bool* IsPower);
	TSubclassOf<class UQtnDamageType> GetDamageType(class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, class UQtnUpgradeSlot* CallFunc_FindUpgrade_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UQtnUpgrade* CallFunc_GetCurrentSlottedUpgrade_ReturnValue, class UEnemyUpgrade_ChangeDamageTypeArchetype_C* K2Node_DynamicCast_AsEnemy_Upgrade_Change_Damage_Type_Archetype, bool K2Node_DynamicCast_bSuccess, TSubclassOf<class UQtnDamageType> CallFunc_GetDamageType_ReturnValue, bool CallFunc_IsValidClass_ReturnValue);
	void ToggleGyroAimingIfAvailable(bool EnableGyroAiming, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, class AQtnPlayerController* CallFunc_GetOccupyingLocalPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void GetTutorialClass(bool* Found_, class UClass** Class, class AQtnItem* CallFunc_GetOwningItem_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, class ABaseWeapon_C* K2Node_DynamicCast_AsBase_Weapon, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValidClass_ReturnValue_1);
	void CompleteTutorialSubGoal(class FName SubGoalIdentity, bool CallFunc_GetTutorialClass_Found_, class UClass* CallFunc_GetTutorialClass_Class, bool CallFunc_CheckAllTutorialSubGoalsComplete_ReturnValue, enum class EQtnTutorialStatus CallFunc_GetTutorialState_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void StartTutorialIfPossible(bool CallFunc_GetTutorialClass_Found_, class UClass* CallFunc_GetTutorialClass_Class, enum class EQtnTutorialStatus CallFunc_GetTutorialState_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void MakeTrainingPromptsFromStringTable(int32 Temp_int_Array_Index_Variable, bool Temp_bool_Variable, class FText CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void DecreaseCooldownValue(float DecreaseAmount, float CallFunc_GetLocalCooldownValue_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue);
	void GetCooldownRatio(float* Ratio, float CallFunc_GetLocalCooldownValue_ReturnValue, float CallFunc_FMax_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue);
	void IsCooldownZero(bool* Yes, float CallFunc_GetLocalCooldownValue_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);
	void Set_CooldownRatio(float Ratio, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue);
	void CalculateResourceCost(float* Cost, float CallFunc_GetResourceCostMultiplier_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);
	void Un_Notify_Ranged_Threat(class AQtnPawn* PawnToNotify, class AActor* ThreatActor, class AQtnPlayerUI* CallFunc_GetOccupyingPlayerUI_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AQtnPlayerUIArchetype_C* K2Node_DynamicCast_AsQtn_Player_UIArchetype, bool K2Node_DynamicCast_bSuccess);
	void Notify_Ranged_Threat(class AQtnPawn* PawnToNotify, class AActor* ThreatActor, class AQtnPlayerUI* CallFunc_GetOccupyingPlayerUI_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AQtnPlayerUIArchetype_C* K2Node_DynamicCast_AsQtn_Player_UIArchetype, bool K2Node_DynamicCast_bSuccess);
	void RefreshLocalUIFillRatio(float FillRatio, float FadeDuration, class AQtnPawn* PawnToNotify, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class AQtnPlayerUI* CallFunc_GetOccupyingPlayerUI_ReturnValue, class AQtnPlayerUIArchetype_C* K2Node_DynamicCast_AsQtn_Player_UIArchetype, bool K2Node_DynamicCast_bSuccess);
	void RefreshCooldown(float MinCooldown, float MaxCooldown);
	void RefreshRandomCooldown(float MinRatio, float MaxRatio, float CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_IsServer_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);
	void BumpAllOtherWeaponCooldowns(enum class EQtnUIBodyActionEnum AssociatedBodyAction, float Amount, bool AlsoIncludeBody, float RandomAdd, const TArray<class UQtnVerb*>& VerbsOnThisButton, int32 Temp_int_Array_Index_Variable, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UQtnVerb* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UQtnVerb_Archetype_C* K2Node_DynamicCast_AsQtn_Verb_Archetype, bool K2Node_DynamicCast_bSuccess, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UQtnVerbComponent* CallFunc_GetVerbComponent_ReturnValue, TArray<class UQtnVerb*>& CallFunc_GetVerbs_verbs, class UQtnVerb* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, class UQtnVerb_Archetype_C* K2Node_DynamicCast_AsQtn_Verb_Archetype_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class AQtnItem* CallFunc_GetOwningItem_ReturnValue, class UQtnVerbComponent* CallFunc_GetVerbComponent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, TArray<class UQtnVerb*>& CallFunc_GetVerbs_verbs_1);
	void BumpCooldown(float Amount, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_FMin_ReturnValue, float CallFunc_GetLocalCooldownValue_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	void ResetTrainingPrompts(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, TArray<class FString>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void GenerateFormattedPrompts();
	void CompleteTrainingPrompt(int32 Index, bool Temp_bool_Variable, TArray<class FString>& CallFunc_Map_Keys_Keys, bool CallFunc_Array_IsValidIndex_ReturnValue, const class FString& CallFunc_Array_Get_Item);
	void Get_Intended_Target_Capped_Velocity(float Velocity_Cap, struct FVector* Found_Velocity, class UObject* CallFunc_GetIntendedTarget_ReturnValue, class ACharacter* K2Node_DynamicCast_AsCharacter, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_GetLastUpdateVelocity_ReturnValue, const struct FVector& CallFunc_ClampVectorSize_ReturnValue);
	void Do_Standard_Autoaim(float Range, float HalfMinusAngle, bool Lock_Body_To_Auto_Aim, bool Check_Along_Ground, struct FVector* New_Auto_Aim_Heading, class AQtnPawn** Chosen_Target, bool* Was_Target_Found_, bool LOCAL_Check_Along_Ground, bool LOCAL_Lock_Body, float LOCAL_Half_Angle, class AQtnPawn* Found_Target_To_Return, bool Target_Found_Status_To_Return, const TArray<class AQtnPawn*>& Potential_Targets, class AQtnBodyPawn* Owning_Body_Pawn, float LOCAL_Range, const struct FVector& Heading_To_Return, const struct FVector& Invoker_Location, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool CallFunc_IsValid_ReturnValue, const struct FQtnRangedFloat& K2Node_MakeStruct_QtnRangedFloat, class AQtnPawn* CallFunc_GetBestPawnWithinViewCone_ReturnValue, const struct FVector& CallFunc_GetPawnForwardVectorAlongGround_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, TArray<class AQtnPawn*>& CallFunc_GatherEnemiesWithinRadius_enemyPawns, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue);
	void Consume_Resource_if_Applicable(bool Temp_bool_Variable, float Temp_float_Variable, float CallFunc_CalculateResourceCost_Cost, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, bool CallFunc_IsServer_ReturnValue, class ABodyPawnBase_C* K2Node_DynamicCast_AsBody_Pawn_Base, bool K2Node_DynamicCast_bSuccess, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_1, class UQtnAttributeComponent* CallFunc_GetAttributeComponent_ReturnValue, TScriptInterface<class IQtnAttributeContainerInterface> CallFunc_GetAttributeValue_self_CastInput, float CallFunc_GetAttributeValue_ReturnValue, float K2Node_Select_Default, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TScriptInterface<class IQtnAttributeContainerInterface> CallFunc_SetAttributeValue_self_CastInput);
	bool CanVerbStart(class UObject* PotentialTarget, bool AbilityCanStart, bool CooldownFinished, float CallFunc_CalculateResourceCost_Cost, bool CallFunc_IsCooldownZero_yes, bool CallFunc_Greater_FloatFloat_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, class ABodyPawnBase_C* K2Node_DynamicCast_AsBody_Pawn_Base, bool K2Node_DynamicCast_bSuccess, float Temp_float_Variable, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_1, bool CallFunc_IsHitReactingOrKnockedDown_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_2, class UQtnAttributeComponent* CallFunc_GetAttributeComponent_ReturnValue, TScriptInterface<class IQtnAttributeContainerInterface> K2Node_DynamicCast_AsQtn_Attribute_Container_Interface, bool K2Node_DynamicCast_bSuccess_1, float CallFunc_GetAttributeValue_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_3, bool CallFunc_IsLocallyControlled_ReturnValue);
	void RemoveUIFromHUD();
	void PresentCooldownWhileDormant();
	void AddUIToHud();
	void OnVerbStart(class UObject* IntendedTarget, bool IsServer);
	void OnVerbEquipChange(bool IsEquipped, bool IsServer);
	void OnVerbProjectileHitTarget(class AActor* Target);
	void ApplyMeleeDamage(class AActor* MeleeVictim, const struct FQtnDamageInfo& DamageInfo);
	void ReadyForGameplayEvent_Event_0(class AQtnPawn* ReadyPawn);
	void OnVerbStop(enum class EQtnStopReason StopReason, bool IsServer);
	void ExecuteUbergraph_QtnVerb_Archetype(int32 EntryPoint, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, bool CallFunc_IsReadyForGameplay_ReturnValue, bool CallFunc_IsLocallyControlledPlayer_ReturnValue, class AQtnPlayerUI* CallFunc_GetLocalPlayerUIBP_localPlayerUI, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerUIBP_outputPin, bool K2Node_SwitchEnum_CmpSuccess, class AQtnPlayerUIArchetype_C* K2Node_DynamicCast_AsQtn_Player_UIArchetype, bool K2Node_DynamicCast_bSuccess, class AQtnPlayerUI* CallFunc_GetLocalPlayerUIBP_localPlayerUI_1, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerUIBP_outputPin_1, bool K2Node_SwitchEnum_CmpSuccess_1, class AQtnPlayerUIArchetype_C* K2Node_DynamicCast_AsQtn_Player_UIArchetype_1, bool K2Node_DynamicCast_bSuccess_1, class UObject* K2Node_Event_intendedTarget, bool K2Node_Event_isServer_2, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_1, bool K2Node_Event_isEquipped, bool K2Node_Event_isServer_1, bool CallFunc_IsLocallyControlledPlayer_ReturnValue_1, class AActor* K2Node_CustomEvent_Target, class AActor* K2Node_Event_meleeVictim, const struct FQtnDamageInfo& K2Node_Event_DamageInfo, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, bool CallFunc_HasUpgrade_ReturnValue, class AQtnBodyPawn* K2Node_DynamicCast_AsQtn_Body_Pawn, bool K2Node_DynamicCast_bSuccess_2, class UQtnVerb* CallFunc_GetCurrentActiveVerb_ReturnValue, class UQtnAttributeComponent* CallFunc_GetAttributeComponent_ReturnValue, class UMeleeVerbSwordShieldCombo3_C* K2Node_DynamicCast_AsMelee_Verb_Sword_Shield_Combo_3, bool K2Node_DynamicCast_bSuccess_3, TScriptInterface<class IQtnAttributeContainerInterface> K2Node_DynamicCast_AsQtn_Attribute_Container_Interface, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_IsHero_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_2, class ABodyPawnBase_C* K2Node_DynamicCast_AsBody_Pawn_Base, bool K2Node_DynamicCast_bSuccess_5, class AQtnPawn* K2Node_CustomEvent_readyPawn, bool CallFunc_IsServer_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, enum class EQtnStopReason K2Node_Event_stopReason, bool K2Node_Event_isServer);
	void TutorialFinished__DelegateSignature();
};

}


