#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x1D0 (0xE68 - 0xC98)
// BlueprintGeneratedClass AimableCannonPawn_Stan.AimableCannonPawn_Stan_C
class AAimableCannonPawn_Stan_C : public AAimableCannonPawn_Playground_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xC98(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                  StanHitBoxVis;                                     // 0xCA0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                       Arrow2;                                            // 0xCA8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                       AdultRiderPosition;                                // 0xCB0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                       KidRiderPosition;                                  // 0xCB8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                       Arrow1;                                            // 0xCC0(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                         StanHitBox;                                        // 0xCC8(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                        ShotsFiredThisRound;                               // 0xCD0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        MaxShotsPerRound;                                  // 0xCD4(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        ShotTimer;                                         // 0xCD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        TimeBetweenShots;                                  // 0xCDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        PauseTimer;                                        // 0xCE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        PauseLength;                                       // 0xCE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Paused;                                            // 0xCE8(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                         StanIsHere;                                        // 0xCE9(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                        Pad_5080[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Target;                                            // 0xCF0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                LastTarget;                                        // 0xCF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                CurrentAmmo;                                       // 0xD00(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                        PotentialCannonfireTargetLocations;                // 0xD08(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                LastGroundTarget;                                  // 0xD18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        CannonballPop;                                     // 0xD20(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5081[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AQtnSkirmish*                          Skirmish;                                          // 0xD28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        MaxSwarmerPop;                                     // 0xD30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5082[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            MoveStan;                                          // 0xD38(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         LOCAL_init;                                        // 0xD48(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5083[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AAimableCannonPawn_C*>          KnownPlayerCannons;                                // 0xD50(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference)
	float                                        PlayerCannonNearnessThreshold;                     // 0xD60(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         InRandyMode;                                       // 0xD64(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                         Halted;                                            // 0xD65(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                        Pad_5084[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        PlayersTargettedThisRound;                         // 0xD68(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                BossFightController;                               // 0xD78(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CanSpawnSwarmers;                                  // 0xD80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                         UseLOS;                                            // 0xD81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5085[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxClusterShotsNearPlayer;                         // 0xD84(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        ClusterShotsFired;                                 // 0xD88(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        MassVolley_shotTimer;                              // 0xD8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        MassVolley_timeBetweenShots;                       // 0xD90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         MassVolley_AllPlayersFiredOn;                      // 0xD94(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5086[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MassVolley_PlayersShotThisVolley;                  // 0xD98(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        MassVolley_ShotsAtThisPlayer;                      // 0xD9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                       MassVolley_ChosenPoints;                           // 0xDA0(0x10)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	float                                        MassVolley_TargetClearance;                        // 0xDB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        MassVolley_playerRadius;                           // 0xDB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CheckedForSwarmerVolley;                           // 0xDB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5087[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           MassVolley_PlayerCountToMaxShots;                  // 0xDC0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                        MassVolley_MidRangeOuterEdge;                      // 0xE10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        MassVolley_MidRangeInnerEdge;                      // 0xE14(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         MassVolley_UseRadial;                              // 0xE18(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_5088[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MassVolley_Radial;                                 // 0xE1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                             MassVolley_Angle;                                  // 0xE24(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_5089[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                MassVolley_AllowedOffsets;                         // 0xE30(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                             MassVolley_SingleShotRadius;                       // 0xE40(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         UseTutorialVolley;                                 // 0xE48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                         ShowHitBoxVis;                                     // 0xE49(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                         Resetting;                                         // 0xE4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_508A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            FiredVolley;                                       // 0xE50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ADragon_BP_C*                          Dragon;                                            // 0xE60(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class AAimableCannonPawn_Stan_C* GetDefaultObj();

	void GetMuzzle(class USceneComponent** Muzzle);
	void OnRep_paused(class ARandyBossFight_Actor_BP_C* K2Node_DynamicCast_AsRandy_Boss_Fight_Actor_BP, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void OnRep_halted();
	void OnRep_showHitBoxVis();
	void LOCAL_Update_Hit_Box_Vis();
	void RememberThisLocation(const struct FVector& Loc, bool CallFunc_IsServer_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue);
	void TooCloseToPreviousShot_(const struct FVector& Location_to_check, bool* Too_close, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, float CallFunc_Vector_Distance_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	void RadialVolley(class AActor* Center, const struct FVector& LOCAL_PointToCheck, int32 LOCAL_SelectedIndex, const struct FVector& LOCAL_StartingForwardVector, float LOCAL_RandomAngleOffset, bool LOCAL_TooClose, bool CallFunc_Get_Random_Ground_Target_Mid_Range_From_Actor_target_found, const struct FVector& CallFunc_Get_Random_Ground_Target_Mid_Range_From_Actor_target_loc, bool CallFunc_Get_Random_Ground_Target_Mid_Range_From_Actor_target_found_1, const struct FVector& CallFunc_Get_Random_Ground_Target_Mid_Range_From_Actor_target_loc_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_TooCloseToPreviousShot__Too_close, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, float Temp_wildcard_Variable, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, bool CallFunc_QtnGetPointOnNavMesh_foundPoint, const struct FVector& CallFunc_QtnGetPointOnNavMesh_ReturnValue, bool Temp_bool_Variable, bool CallFunc_QtnGetPointOnNavMesh_foundPoint_1, const struct FVector& CallFunc_QtnGetPointOnNavMesh_ReturnValue_1, bool CallFunc_TooCloseToPreviousShot__Too_close_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_RandomFloatInRange_ReturnValue, int32 CallFunc_RandomIntegerInRange_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue_1, float CallFunc_BreakVector2D_X_1, float CallFunc_BreakVector2D_Y_1, float CallFunc_RandomFloatInRange_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable, class AAimableCannonPawn_C* CallFunc_Array_Get_Item, float CallFunc_BreakVector2D_X_2, float CallFunc_BreakVector2D_Y_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, float CallFunc_RandomFloatInRange_ReturnValue_2, float CallFunc_Vector_Distance_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_2, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_BreakVector2D_X_3, float CallFunc_BreakVector2D_Y_3, float CallFunc_RandomFloatInRange_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1);
	void Get_Random_Ground_Target_Mid_Range_From_Actor(class AActor* Actor, bool* Target_found, struct FVector* Target_loc, const TArray<class AActor*>& LOCAL_HoldingArray, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class AActor* CallFunc_Array_Get_Item, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_Vector_Distance_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void SwarmerOnlyVolley(bool* Volley_cancelled, TSubclassOf<class AQtnPawn> Temp_class_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TMap<TSubclassOf<class AQtnPawn>, struct FQtnTrackedSkirmishPawns> CallFunc_GetTrackedPawns_ServerOnly_ReturnValue, bool CallFunc_IsServer_ReturnValue, const struct FQtnTrackedSkirmishPawns& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void GetFiringVelocityAtPoint(const struct FVector& Point, struct FVector* FiringVelocity, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_GetWorldGravity_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_GetPredictiveAimVelocity_projectileVelocity, bool CallFunc_GetPredictiveAimVelocity_ReturnValue);
	void GetTargetPointAroundActor(class AActor* Actor, struct FVector* Target_Location, bool* Ok_to_fire, const struct FVector& LOCAL_PointToTry, bool LOCAL_FoundNeighbor, int32 Temp_int_Variable, bool CallFunc_Get_Random_Ground_Target_Mid_Range_From_Actor_target_found, const struct FVector& CallFunc_Get_Random_Ground_Target_Mid_Range_From_Actor_target_loc, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_QtnGetRandomReachablePoint_foundRandomReachablePoint, const struct FVector& CallFunc_QtnGetRandomReachablePoint_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 CallFunc_Array_Length_ReturnValue, class AAimableCannonPawn_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, float CallFunc_Vector_Distance_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_IsServer_ReturnValue, const struct FVector& CallFunc_Array_Get_Item_1, float CallFunc_Vector_Distance_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_AddUnique_ReturnValue);
	void FireMassVolley(float Time_delta, TArray<class AQtnBodyPawn*>& CallFunc_GetAllQtnPlayerBodies_foundPlayerBodies, int32 CallFunc_Array_Length_ReturnValue, TArray<class AQtnPlayerPawn*>& CallFunc_GetAllPlayerPawns_foundPlayerPawns, TArray<class AQtnBodyPawn*>& CallFunc_GetAllQtnPlayerBodies_foundPlayerBodies_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_SwarmerOnlyVolley_volley_cancelled, float CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsServer_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Array_Index_Variable, class AQtnBodyPawn* CallFunc_Array_Get_Item, const struct FVector& CallFunc_getTargetPointAroundActor_target_location, bool CallFunc_getTargetPointAroundActor_ok_to_fire, bool CallFunc_IsServer_ReturnValue_1, bool CallFunc_IsServer_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, float CallFunc_Abs_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, class AQtnBodyPawn* CallFunc_Array_Get_Item_1, int32 CallFunc_Add_IntInt_ReturnValue_2);
	void SwarmerLaunch(class AQtnBodyPawn* Swarmer, class AActor* LOCAL_target, TArray<class AQtnBodyPawn*>& CallFunc_GetAllQtnPlayerBodies_foundPlayerBodies, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class AQtnBodyPawn* CallFunc_Array_Random_OutItem, int32 CallFunc_Array_Random_OutIndex, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_GetFiringVelocityAtPoint_firingVelocity, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, bool CallFunc_K2_SetActorRotation_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void RemovePreviousPlayerTargets(TArray<class AActor*>& Players, TArray<class AActor*>* FilteredList, const TArray<class AActor*>& LOCAL_HoldingArray, const TArray<class AActor*>& LOCAL_ActorsToRemove, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AActor* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, bool CallFunc_Array_Contains_ReturnValue);
	void Force_Stop(bool CallFunc_IsServer_ReturnValue);
	void OnRep_inRandyMode();
	void CheckIfCannonballAtLocation(class AActor* Actor, bool* Something_here, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<struct FHitResult>& CallFunc_BoxTrace_hits, bool CallFunc_BoxTrace_ReturnValue);
	void IsTargetNearCannon(class AActor* Actor, bool* Found_nearby_Cannon, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class AAimableCannonPawn_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, float CallFunc_GetDistanceTo_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	void ResetCannon(bool CallFunc_IsServer_ReturnValue);
	void LOCAL_UpdateStanVis();
	void OnRep_StanIsHere();
	void CheckSwarmerPopulation(bool* At_max, TSubclassOf<class AQtnPawn> Temp_class_Variable, TMap<TSubclassOf<class AQtnPawn>, struct FQtnTrackedSkirmishPawns> CallFunc_GetTrackedPawns_ServerOnly_ReturnValue, const struct FQtnTrackedSkirmishPawns& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void GetFiringVelocity(struct FVector* FiringVelocity, struct FVector* AimingVelocity, const struct FVector& CallFunc_GetWorldGravity_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, const struct FVector& CallFunc_GetPredictiveAimVelocity_projectileVelocity, bool CallFunc_GetPredictiveAimVelocity_ReturnValue);
	void GetGroundTarget(class AActor** Target, const TArray<class AActor*>& LOCAL_SelectiveArray, int32 LOCAL_NumAttempts, const TArray<class AActor*>& LOCAL_Options, int32 Temp_int_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_checkIfCannonballAtLocation_something_here, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class AActor* CallFunc_Array_Random_OutItem, int32 CallFunc_Array_Random_OutIndex, class AActor* CallFunc_Array_Random_OutItem_1, int32 CallFunc_Array_Random_OutIndex_1, bool CallFunc_Array_RemoveItem_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsServer_ReturnValue);
	void GetCannonballPop(int32* Count);
	void GetbestTargetLOS(TArray<class AActor*>& FromList, class AActor** Actor, bool* Found_target, const TArray<class AActor*>& LOCAL_FoundLOS, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_isTargetNearCannon_found_nearby_Cannon, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, class AActor* CallFunc_Array_Random_OutItem, int32 CallFunc_Array_Random_OutIndex, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, TArray<struct FHitResult>& CallFunc_LineTrace_hits, bool CallFunc_LineTrace_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsServer_ReturnValue);
	void RollAmmoType(float LOCAL_CannonballPercentage, int32 CallFunc_getCannonballPop_count, float CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_IsServer_ReturnValue);
	void PickTarget(const TArray<class AActor*>& LOCAL_HoldingArray, const TArray<class AActor*>& LOCAL_Players, class AActor* LOCAL_FirstPick, TArray<class AQtnBodyPawn*>& CallFunc_GetAllQtnPlayerBodies_foundPlayerBodies, TArray<class AQtnBodyPawn*>& CallFunc_GetAllQtnPlayerBodies_foundPlayerBodies_1, TArray<class AActor*>& CallFunc_RemovePreviousPlayerTargets_FilteredList, class AQtnBodyPawn* CallFunc_Array_Get_Item, class AActor* CallFunc_getGroundTarget_target, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_getbestTargetLOS_actor, bool CallFunc_getbestTargetLOS_found_target, int32 CallFunc_Array_AddUnique_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, class UQtnAllyBotManager* CallFunc_GetAllyBotManager_ServerOnly_ReturnValue, TArray<class AQtnBodyPawn*>& CallFunc_GetSpawnedBots_ServerOnly_ReturnValue, class AActor* CallFunc_getbestTargetLOS_actor_1, bool CallFunc_getbestTargetLOS_found_target_1, bool CallFunc_Array_RemoveItem_ReturnValue_1, bool CallFunc_IsServer_ReturnValue);
	void Local_Fire(const struct FVector& TargetLocation);
	void BndEvt__AimableCannonPawn_Stan_StanHitBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void DoSwarmerLaunch(class AQtnBodyPawn* Swarmer);
	void ExecuteUbergraph_AimableCannonPawn_Stan(int32 EntryPoint, const struct FVector& K2Node_CustomEvent_targetLocation, const struct FVector& CallFunc_GetFiringVelocityAtPoint_firingVelocity, bool CallFunc_NotEqual_VectorVector_ReturnValue, bool CallFunc_IsServer_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AQtnGameStateArchetype_C* K2Node_DynamicCast_AsQtn_Game_State_Archetype, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsReadyForGameplay_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_GetFiringVelocity_firingVelocity, const struct FVector& CallFunc_GetFiringVelocity_aimingVelocity, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class UClass* CallFunc_GetObjectClass_ReturnValue, float K2Node_Event_DeltaSeconds, bool CallFunc_EqualEqual_ClassClass_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, class ARandyBossFight_Actor_BP_C* K2Node_DynamicCast_AsRandy_Boss_Fight_Actor_BP, bool K2Node_DynamicCast_bSuccess_1, class AStan_Actor_BossFight_C* K2Node_DynamicCast_AsStan_Actor_Boss_Fight, bool K2Node_DynamicCast_bSuccess_2, class ARandyBossFight_Actor_BP_C* K2Node_DynamicCast_AsRandy_Boss_Fight_Actor_BP_1, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsServer_ReturnValue_1, float CallFunc_Abs_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, class AQtnBodyPawn* CallFunc_GetLocalPlayerInformation_occupiedBodyPawn, class AQtnPlayerPawn* CallFunc_GetLocalPlayerInformation_playerPawn, class AQtnPlayerController* CallFunc_GetLocalPlayerInformation_playerController, class AQtnPlayerUI* CallFunc_GetLocalPlayerInformation_playerUI, class AQtnPlayerState* CallFunc_GetLocalPlayerInformation_qtnPlayerState, bool CallFunc_GetLocalPlayerInformation_isHosting, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerInformation_outputPin, bool K2Node_SwitchEnum_CmpSuccess, class ABodyPawnPlayer_C* K2Node_DynamicCast_AsBody_Pawn_Player, bool K2Node_DynamicCast_bSuccess_4, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, bool CallFunc_IsValidClass_ReturnValue, class AQtnBodyPawn* K2Node_Event_swarmer);
	void FiredVolley__DelegateSignature();
	void MoveStan__DelegateSignature(bool Hit, bool StanWasHere, bool QuickHit, class AAimableCannonPawn_Stan_C* ThisCannon);
};

}


