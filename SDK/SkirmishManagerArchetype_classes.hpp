#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0xA8 (0x1B8 - 0x110)
// BlueprintGeneratedClass SkirmishManagerArchetype.SkirmishManagerArchetype_C
class USkirmishManagerArchetype_C : public UQtnSkirmishManager
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x110(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UDataTable*                            ArcMapFactionTable;                                // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                            ClassFactionTable;                                 // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<TSoftClassPtr<class AQtnPawn>, TSoftClassPtr<class AQtnPawn>> ShittyBossMap;                                     // 0x128(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSoftClassPtr<class AQtnPawn>>        BuddyArchetypes;                                   // 0x178(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                        CachedBodyPawnClasses;                             // 0x188(0x10)(Edit, BlueprintVisible)
	TArray<class USkeletalMesh*>                 CachedBodyPawnMeshes;                              // 0x198(0x10)(Edit, BlueprintVisible)
	TArray<TSoftClassPtr<class AQtnPawn>>        R_PawnClassesToPreload;                            // 0x1A8(0x10)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)

	static class UClass* StaticClass();
	static class USkirmishManagerArchetype_C* GetDefaultObj();

	void OnRep_r_PawnClassesToPreload();
	void GetPawnClassesToPreload(TArray<TSoftClassPtr<class AQtnPawn>>* PawnClassesToPreload, const TArray<TSoftClassPtr<class AQtnPawn>>& LOCAL_pawnClassesToPreload, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Array_Index_Variable_3, class UQtnGoalManager* CallFunc_GetGoalManager_ReturnValue, enum class EQtnOutputYesNoEnum CallFunc_IsThisMapForHordeMode_outputPin, class UQtnGoalManager_HordeMode_C* K2Node_DynamicCast_AsQtn_Goal_Manager_Horde_Mode, bool K2Node_DynamicCast_bSuccess, bool K2Node_SwitchEnum_CmpSuccess, class ASkirmishBase_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TArray<struct FQtnSkirmishSpawnGroup>& CallFunc_Map_Values_Values, const struct FQtnSkirmishSpawnGroup& CallFunc_Array_Get_Item_1, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, class FName CallFunc_Array_Get_Item_2, const struct FQtnSkirmishSpawnRequest& CallFunc_Array_Get_Item_3, const struct FQtnPawnFactionStruct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_3, TArray<struct FGameplayTag>& CallFunc_Get_Faction_For_Current_Arc_faction_tags, bool CallFunc_Array_Contains_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Greater_IntInt_ReturnValue);
	void PreloadRelevantAssets(const TArray<TSoftClassPtr<class AQtnPawn>>& SoftClassesToLoad, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, int32 CallFunc_Add_IntInt_ReturnValue, class FName CallFunc_Array_Get_Item, const struct FQtnPawnFactionStruct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, TArray<struct FGameplayTag>& CallFunc_Get_Faction_For_Current_Arc_faction_tags, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void IsBuddy(class UClass* Archetype, bool* Is_buddy, TSoftClassPtr<class AQtnPawn> CallFunc_Conv_ClassToSoftClassReference_ReturnValue, bool CallFunc_Array_Contains_ReturnValue);
	void Get_Boss_Archetype_For_Current_Arc(class UClass* boss_archetype, class UClass** Class_to_spawn);
	void Is_Boss_Archetype(class UClass* Archetype_class, bool* Is_boss, TSoftClassPtr<class AQtnPawn> CallFunc_Conv_ClassToSoftClassReference_ReturnValue, bool CallFunc_Map_Contains_ReturnValue);
	void Get_Pawn_Class_To_Spawn(class UClass* Archetype_class, TArray<struct FGameplayTag>& Factions, class UClass** Pawn_Class_to_Spawn, int32 CallFunc_Array_Length_ReturnValue, TSoftClassPtr<class ABodyPawnAI_C> CallFunc_Conv_ClassToSoftClassReference_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, const struct FGameplayTag& CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, class UClass* CallFunc_Array_Get_Item_1, TSoftClassPtr<class UObject> CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1, class UClass* K2Node_ClassDynamicCast_AsBody_Pawn_AI, bool K2Node_ClassDynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, bool CallFunc_Less_IntInt_ReturnValue_1, class FName CallFunc_Array_Get_Item_2, const struct FQtnPawnFactionStruct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, class UClass* CallFunc_LoadClassAsset_Blocking_ReturnValue, bool CallFunc_EqualEqual_SoftClassReference_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsBody_Pawn_AI_1, bool K2Node_ClassDynamicCast_bSuccess_1, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_EqualEqual_SoftClassReference_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue);
	void Get_Faction_For_Current_Arc(TArray<struct FGameplayTag>* Faction_tags, const TArray<struct FGameplayTag>& LOCAL_HoldingArray, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, class UClass* CallFunc_SyncLoadClass_ReturnValue, class UClass* K2Node_ClassDynamicCast_AsQtn_Goal, bool K2Node_ClassDynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, class UQtnGoalManager* CallFunc_GetGoalManager_ReturnValue, class UQtnGoalManager_Foothills_C* K2Node_DynamicCast_AsQtn_Goal_Manager_Foothills, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, const struct FGameplayTag& Temp_struct_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, class FName CallFunc_Array_Get_Item, class UQtnGoalManager* CallFunc_GetGoalManager_ReturnValue_1, const struct FQtnArcMapFactionStruct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, class UQtnGoalManagerBase_C* K2Node_DynamicCast_AsQtn_Goal_Manager_Base, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_GetCurrentArc_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Swap(class UClass* OriginalClass, int32 Arc, TMap<int32, class UClass*> ClassMap, class UClass** NewClass, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_GetClassDisplayName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	TSubclassOf<class AQtnPawn> ApplyPawnSubstitution_ServerOnly(TSubclassOf<class AQtnPawn> PawnArchetype, class UClass* LOCAL_OriginalPawn, int32 LOCAL_Day, TArray<struct FGameplayTag>& CallFunc_Get_Faction_For_Current_Arc_faction_tags, class UClass* K2Node_ClassDynamicCast_AsBody_Pawn_AI, bool K2Node_ClassDynamicCast_bSuccess, const struct FGameplayTag& CallFunc_Array_Get_Item, class UClass* CallFunc_Get_Pawn_Class_To_Spawn_Pawn_Class_to_Spawn, bool CallFunc_IsGameplayTagValid_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class UClass* CallFunc_Get_Boss_Archetype_For_Current_Arc_class_to_spawn, bool CallFunc_Is_Boss_Archetype_is_boss, bool CallFunc_isBuddy_is_buddy);
	void OnSkirmishSpawn_ServerOnly(class AQtnSkirmish* Skirmish, class AQtnPawn* SpawnedPawn, class FName SpawnGroupName, TSubclassOf<class AQtnPawn> ArchetypeBeforeSubstitution);
	void HandleReadyForGameplay(bool IsServer);
	void PreloadPawnAssets(TArray<TSoftClassPtr<class AQtnPawn>>& PawnCalsses);
	void ExecuteUbergraph_SkirmishManagerArchetype(int32 EntryPoint, bool CallFunc_IsServer_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class UClass* CallFunc_Array_Get_Item, class UClass* K2Node_ClassDynamicCast_AsActor, bool K2Node_ClassDynamicCast_bSuccess, TArray<class USkeletalMesh*>& CallFunc_PreloadDefaultMeshesForClass_ReturnValue, class AQtnSkirmish* K2Node_Event_skirmish, class AQtnPawn* K2Node_Event_spawnedPawn, class FName K2Node_Event_spawnGroupName, TSubclassOf<class AQtnPawn> K2Node_Event_archetypeBeforeSubstitution, int32 Temp_int_Loop_Counter_Variable, bool K2Node_Event_isServer, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, TArray<TSoftClassPtr<class AQtnPawn>>& CallFunc_GetPawnClassesToPreload_pawnClassesToPreload, TArray<TSoftClassPtr<class AQtnPawn>>& K2Node_CustomEvent_PawnCalsses, TArray<TSubclassOf<class UObject>>& CallFunc_AsyncLoadClassArray_archetypeArray);
};

}


