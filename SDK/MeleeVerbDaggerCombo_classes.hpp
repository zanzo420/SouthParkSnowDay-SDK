#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0xD0 (0xAC0 - 0x9F0)
// BlueprintGeneratedClass MeleeVerbDaggerCombo.MeleeVerbDaggerCombo_C
class UMeleeVerbDaggerCombo_C : public UQtnVerb_Archetype_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x9F0(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	float                                        Held_Time;                                         // 0x9F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Max_Held_Time;                                     // 0x9FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Verb_Done;                                         // 0xA00(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         Can_Transition;                                    // 0xA01(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         Input_Open;                                        // 0xA02(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         Allow_Next_Attack;                                 // 0xA03(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_3FC3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQtnPawnMontage                       Verb_Action_Start;                                 // 0xA08(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FQtnPawnMontage                       Verb_Action_1a;                                    // 0xA18(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FQtnPawnMontage                       Verb_Action_2a;                                    // 0xA28(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FQtnPawnMontage                       Verb_Action_3a;                                    // 0xA38(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FQtnPawnMontage                       VerbActionChargeAttack;                            // 0xA48(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                         Input_Detected;                                    // 0xA58(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_3FC5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ComboSequence;                                     // 0xA5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQtnPawnMontage                       VerbActionChargeAttack_Outro;                      // 0xA60(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<struct FQtnPawnMontage>               Verb_Actions;                                      // 0xA70(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FQtnPawnMontage                       Current_Verb_Action;                               // 0xA80(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                        Tick_Time;                                         // 0xA90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Max_Whirlwind_Time;                                // 0xA94(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Whirlwind_Tick_Time;                               // 0xA98(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        WhirlwindRadius;                                   // 0xA9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EPhysicalSurface                  SurfaceType;                                       // 0xAA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         WasRequestingDodge;                                // 0xAA1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         Perk_MartialExpertise;                             // 0xAA2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_3FCB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Perk_MartialExpertise_Level;                       // 0xAA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	enum class EMeleeVerbChargeComboEnum         ComboState;                                        // 0xAA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         DaggerDiveRequested;                               // 0xAA9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_3FCD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Melee_Victim;                                      // 0xAB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         TransitionActive;                                  // 0xAB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_3FCE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransitionActive_Time;                             // 0xABC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UMeleeVerbDaggerCombo_C* GetDefaultObj();

	float GetDamageValue(class AActor* VictimActor, float* BaseDamage, float DamageMultiplier, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, float CallFunc_GetDamageValue_baseDamage, float CallFunc_GetDamageValue_ReturnValue, class UPerk_MartialExpertise_C* CallFunc_FindPerk_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_GetReplicatedActiveInstances_ReturnValue, float CallFunc_GetPerkValueAtInstanceCount_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_GetDamageValue_baseDamage_1, float CallFunc_GetDamageValue_ReturnValue_1);
	void TurnTowardsTarget(class AActor* Target, class AQtnBodyPawn* L_owningBody, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw);
	class UBlendSpace* GetLocoBlendOverride();
	void IncrementComboAndStartNextSequence(int32 CallFunc_Add_IntInt_ReturnValue);
	void Tick_Charging(float Delta_Seconds, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);
	void RegisterInput(bool CallFunc_WantsCombo_wantsCombo, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
	void UnlockBodyYaw(class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue);
	void SetComboState(enum class EMeleeVerbChargeComboEnum ComboStateToSet, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, class UQtnMovementComponent* CallFunc_GetQtnMovementComponent_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_1, class UQtnMovementComponent* CallFunc_GetQtnMovementComponent_ReturnValue_1, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_2, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, class AQtnFXActor* CallFunc_BP_BeginEffect_ReturnValue, bool Temp_bool_Variable, float CallFunc_StartVerbAction_ReturnValue, const struct FQtnPawnMontage& CallFunc_Array_Get_Item, float CallFunc_StartVerbAction_ReturnValue_1, float CallFunc_StartVerbAction_ReturnValue_2, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue_1, const struct FQtnPawnIntentions& CallFunc_GetIntentions_ReturnValue, float CallFunc_StartVerbAction_ReturnValue_3, const struct FRotator& CallFunc_MakeRotFromX_ReturnValue, bool CallFunc_Vector_IsZero_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float K2Node_Select_Default);
	void OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1);
	bool IsTryingToCancel(bool AllowDodgeToCancel, const struct FQtnPawnIntentions& L_intentions, bool CallFunc_IsBodyActionPressed_ReturnValue, bool CallFunc_IsBodyActionPressed_ReturnValue_1, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, const struct FQtnPawnIntentions& CallFunc_GetIntentions_ReturnValue);
	bool AllowOtherVerbToInterrupt(class UQtnVerb* OtherVerb, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, bool CallFunc_AllowOtherVerbToInterrupt_ReturnValue, bool CallFunc_IsPlayerControlled_ReturnValue, class UDodgeVerb_C* K2Node_DynamicCast_AsDodge_Verb, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasDodgeBeenReleased_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void RequestDodge(class UObject* CallFunc_GetIntendedTarget_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, const struct FQtnVerbRequest& K2Node_MakeStruct_QtnVerbRequest, bool CallFunc_IsLocallyControlled_ReturnValue);
	void WantsCombo(bool* WantsCombo, class AActor* TargetActor, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class AQtnPawn* K2Node_DynamicCast_AsQtn_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsAliveAndConscious_ReturnValue, bool CallFunc_AreVerbConditionsSatisfied_ReturnValue, class UObject* CallFunc_GetIntendedTarget_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, class AActor* K2Node_DynamicCast_AsActor, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsPlayerControlled_ReturnValue, bool CallFunc_IsAssociatedInputActionPressed_ReturnValue);
	void Rotate_To_Movement(const struct FVector& L_worldMovementIntention, bool Temp_bool_Variable, class UObject* CallFunc_GetIntendedTarget_ReturnValue, class UObject* CallFunc_GetIntendedTarget_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, class AActor* K2Node_DynamicCast_AsActor, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, float CallFunc_VSizeSquared_ReturnValue, bool CallFunc_IsPlayerControlled_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FQtnPawnIntentions& CallFunc_GetIntentions_ReturnValue, const struct FRotator& CallFunc_MakeRotFromX_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue_1, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_VSizeSquared_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue_1, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue_2, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, TArray<class AQtnPawn*>& CallFunc_GatherEnemiesWithinRadius_enemyPawns, bool CallFunc_Less_FloatFloat_ReturnValue, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& K2Node_Select_Default, class AQtnPawn* CallFunc_GetBestPawnWithinViewCone_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	float GetLocomotionRatio(bool Temp_bool_Variable, float Temp_float_Variable, float Temp_float_Variable_1, bool K2Node_SwitchEnum_CmpSuccess, float K2Node_Select_Default);
	bool CanVerbStart(class UObject* PotentialTarget, bool CallFunc_CanVerbStart_ReturnValue, bool CallFunc_IsTryingToCancel_ReturnValue, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, bool CallFunc_IsTouchingGround_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	bool IsVerbFinished();
	void OnVerbStart(class UObject* IntendedTarget, bool IsServer);
	void OnActiveVerbTicked(struct FQtnPawnIntentions& PawnIntentions, float DeltaSeconds, float ElapsedTime, bool IsServer);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool Interrupted, bool IsServer);
	void OnMontageEnded(class UAnimMontage* Montage, bool Interrupted, bool IsServer);
	void OnAnimWindowBegin(class UQtnAnimWindow* AnimWindow, float TotalDuration, bool IsServer);
	void OnAnimWindowEnd(class UQtnAnimWindow* AnimWindow, bool Interrupted, bool IsServer);
	void Reset_Verb();
	void Reset_Attack();
	void OnVerbStop(enum class EQtnStopReason StopReason, bool IsServer);
	void ApplyMeleeDamage(class AActor* MeleeVictim, const struct FQtnDamageInfo& DamageInfo);
	void OnAnimNotify(class UQtnAnimNotify* AnimNotify, bool IsServer);
	void ExecuteUbergraph_MeleeVerbDaggerCombo(int32 EntryPoint, bool CallFunc_HasDodgeBeenReleased_ReturnValue, bool CallFunc_IsTryingToCancel_ReturnValue, class UObject* K2Node_Event_intendedTarget, bool K2Node_Event_isServer_7, const struct FQtnPawnIntentions& K2Node_Event_pawnIntentions, float K2Node_Event_DeltaSeconds, float K2Node_Event_elapsedTime, bool K2Node_Event_isServer_6, bool CallFunc_IsAssociatedInputActionPressed_ReturnValue, class UAnimMontage* K2Node_Event_montage_1, bool K2Node_Event_interrupted_2, bool K2Node_Event_isServer_5, class UAnimMontage* K2Node_Event_montage, bool K2Node_Event_interrupted_1, bool K2Node_Event_isServer_4, class UQtnAnimWindow* K2Node_Event_animWindow_1, float K2Node_Event_totalDuration, bool K2Node_Event_isServer_3, class UQtnAnimWindow* K2Node_Event_animWindow, bool K2Node_Event_interrupted, bool K2Node_Event_isServer_2, class UQtnAnimWindowInput* K2Node_DynamicCast_AsQtn_Anim_Window_Input, bool K2Node_DynamicCast_bSuccess, class UQtnAnimWindowTransition* K2Node_DynamicCast_AsQtn_Anim_Window_Transition, bool K2Node_DynamicCast_bSuccess_1, class UAnimWindow_Custom1_C* K2Node_DynamicCast_AsAnim_Window_Custom_1, bool K2Node_DynamicCast_bSuccess_2, class UQtnAnimWindowInput* K2Node_DynamicCast_AsQtn_Anim_Window_Input_1, bool K2Node_DynamicCast_bSuccess_3, class UQtnAnimWindowTransition* K2Node_DynamicCast_AsQtn_Anim_Window_Transition_1, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_IsClosed_Variable, bool K2Node_SwitchEnum_CmpSuccess, enum class EQtnStopReason K2Node_Event_stopReason, bool K2Node_Event_isServer_1, class AActor* K2Node_Event_meleeVictim, const struct FQtnDamageInfo& K2Node_Event_DamageInfo, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue, bool CallFunc_IsTargetActorWorthyOfAttack_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_BooleanAND_ReturnValue_1, bool Temp_bool_Has_Been_Initd_Variable, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue, bool CallFunc_IsTouchingGround_ReturnValue, class AQtnBodyPawn* CallFunc_GetOwningBodyPawn_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue, const struct FVector& CallFunc_GetBodyIntentionLocalMovement_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, class UQtnMovementComponent* CallFunc_GetQtnMovementComponent_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_2, class UQtnMovementComponent* CallFunc_GetQtnMovementComponent_ReturnValue_1, class UQtnAnimNotify* K2Node_Event_animNotify, bool K2Node_Event_isServer, class AQtnPawn* CallFunc_GetOwningPawn_ReturnValue_3, class UQtnMovementComponent* CallFunc_GetQtnMovementComponent_ReturnValue_2, class UAnimNotify_Custom1_C* K2Node_DynamicCast_AsQtn_Anim_Notify_Custom_1, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_WantsCombo_wantsCombo, bool CallFunc_HasDodgeBeenReleased_ReturnValue_1, bool CallFunc_HasDodgeBeenReleased_ReturnValue_2, bool CallFunc_IsTryingToCancel_ReturnValue_1, bool CallFunc_IsTryingToCancel_ReturnValue_2);
};

}


