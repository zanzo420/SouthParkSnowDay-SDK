#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x180 (0x3D0 - 0x250)
// BlueprintGeneratedClass EncounterZoneVolume.EncounterZoneVolume_C
class AEncounterZoneVolume_C : public AActor
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x250(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                   Billboard;                                         // 0x258(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                         Box;                                               // 0x260(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            PlayerEnteredEvent;                                // 0x268(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class AQtnWaveSpawner_BP_C*>          SpawnersInZone;                                    // 0x278(0x10)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	bool                                         CollectSpawnLocations;                             // 0x288(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                        Pad_42BB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABP_SafeSpawnLocation_C*>       Safe_Spawn_Rift_Location_Sources;                  // 0x290(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference)
	TMap<class UClass*, struct FSafeSpawnArray>  AvailableSpawnMap;                                 // 0x2A0(0x50)(Edit, BlueprintVisible)
	TArray<class ABP_SafeSpawnLocation_C*>       TempSpawnArray;                                    // 0x2F0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class ABP_SafeSpawnLocation_C*>       StartingSpawner;                                   // 0x300(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	int32                                        Maximum_Safe_Spawn_Lockouts_Allowed;               // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_42BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                Previous_Safe_Spawn_Times;                         // 0x318(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                        Safe_Spawn_Lockout_Time;                           // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                  GoalTag;                                           // 0x32C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_42BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            SpawnPlan;                                         // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SafeSpawnLocation_C*>       ExitSpawners;                                      // 0x340(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference)
	class ATravelVolume_BP_C*                    Gate;                                              // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SafeSpawnLocation_C*>       UsedSpawners;                                      // 0x358(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference)
	bool                                         CanAllowCheaters;                                  // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_42C1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProgressionPercentage;                             // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        LikelihoodOfCheating;                              // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         ActivateSpawnOnPlayerEntry;                        // 0x374(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_42C4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            PlayerEnteredSpawnEvent;                           // 0x378(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                         PlayerHasEntered;                                  // 0x388(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_42C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATriggerVolume*                        ProximityVolume;                                   // 0x390(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_            SpawnFactorEvent;                                  // 0x398(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ALoot_Container_TreasureChest_C*       Treasure;                                          // 0x3A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeadPlayerTeleportLoc_C*           MyEntrancePoint;                                   // 0x3B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         Active;                                            // 0x3B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_42C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABP_SafeSpawnLocation_C*>       BothSpawners;                                      // 0x3C0(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference)

	static class UClass* StaticClass();
	static class AEncounterZoneVolume_C* GetDefaultObj();

	void SetEncounterActive(bool CallFunc_IsServer_ReturnValue);
	void SetEncounterInactive(bool CallFunc_IsServer_ReturnValue);
	void GetSpawnerNotNearExit(TArray<class UClass*>& SpawnerTypes, enum class EQtnEnemyType Group, struct FVector* Safe_Location, class ABP_SafeSpawnLocation_C** Safe_Spawner_Loc_Actor, bool LOCAL_FoundSpawner, const TArray<class ABP_SafeSpawnLocation_C*>& LOCAL_UsableLocs, const TArray<class ABP_SafeSpawnLocation_C*>& LOCAL_UsableExitLocs, const TArray<class ABP_SafeSpawnLocation_C*>& FilteredSpawnLocations, const TArray<struct FVector>& LOCAL_Locations_To_Use, TMap<struct FVector, class ABP_SafeSpawnLocation_C*> SpawnMap, class ABP_SafeSpawnLocation_C* LOCAL_SpawnerToReturn, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_getSafeLocationInZone_Safe_Location, class ABP_SafeSpawnLocation_C* CallFunc_getSafeLocationInZone_Safe_Spawner_Loc_Actor, TArray<class ABP_SafeSpawnLocation_C*>& CallFunc_Make_Spawner_Location_List_OutSpawnLocations, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, int32 Temp_int_Array_Index_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Array_AddUnique_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable_1, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_1, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_2, bool CallFunc_Array_Contains_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, TArray<class ADirector_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_AddUnique_ReturnValue_1, class ADirector_C* CallFunc_Array_Get_Item_3, float CallFunc_GetTimeSeconds_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_4, bool CallFunc_Array_Contains_ReturnValue_2, int32 CallFunc_Array_AddUnique_ReturnValue_2, bool CallFunc_Array_Contains_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue);
	void UpdateEncounterProgress(float Progression, bool CallFunc_IsServer_ReturnValue);
	void GetEncounterProgress(float* Progression_Percentage);
	void Server_Set_Current_Encounter(TArray<class ADirector_C*>& CallFunc_GetAllActorsOfClass_OutActors, bool CallFunc_IsServer_ReturnValue, class ADirector_C* CallFunc_Array_Get_Item);
	void GetSpawnerNearEncounterExit(TArray<class UClass*>& SpawnerTypes, enum class EQtnEnemyType Group, struct FVector* Safe_Location, class ABP_SafeSpawnLocation_C** Safe_Spawner_Loc_Actor, bool LOCAL_FoundSpawner, const TArray<class ABP_SafeSpawnLocation_C*>& LOCAL_ExitLocsOnly, const TArray<class ABP_SafeSpawnLocation_C*>& LOCAL_UsableExitLocs, const TArray<class ABP_SafeSpawnLocation_C*>& FilteredSpawnLocations, const TArray<struct FVector>& LOCAL_Locations_To_Use, TMap<struct FVector, class ABP_SafeSpawnLocation_C*> SpawnMap, class ABP_SafeSpawnLocation_C* LOCAL_SpawnerToReturn, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_getSafeLocationInZone_Safe_Location, class ABP_SafeSpawnLocation_C* CallFunc_getSafeLocationInZone_Safe_Spawner_Loc_Actor, TArray<class ABP_SafeSpawnLocation_C*>& CallFunc_Make_Spawner_Location_List_OutSpawnLocations, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Array_Index_Variable_2, bool Temp_bool_True_if_break_was_hit_Variable_1, bool CallFunc_Not_PreBool_ReturnValue_1, int32 CallFunc_Array_AddUnique_ReturnValue, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_1, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_2, bool CallFunc_Array_Contains_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, TArray<class ADirector_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 CallFunc_Array_AddUnique_ReturnValue_1, class ADirector_C* CallFunc_Array_Get_Item_3, float CallFunc_GetTimeSeconds_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_4, int32 CallFunc_Array_AddUnique_ReturnValue_2, bool CallFunc_Array_Contains_ReturnValue_2, bool CallFunc_Array_Contains_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Greater_IntInt_ReturnValue);
	void RemoveReusedSpawners(TArray<class ABP_SafeSpawnLocation_C*>& Filtered_Spawner_Locs, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ADirector_C*>& CallFunc_GetAllActorsOfClass_OutActors, class ADirector_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue);
	void MakeSpawnLocationMap(TArray<class ABP_SafeSpawnLocation_C*>& Filtered_Spawn_Locations, TMap<struct FVector, class ABP_SafeSpawnLocation_C*>* LocationMap, TMap<struct FVector, class ABP_SafeSpawnLocation_C*> OutMap, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void GetSafeLocationInZone(TArray<class UClass*>& Spawner_Types, struct FVector* Safe_Location, class ABP_SafeSpawnLocation_C** Safe_Spawner_Loc_Actor, const struct FVector& LOCAL_Centroid, const struct FVector& ChosenLocation, const TArray<struct FVector>& LOCAL_Locations_To_Use, TMap<struct FVector, class ABP_SafeSpawnLocation_C*> SpawnMap, const TArray<class ABP_SafeSpawnLocation_C*>& FilteredSpawnLocations, bool Temp_bool_Variable, TArray<class ABP_SafeSpawnLocation_C*>& CallFunc_Make_Spawner_Location_List_OutSpawnLocations, bool CallFunc_Not_PreBool_ReturnValue, float Temp_float_Variable, const struct FVector& Temp_struct_Variable, int32 Temp_int_Variable, TArray<struct FVector>& CallFunc_Map_Keys_Keys, TArray<struct FVector>& Temp_struct_Variable_1, const struct FVector& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, TArray<struct FVector>& Temp_struct_Variable_2, const struct FVector& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Add_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Variable_1, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool Temp_bool_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<class ADirector_C*>& CallFunc_GetAllActorsOfClass_OutActors, class ADirector_C* CallFunc_Array_Get_Item_2, const struct FVector& K2Node_Select_Default, bool CallFunc_Greater_IntInt_ReturnValue, class ABP_SafeSpawnLocation_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const struct FVector& CallFunc_Array_Get_Item_3, const struct FVector& CallFunc_Array_Get_Item_4, int32 CallFunc_Array_AddUnique_ReturnValue, float CallFunc_Vector_DistanceSquared_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue_5, TMap<struct FVector, class ABP_SafeSpawnLocation_C*> CallFunc_MakeSpawnLocationMap_LocationMap, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Array_Find_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_2, bool Temp_bool_Variable_2, float CallFunc_GetTimeSeconds_ReturnValue, const struct FVector& K2Node_Select_Default_1, int32 Temp_int_Array_Index_Variable_2, const struct FVector& CallFunc_Array_Get_Item_5, int32 CallFunc_Array_AddUnique_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_6, int32 CallFunc_Min_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 Temp_int_Variable_2, int32 CallFunc_Array_Length_ReturnValue_7, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_3, float CallFunc_Array_Get_Item_6, float CallFunc_GetTimeSeconds_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void Make_Spawner_Location_List(TArray<class UClass*>& Spawner_Types, TArray<class ABP_SafeSpawnLocation_C*>* OutSpawnLocations, const TArray<class ABP_SafeSpawnLocation_C*>& OutSafeSpawnerArray, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UClass* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable_1, const struct FSafeSpawnArray& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_AddUnique_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1);
	void IsPointInZone(const struct FVector& Point, bool* Point_is_in_arena, const struct FVector& CallFunc_GetActorScale3D_ReturnValue, const struct FVector& CallFunc_GetScaledBoxExtent_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FVector& CallFunc_Divide_VectorVector_ReturnValue, const struct FVector& CallFunc_InverseTransformLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FVector& CallFunc_Vector_GetAbs_ReturnValue, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void UserConstructionScript(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, const struct FSafeSpawnArray& K2Node_MakeStruct_SafeSpawnArray, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FSafeSpawnArray& K2Node_MakeStruct_SafeSpawnArray_1, int32 Temp_int_Loop_Counter_Variable_2, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_2, class UClass* CallFunc_Array_Get_Item_1, const struct FSafeSpawnArray& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, TArray<class ABP_SafeSpawnLocation_C*>& CallFunc_GetAllActorsOfClass_OutActors, class ABP_SafeSpawnLocation_C* CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_isPointInZone_point_is_in_arena, int32 CallFunc_Array_AddUnique_ReturnValue);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ExecuteUbergraph_EncounterZoneVolume(int32 EntryPoint, float K2Node_Event_DeltaSeconds, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, const struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class ABodyPawnPlayer_C* K2Node_DynamicCast_AsBody_Pawn_Player, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsServer_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_IsServer_ReturnValue_2, const class FString& CallFunc_GetDisplayName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void SpawnFactorEvent__DelegateSignature();
	void PlayerEnteredSpawnEvent__DelegateSignature();
	void PlayerEnteredEvent__DelegateSignature(class AEncounterZoneVolume_C* Encounter);
};

}


