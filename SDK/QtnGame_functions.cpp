#pragma once

// Dumped with Dumper-7!


#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// FUNCTIONS
//---------------------------------------------------------------------------------------------------------------------


// Class QtnGame.QtnAchievementsManager
// (None)

class UClass* UQtnAchievementsManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAchievementsManager");

	return Clss;
}


// QtnAchievementsManager QtnGame.Default__QtnAchievementsManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAchievementsManager* UQtnAchievementsManager::GetDefaultObj()
{
	static class UQtnAchievementsManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAchievementsManager*>(UQtnAchievementsManager::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnActorContentSlot
// (Actor)

class UClass* AQtnActorContentSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnActorContentSlot");

	return Clss;
}


// QtnActorContentSlot QtnGame.Default__QtnActorContentSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnActorContentSlot* AQtnActorContentSlot::GetDefaultObj()
{
	static class AQtnActorContentSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnActorContentSlot*>(AQtnActorContentSlot::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnActorContentSlot.UseDefaultAppearance
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnActorContentSlot::UseDefaultAppearance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorContentSlot", "UseDefaultAppearance");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnActorContentSlot.SetContent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      ContentId                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnActorContentSlot::SetContent(class FString& ContentId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorContentSlot", "SetContent");

	Params::AQtnActorContentSlot_SetContent_Params Parms{};

	Parms.ContentId = ContentId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnActorContentSlot.ServerSetContent
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class FString                      ContentId                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnActorContentSlot::ServerSetContent(class FString& ContentId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorContentSlot", "ServerSetContent");

	Params::AQtnActorContentSlot_ServerSetContent_Params Parms{};

	Parms.ContentId = ContentId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnActorContentSlot.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnActorContentSlot::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorContentSlot", "OnDebugDisplay");

	Params::AQtnActorContentSlot_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnActorContentSlot.OnContentSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      NewActorObject                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnActorContentSlot::OnContentSpawned(class AActor* NewActorObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorContentSlot", "OnContentSpawned");

	Params::AQtnActorContentSlot_OnContentSpawned_Params Parms{};

	Parms.NewActorObject = NewActorObject;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnActorContentSlot.MulticastSetContent
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class FString                      ContentId                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnActorContentSlot::MulticastSetContent(class FString& ContentId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorContentSlot", "MulticastSetContent");

	Params::AQtnActorContentSlot_MulticastSetContent_Params Parms{};

	Parms.ContentId = ContentId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnActorContentSlot.ClearContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnActorContentSlot::ClearContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorContentSlot", "ClearContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnActorPoolManager
// (None)

class UClass* UQtnActorPoolManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnActorPoolManager");

	return Clss;
}


// QtnActorPoolManager QtnGame.Default__QtnActorPoolManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnActorPoolManager* UQtnActorPoolManager::GetDefaultObj()
{
	static class UQtnActorPoolManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnActorPoolManager*>(UQtnActorPoolManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnActorPoolManager.WarmUp_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AQtnPoolableActor>ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnActorPoolManager::WarmUp_ServerOnly(class UObject* WorldContextObject, TSubclassOf<class AQtnPoolableActor> ActorClass, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorPoolManager", "WarmUp_ServerOnly");

	Params::UQtnActorPoolManager_WarmUp_ServerOnly_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorClass = ActorClass;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnActorPoolManager.Reclaim_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AQtnPoolableActor*           PActor                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnActorPoolManager::Reclaim_ServerOnly(class AQtnPoolableActor* PActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorPoolManager", "Reclaim_ServerOnly");

	Params::UQtnActorPoolManager_Reclaim_ServerOnly_Params Parms{};

	Parms.PActor = PActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnActorPoolManager.IsActorPoolingEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnActorPoolManager::IsActorPoolingEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorPoolManager", "IsActorPoolingEnabled");

	Params::UQtnActorPoolManager_IsActorPoolingEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnActorPoolManager.GetInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     PWorldReference                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnActorPoolManager*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnActorPoolManager* UQtnActorPoolManager::GetInstance(class UObject* PWorldReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorPoolManager", "GetInstance");

	Params::UQtnActorPoolManager_GetInstance_Params Parms{};

	Parms.PWorldReference = PWorldReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnActorPoolManager.Cleanup_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnActorPoolManager::Cleanup_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorPoolManager", "Cleanup_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnActorPoolManager.Acquire_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AQtnPoolableActor>ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Instigator                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPoolableActor*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPoolableActor* UQtnActorPoolManager::Acquire_ServerOnly(class UObject* WorldContextObject, TSubclassOf<class AQtnPoolableActor> ActorClass, struct FTransform& Transform, class AActor* Owner, class APawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnActorPoolManager", "Acquire_ServerOnly");

	Params::UQtnActorPoolManager_Acquire_ServerOnly_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorClass = ActorClass;
	Parms.Transform = Transform;
	Parms.Owner = Owner;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAIBarkManager
// (None)

class UClass* UQtnAIBarkManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIBarkManager");

	return Clss;
}


// QtnAIBarkManager QtnGame.Default__QtnAIBarkManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIBarkManager* UQtnAIBarkManager::GetDefaultObj()
{
	static class UQtnAIBarkManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIBarkManager*>(UQtnAIBarkManager::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAIJobActorBaseNative
// (Actor)

class UClass* AQtnAIJobActorBaseNative::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIJobActorBaseNative");

	return Clss;
}


// QtnAIJobActorBaseNative QtnGame.Default__QtnAIJobActorBaseNative
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnAIJobActorBaseNative* AQtnAIJobActorBaseNative::GetDefaultObj()
{
	static class AQtnAIJobActorBaseNative* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnAIJobActorBaseNative*>(AQtnAIJobActorBaseNative::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAIJobActorBaseNative.IsJobActorViableNative
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               IsComponentEmploymentOpen                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnAIJobActorBaseNative::IsJobActorViableNative(bool IsComponentEmploymentOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobActorBaseNative", "IsJobActorViableNative");

	Params::AQtnAIJobActorBaseNative_IsJobActorViableNative_Params Parms{};

	Parms.IsComponentEmploymentOpen = IsComponentEmploymentOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAIJobCluster
// (None)

class UClass* UQtnAIJobCluster::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIJobCluster");

	return Clss;
}


// QtnAIJobCluster QtnGame.Default__QtnAIJobCluster
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIJobCluster* UQtnAIJobCluster::GetDefaultObj()
{
	static class UQtnAIJobCluster* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIJobCluster*>(UQtnAIJobCluster::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAIJobCluster.SetClusterEmploymentOpen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantEmploymentOpen                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobCluster::SetClusterEmploymentOpen(bool WantEmploymentOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "SetClusterEmploymentOpen");

	Params::UQtnAIJobCluster_SetClusterEmploymentOpen_Params Parms{};

	Parms.WantEmploymentOpen = WantEmploymentOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnAIJobCluster.QtnAIClusterEmployEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAIJobRole*               AiJobRole                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        RoleID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyController*          AIController                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlackboardComponent*        BlackboardComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobCluster::QtnAIClusterEmployEvent__DelegateSignature(class UQtnAIJobRole* AiJobRole, class FName RoleID, class AQtnBodyController* AIController, class UBlackboardComponent* BlackboardComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "QtnAIClusterEmployEvent__DelegateSignature");

	Params::UQtnAIJobCluster_QtnAIClusterEmployEvent__DelegateSignature_Params Parms{};

	Parms.AiJobRole = AiJobRole;
	Parms.RoleID = RoleID;
	Parms.AIController = AIController;
	Parms.BlackboardComponent = BlackboardComponent;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAIJobCluster.IsClusterEmploymentOpen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobCluster::IsClusterEmploymentOpen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "IsClusterEmploymentOpen");

	Params::UQtnAIJobCluster_IsClusterEmploymentOpen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobCluster.IsAIJobClusterViable_ServerOnly
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForInitialAdoption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobCluster::IsAIJobClusterViable_ServerOnly(class AQtnPawn* Pawn, bool ForInitialAdoption)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "IsAIJobClusterViable_ServerOnly");

	Params::UQtnAIJobCluster_IsAIJobClusterViable_ServerOnly_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.ForInitialAdoption = ForInitialAdoption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobCluster.GetJobRole
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        JobRoleID                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAIJobRole*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAIJobRole* UQtnAIJobCluster::GetJobRole(class FName JobRoleID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "GetJobRole");

	Params::UQtnAIJobCluster_GetJobRole_Params Parms{};

	Parms.JobRoleID = JobRoleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobCluster.GetCurrentlyEmployedJobRoles
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnAIJobRole*>       EmployedJobRoles                                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnAIJobCluster::GetCurrentlyEmployedJobRoles(TArray<class UQtnAIJobRole*>* EmployedJobRoles)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "GetCurrentlyEmployedJobRoles");

	Params::UQtnAIJobCluster_GetCurrentlyEmployedJobRoles_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EmployedJobRoles != nullptr)
		*EmployedJobRoles = std::move(Parms.EmployedJobRoles);

}


// Function QtnGame.QtnAIJobCluster.GetAllJobRoles
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnAIJobRole*>       JobRoles                                                         (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnAIJobCluster::GetAllJobRoles(TArray<class UQtnAIJobRole*>* JobRoles)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "GetAllJobRoles");

	Params::UQtnAIJobCluster_GetAllJobRoles_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (JobRoles != nullptr)
		*JobRoles = std::move(Parms.JobRoles);

}


// Function QtnGame.QtnAIJobCluster.GetAIJobClusterHeuristic
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    UnemployedPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnAIJobCluster::GetAIJobClusterHeuristic(class AQtnPawn* UnemployedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "GetAIJobClusterHeuristic");

	Params::UQtnAIJobCluster_GetAIJobClusterHeuristic_Params Parms{};

	Parms.UnemployedPawn = UnemployedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobCluster.AddJobRole
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        JobRoleID                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnAIJobRoleDefinition     JobRoleDef                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UQtnAIJobRole*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAIJobRole* UQtnAIJobCluster::AddJobRole(class FName JobRoleID, struct FQtnAIJobRoleDefinition& JobRoleDef)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobCluster", "AddJobRole");

	Params::UQtnAIJobCluster_AddJobRole_Params Parms{};

	Parms.JobRoleID = JobRoleID;
	Parms.JobRoleDef = JobRoleDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAIJobComponent
// (SceneComponent)

class UClass* UQtnAIJobComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIJobComponent");

	return Clss;
}


// QtnAIJobComponent QtnGame.Default__QtnAIJobComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIJobComponent* UQtnAIJobComponent::GetDefaultObj()
{
	static class UQtnAIJobComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIJobComponent*>(UQtnAIJobComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAIJobComponent.SetComponentEmploymentOpen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantEmploymentOpen                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobComponent::SetComponentEmploymentOpen(bool WantEmploymentOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "SetComponentEmploymentOpen");

	Params::UQtnAIJobComponent_SetComponentEmploymentOpen_Params Parms{};

	Parms.WantEmploymentOpen = WantEmploymentOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnAIJobComponent.QtnAIEmployEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAIJobRole*               AiJobRole                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ClusterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        RoleID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyController*          AIController                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlackboardComponent*        BlackboardComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsCombatJob                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobComponent::QtnAIEmployEvent__DelegateSignature(class UQtnAIJobRole* AiJobRole, class FName ClusterID, class FName RoleID, class AQtnBodyController* AIController, class UBlackboardComponent* BlackboardComponent, bool IsCombatJob)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "QtnAIEmployEvent__DelegateSignature");

	Params::UQtnAIJobComponent_QtnAIEmployEvent__DelegateSignature_Params Parms{};

	Parms.AiJobRole = AiJobRole;
	Parms.ClusterID = ClusterID;
	Parms.RoleID = RoleID;
	Parms.AIController = AIController;
	Parms.BlackboardComponent = BlackboardComponent;
	Parms.IsCombatJob = IsCombatJob;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAIJobComponent.IsComponentEmploymentOpen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobComponent::IsComponentEmploymentOpen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "IsComponentEmploymentOpen");

	Params::UQtnAIJobComponent_IsComponentEmploymentOpen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobComponent.IsAIJobViable_ServerOnly
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForInitialAdoption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobComponent::IsAIJobViable_ServerOnly(class AQtnPawn* Pawn, bool ForInitialAdoption)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "IsAIJobViable_ServerOnly");

	Params::UQtnAIJobComponent_IsAIJobViable_ServerOnly_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.ForInitialAdoption = ForInitialAdoption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobComponent.GetJobCluster
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        JobClusterID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForCombat                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAIJobCluster*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAIJobCluster* UQtnAIJobComponent::GetJobCluster(class FName JobClusterID, bool ForCombat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "GetJobCluster");

	Params::UQtnAIJobComponent_GetJobCluster_Params Parms{};

	Parms.JobClusterID = JobClusterID;
	Parms.ForCombat = ForCombat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobComponent.GetEmployedBodies_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnBodyPawn*>        ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnBodyPawn*> UQtnAIJobComponent::GetEmployedBodies_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "GetEmployedBodies_ServerOnly");

	Params::UQtnAIJobComponent_GetEmployedBodies_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobComponent.GetCurrentlyEmployedJobRoles
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnAIJobRole*>       EmployedJobRoles                                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ForCombat                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobComponent::GetCurrentlyEmployedJobRoles(TArray<class UQtnAIJobRole*>* EmployedJobRoles, bool ForCombat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "GetCurrentlyEmployedJobRoles");

	Params::UQtnAIJobComponent_GetCurrentlyEmployedJobRoles_Params Parms{};

	Parms.ForCombat = ForCombat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EmployedJobRoles != nullptr)
		*EmployedJobRoles = std::move(Parms.EmployedJobRoles);

}


// Function QtnGame.QtnAIJobComponent.GetAllJobRoles
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnAIJobRole*>       JobRoles                                                         (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ForCombat                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobComponent::GetAllJobRoles(TArray<class UQtnAIJobRole*>* JobRoles, bool ForCombat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "GetAllJobRoles");

	Params::UQtnAIJobComponent_GetAllJobRoles_Params Parms{};

	Parms.ForCombat = ForCombat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (JobRoles != nullptr)
		*JobRoles = std::move(Parms.JobRoles);

}


// Function QtnGame.QtnAIJobComponent.GetAllJobClusters
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnAIJobCluster*>    JobClusters                                                      (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ForCombat                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobComponent::GetAllJobClusters(TArray<class UQtnAIJobCluster*>* JobClusters, bool ForCombat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "GetAllJobClusters");

	Params::UQtnAIJobComponent_GetAllJobClusters_Params Parms{};

	Parms.ForCombat = ForCombat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (JobClusters != nullptr)
		*JobClusters = std::move(Parms.JobClusters);

}


// Function QtnGame.QtnAIJobComponent.AddJobCluster
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        JobClusterID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForCombat                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnAIJobClusterDefinition  JobClusterDefinition                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UQtnAIJobCluster*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAIJobCluster* UQtnAIJobComponent::AddJobCluster(class FName JobClusterID, bool ForCombat, struct FQtnAIJobClusterDefinition& JobClusterDefinition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobComponent", "AddJobCluster");

	Params::UQtnAIJobComponent_AddJobCluster_Params Parms{};

	Parms.JobClusterID = JobClusterID;
	Parms.ForCombat = ForCombat;
	Parms.JobClusterDefinition = JobClusterDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAIJobComponentBaseNative
// (SceneComponent)

class UClass* UQtnAIJobComponentBaseNative::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIJobComponentBaseNative");

	return Clss;
}


// QtnAIJobComponentBaseNative QtnGame.Default__QtnAIJobComponentBaseNative
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIJobComponentBaseNative* UQtnAIJobComponentBaseNative::GetDefaultObj()
{
	static class UQtnAIJobComponentBaseNative* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIJobComponentBaseNative*>(UQtnAIJobComponentBaseNative::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAIJobManager
// (None)

class UClass* UQtnAIJobManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIJobManager");

	return Clss;
}


// QtnAIJobManager QtnGame.Default__QtnAIJobManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIJobManager* UQtnAIJobManager::GetDefaultObj()
{
	static class UQtnAIJobManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIJobManager*>(UQtnAIJobManager::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAIJobRole
// (None)

class UClass* UQtnAIJobRole::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIJobRole");

	return Clss;
}


// QtnAIJobRole QtnGame.Default__QtnAIJobRole
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIJobRole* UQtnAIJobRole::GetDefaultObj()
{
	static class UQtnAIJobRole* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIJobRole*>(UQtnAIJobRole::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAIJobRole.SetRoleEmploymentOpen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantEmploymentOpen                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobRole::SetRoleEmploymentOpen(bool WantEmploymentOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "SetRoleEmploymentOpen");

	Params::UQtnAIJobRole_SetRoleEmploymentOpen_Params Parms{};

	Parms.WantEmploymentOpen = WantEmploymentOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAIJobRole.RequestAIUnEmployment
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobRole::RequestAIUnEmployment()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "RequestAIUnEmployment");

	Params::UQtnAIJobRole_RequestAIUnEmployment_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// DelegateFunction QtnGame.QtnAIJobRole.QtnAIRoleEmployEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyController*          AIController                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlackboardComponent*        BlackboardComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIJobRole::QtnAIRoleEmployEvent__DelegateSignature(class AQtnBodyController* AIController, class UBlackboardComponent* BlackboardComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "QtnAIRoleEmployEvent__DelegateSignature");

	Params::UQtnAIJobRole_QtnAIRoleEmployEvent__DelegateSignature_Params Parms{};

	Parms.AIController = AIController;
	Parms.BlackboardComponent = BlackboardComponent;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAIJobRole.IsRoleEmploymentOpen
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobRole::IsRoleEmploymentOpen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "IsRoleEmploymentOpen");

	Params::UQtnAIJobRole_IsRoleEmploymentOpen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobRole.IsAIJobRoleViable_ServerOnly
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForInitialAdoption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobRole::IsAIJobRoleViable_ServerOnly(class AQtnPawn* Pawn, bool ForInitialAdoption)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "IsAIJobRoleViable_ServerOnly");

	Params::UQtnAIJobRole_IsAIJobRoleViable_ServerOnly_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.ForInitialAdoption = ForInitialAdoption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobRole.GetOwningActor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnAIJobRole::GetOwningActor_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "GetOwningActor_ServerOnly");

	Params::UQtnAIJobRole_GetOwningActor_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobRole.GetEmployedBodyPawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnAIJobRole::GetEmployedBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "GetEmployedBodyPawn");

	Params::UQtnAIJobRole_GetEmployedBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobRole.GetEmployedBodyController
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyController*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyController* UQtnAIJobRole::GetEmployedBodyController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "GetEmployedBodyController");

	Params::UQtnAIJobRole_GetEmployedBodyController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobRole.GetEmployedBlackboard
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBlackboardComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlackboardComponent* UQtnAIJobRole::GetEmployedBlackboard()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "GetEmployedBlackboard");

	Params::UQtnAIJobRole_GetEmployedBlackboard_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIJobRole.ForceAIEmployment
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyController*          AIController                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIJobRole::ForceAIEmployment(class AQtnBodyController* AIController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIJobRole", "ForceAIEmployment");

	Params::UQtnAIJobRole_ForceAIEmployment_Params Parms{};

	Parms.AIController = AIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAINoiseFX
// (None)

class UClass* UQtnAINoiseFX::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAINoiseFX");

	return Clss;
}


// QtnAINoiseFX QtnGame.Default__QtnAINoiseFX
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAINoiseFX* UQtnAINoiseFX::GetDefaultObj()
{
	static class UQtnAINoiseFX* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAINoiseFX*>(UQtnAINoiseFX::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAIPerceptionComponent
// (None)

class UClass* UQtnAIPerceptionComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIPerceptionComponent");

	return Clss;
}


// QtnAIPerceptionComponent QtnGame.Default__QtnAIPerceptionComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIPerceptionComponent* UQtnAIPerceptionComponent::GetDefaultObj()
{
	static class UQtnAIPerceptionComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIPerceptionComponent*>(UQtnAIPerceptionComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAIPerceptionComponent.IsObstructedByDeepSnow
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    OtherPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAIPerceptionComponent::IsObstructedByDeepSnow(class AQtnPawn* OtherPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIPerceptionComponent", "IsObstructedByDeepSnow");

	Params::UQtnAIPerceptionComponent_IsObstructedByDeepSnow_Params Parms{};

	Parms.OtherPawn = OtherPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAIPerceptionComponent.HandleTargetPerceptionUpdated
// (Final, Native, Private)
// Parameters:
// class AActor*                      PActor                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIStimulus                 Stimulus                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnAIPerceptionComponent::HandleTargetPerceptionUpdated(class AActor* PActor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIPerceptionComponent", "HandleTargetPerceptionUpdated");

	Params::UQtnAIPerceptionComponent_HandleTargetPerceptionUpdated_Params Parms{};

	Parms.PActor = PActor;
	Parms.Stimulus = Stimulus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAIPerceptionComponent.GetPerceivedLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AQtnPawn*                    OtherPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnSensoryEvidenceCategorySenseCategory                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PerceivedLocation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AwarenessRatio                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAIPerceptionComponent::GetPerceivedLocation(class AQtnPawn* OtherPawn, enum class EQtnSensoryEvidenceCategory SenseCategory, struct FVector* PerceivedLocation, float* AwarenessRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIPerceptionComponent", "GetPerceivedLocation");

	Params::UQtnAIPerceptionComponent_GetPerceivedLocation_Params Parms{};

	Parms.OtherPawn = OtherPawn;
	Parms.SenseCategory = SenseCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PerceivedLocation != nullptr)
		*PerceivedLocation = std::move(Parms.PerceivedLocation);

	if (AwarenessRatio != nullptr)
		*AwarenessRatio = Parms.AwarenessRatio;

}


// Function QtnGame.QtnAIPerceptionComponent.GetAllKnownEnemies
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AQtnPawn*>            KnownEnemies                                                     (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnAIPerceptionComponent::GetAllKnownEnemies(TArray<class AQtnPawn*>* KnownEnemies)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAIPerceptionComponent", "GetAllKnownEnemies");

	Params::UQtnAIPerceptionComponent_GetAllKnownEnemies_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (KnownEnemies != nullptr)
		*KnownEnemies = std::move(Parms.KnownEnemies);

}


// Class QtnGame.QtnAIPerceptionSystem
// (None)

class UClass* UQtnAIPerceptionSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAIPerceptionSystem");

	return Clss;
}


// QtnAIPerceptionSystem QtnGame.Default__QtnAIPerceptionSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAIPerceptionSystem* UQtnAIPerceptionSystem::GetDefaultObj()
{
	static class UQtnAIPerceptionSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAIPerceptionSystem*>(UQtnAIPerceptionSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAISense_Hearing
// (None)

class UClass* UQtnAISense_Hearing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAISense_Hearing");

	return Clss;
}


// QtnAISense_Hearing QtnGame.Default__QtnAISense_Hearing
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAISense_Hearing* UQtnAISense_Hearing::GetDefaultObj()
{
	static class UQtnAISense_Hearing* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAISense_Hearing*>(UQtnAISense_Hearing::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAISenseConfig_Hearing
// (None)

class UClass* UQtnAISenseConfig_Hearing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAISenseConfig_Hearing");

	return Clss;
}


// QtnAISenseConfig_Hearing QtnGame.Default__QtnAISenseConfig_Hearing
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAISenseConfig_Hearing* UQtnAISenseConfig_Hearing::GetDefaultObj()
{
	static class UQtnAISenseConfig_Hearing* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAISenseConfig_Hearing*>(UQtnAISenseConfig_Hearing::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAISystem
// (None)

class UClass* UQtnAISystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAISystem");

	return Clss;
}


// QtnAISystem QtnGame.Default__QtnAISystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAISystem* UQtnAISystem::GetDefaultObj()
{
	static class UQtnAISystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAISystem*>(UQtnAISystem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAISystem.RemoveAICognitionInhibitor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAISystem::RemoveAICognitionInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAISystem", "RemoveAICognitionInhibitor");

	Params::UQtnAISystem_RemoveAICognitionInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAISystem.GetQtnAISystem_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAISystem*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAISystem* UQtnAISystem::GetQtnAISystem_ServerOnly(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAISystem", "GetQtnAISystem_ServerOnly");

	Params::UQtnAISystem_GetQtnAISystem_ServerOnly_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAISystem.AddAICognitionInhibitor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAISystem::AddAICognitionInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAISystem", "AddAICognitionInhibitor");

	Params::UQtnAISystem_AddAICognitionInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnAISystemSettings
// (None)

class UClass* UQtnAISystemSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAISystemSettings");

	return Clss;
}


// QtnAISystemSettings QtnGame.Default__QtnAISystemSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAISystemSettings* UQtnAISystemSettings::GetDefaultObj()
{
	static class UQtnAISystemSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAISystemSettings*>(UQtnAISystemSettings::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAllyBotManager
// (None)

class UClass* UQtnAllyBotManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAllyBotManager");

	return Clss;
}


// QtnAllyBotManager QtnGame.Default__QtnAllyBotManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAllyBotManager* UQtnAllyBotManager::GetDefaultObj()
{
	static class UQtnAllyBotManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAllyBotManager*>(UQtnAllyBotManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAllyBotManager.SpawnAllyBot_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnBodyPawn>    botClass                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Rotation                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnAllyBotManager::SpawnAllyBot_ServerOnly(TSubclassOf<class AQtnBodyPawn> botClass, const struct FVector& Location, struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "SpawnAllyBot_ServerOnly");

	Params::UQtnAllyBotManager_SpawnAllyBot_ServerOnly_Params Parms{};

	Parms.botClass = botClass;
	Parms.Location = Location;
	Parms.Rotation = Rotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAllyBotManager.RequestPathableDeepSnow_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                RequestingBody                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::RequestPathableDeepSnow_ServerOnly(class AQtnBodyPawn* RequestingBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "RequestPathableDeepSnow_ServerOnly");

	Params::UQtnAllyBotManager_RequestPathableDeepSnow_ServerOnly_Params Parms{};

	Parms.RequestingBody = RequestingBody;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAllyBotManager.RemoveAllyBotInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::RemoveAllyBotInhibitor_ServerOnly(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "RemoveAllyBotInhibitor_ServerOnly");

	Params::UQtnAllyBotManager_RemoveAllyBotInhibitor_ServerOnly_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAllyBotManager.OnToggleBots
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Inhibited                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::OnToggleBots(bool Inhibited)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "OnToggleBots");

	Params::UQtnAllyBotManager_OnToggleBots_Params Parms{};

	Parms.Inhibited = Inhibited;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAllyBotManager.OnInitAllyBotManager_ServerOnly
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnGameState*               OwningGameState                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::OnInitAllyBotManager_ServerOnly(class AQtnGameState* OwningGameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "OnInitAllyBotManager_ServerOnly");

	Params::UQtnAllyBotManager_OnInitAllyBotManager_ServerOnly_Params Parms{};

	Parms.OwningGameState = OwningGameState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAllyBotManager.OnDeepSnowRequestComplete
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                RequestingBody                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     DeepSnowLocation                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::OnDeepSnowRequestComplete(bool Success, class AQtnBodyPawn* RequestingBody, struct FVector& DeepSnowLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "OnDeepSnowRequestComplete");

	Params::UQtnAllyBotManager_OnDeepSnowRequestComplete_Params Parms{};

	Parms.Success = Success;
	Parms.RequestingBody = RequestingBody;
	Parms.DeepSnowLocation = DeepSnowLocation;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAllyBotManager.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "OnDebugDisplay");

	Params::UQtnAllyBotManager_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAllyBotManager.OnBotDestroy
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                DestroyedBot                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::OnBotDestroy(class AQtnBodyPawn* DestroyedBot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "OnBotDestroy");

	Params::UQtnAllyBotManager_OnBotDestroy_Params Parms{};

	Parms.DestroyedBot = DestroyedBot;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAllyBotManager.HandleBotDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                      PDestroyedActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::HandleBotDestroyed(class AActor* PDestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "HandleBotDestroyed");

	Params::UQtnAllyBotManager_HandleBotDestroyed_Params Parms{};

	Parms.PDestroyedActor = PDestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAllyBotManager.GetSpawnedBots_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnBodyPawn*>        ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnBodyPawn*> UQtnAllyBotManager::GetSpawnedBots_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "GetSpawnedBots_ServerOnly");

	Params::UQtnAllyBotManager_GetSpawnedBots_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAllyBotManager.GetOwningGameState
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnGameState*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnGameState* UQtnAllyBotManager::GetOwningGameState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "GetOwningGameState");

	Params::UQtnAllyBotManager_GetOwningGameState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAllyBotManager.GetAllyBotManager_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAllyBotManager*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAllyBotManager* UQtnAllyBotManager::GetAllyBotManager_ServerOnly(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "GetAllyBotManager_ServerOnly");

	Params::UQtnAllyBotManager_GetAllyBotManager_ServerOnly_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAllyBotManager.AreAllyBotsInhibited
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAllyBotManager::AreAllyBotsInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "AreAllyBotsInhibited");

	Params::UQtnAllyBotManager_AreAllyBotsInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAllyBotManager.AreAllyBotsInCombat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAllyBotManager::AreAllyBotsInCombat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "AreAllyBotsInCombat");

	Params::UQtnAllyBotManager_AreAllyBotsInCombat_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAllyBotManager.AddAllyBotInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAllyBotManager::AddAllyBotInhibitor_ServerOnly(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAllyBotManager", "AddAllyBotInhibitor_ServerOnly");

	Params::UQtnAllyBotManager_AddAllyBotInhibitor_ServerOnly_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnAnimNotify
// (None)

class UClass* UQtnAnimNotify::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotify");

	return Clss;
}


// QtnAnimNotify QtnGame.Default__QtnAnimNotify
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotify* UQtnAnimNotify::GetDefaultObj()
{
	static class UQtnAnimNotify* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotify*>(UQtnAnimNotify::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAnimNotify.OnVerbNotify
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    AffectedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    EncompassingVerb                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAnimNotify::OnVerbNotify(class AQtnPawn* AffectedPawn, class UQtnVerb* EncompassingVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAnimNotify", "OnVerbNotify");

	Params::UQtnAnimNotify_OnVerbNotify_Params Parms{};

	Parms.AffectedPawn = AffectedPawn;
	Parms.EncompassingVerb = EncompassingVerb;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnAnimNotify_PlaySound
// (None)

class UClass* UQtnAnimNotify_PlaySound::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotify_PlaySound");

	return Clss;
}


// QtnAnimNotify_PlaySound QtnGame.Default__QtnAnimNotify_PlaySound
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotify_PlaySound* UQtnAnimNotify_PlaySound::GetDefaultObj()
{
	static class UQtnAnimNotify_PlaySound* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotify_PlaySound*>(UQtnAnimNotify_PlaySound::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyBeginEffect
// (None)

class UClass* UQtnAnimNotifyBeginEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyBeginEffect");

	return Clss;
}


// QtnAnimNotifyBeginEffect QtnGame.Default__QtnAnimNotifyBeginEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyBeginEffect* UQtnAnimNotifyBeginEffect::GetDefaultObj()
{
	static class UQtnAnimNotifyBeginEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyBeginEffect*>(UQtnAnimNotifyBeginEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyDurationEffect
// (None)

class UClass* UQtnAnimNotifyDurationEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyDurationEffect");

	return Clss;
}


// QtnAnimNotifyDurationEffect QtnGame.Default__QtnAnimNotifyDurationEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyDurationEffect* UQtnAnimNotifyDurationEffect::GetDefaultObj()
{
	static class UQtnAnimNotifyDurationEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyDurationEffect*>(UQtnAnimNotifyDurationEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyEndEffect
// (None)

class UClass* UQtnAnimNotifyEndEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyEndEffect");

	return Clss;
}


// QtnAnimNotifyEndEffect QtnGame.Default__QtnAnimNotifyEndEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyEndEffect* UQtnAnimNotifyEndEffect::GetDefaultObj()
{
	static class UQtnAnimNotifyEndEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyEndEffect*>(UQtnAnimNotifyEndEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyEvent
// (None)

class UClass* UQtnAnimNotifyEvent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyEvent");

	return Clss;
}


// QtnAnimNotifyEvent QtnGame.Default__QtnAnimNotifyEvent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyEvent* UQtnAnimNotifyEvent::GetDefaultObj()
{
	static class UQtnAnimNotifyEvent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyEvent*>(UQtnAnimNotifyEvent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyItemAction
// (None)

class UClass* UQtnAnimNotifyItemAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyItemAction");

	return Clss;
}


// QtnAnimNotifyItemAction QtnGame.Default__QtnAnimNotifyItemAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyItemAction* UQtnAnimNotifyItemAction::GetDefaultObj()
{
	static class UQtnAnimNotifyItemAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyItemAction*>(UQtnAnimNotifyItemAction::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyItemEquip
// (None)

class UClass* UQtnAnimNotifyItemEquip::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyItemEquip");

	return Clss;
}


// QtnAnimNotifyItemEquip QtnGame.Default__QtnAnimNotifyItemEquip
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyItemEquip* UQtnAnimNotifyItemEquip::GetDefaultObj()
{
	static class UQtnAnimNotifyItemEquip* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyItemEquip*>(UQtnAnimNotifyItemEquip::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyItemUnEquip
// (None)

class UClass* UQtnAnimNotifyItemUnEquip::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyItemUnEquip");

	return Clss;
}


// QtnAnimNotifyItemUnEquip QtnGame.Default__QtnAnimNotifyItemUnEquip
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyItemUnEquip* UQtnAnimNotifyItemUnEquip::GetDefaultObj()
{
	static class UQtnAnimNotifyItemUnEquip* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyItemUnEquip*>(UQtnAnimNotifyItemUnEquip::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyRagdoll
// (None)

class UClass* UQtnAnimNotifyRagdoll::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyRagdoll");

	return Clss;
}


// QtnAnimNotifyRagdoll QtnGame.Default__QtnAnimNotifyRagdoll
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyRagdoll* UQtnAnimNotifyRagdoll::GetDefaultObj()
{
	static class UQtnAnimNotifyRagdoll* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyRagdoll*>(UQtnAnimNotifyRagdoll::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimNotifyVO
// (None)

class UClass* UQtnAnimNotifyVO::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimNotifyVO");

	return Clss;
}


// QtnAnimNotifyVO QtnGame.Default__QtnAnimNotifyVO
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimNotifyVO* UQtnAnimNotifyVO::GetDefaultObj()
{
	static class UQtnAnimNotifyVO* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimNotifyVO*>(UQtnAnimNotifyVO::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindow
// (None)

class UClass* UQtnAnimWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindow");

	return Clss;
}


// QtnAnimWindow QtnGame.Default__QtnAnimWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindow* UQtnAnimWindow::GetDefaultObj()
{
	static class UQtnAnimWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindow*>(UQtnAnimWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAnimWindow.OnVerbWindowEnd
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    AffectedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    EncompassingVerb                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAnimWindow::OnVerbWindowEnd(class AQtnPawn* AffectedPawn, class UQtnVerb* EncompassingVerb, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAnimWindow", "OnVerbWindowEnd");

	Params::UQtnAnimWindow_OnVerbWindowEnd_Params Parms{};

	Parms.AffectedPawn = AffectedPawn;
	Parms.EncompassingVerb = EncompassingVerb;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAnimWindow.OnVerbWindowBegin
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    AffectedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    EncompassingVerb                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAnimWindow::OnVerbWindowBegin(class AQtnPawn* AffectedPawn, class UQtnVerb* EncompassingVerb, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAnimWindow", "OnVerbWindowBegin");

	Params::UQtnAnimWindow_OnVerbWindowBegin_Params Parms{};

	Parms.AffectedPawn = AffectedPawn;
	Parms.EncompassingVerb = EncompassingVerb;
	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnAnimWindowAITrackingImmunity
// (None)

class UClass* UQtnAnimWindowAITrackingImmunity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowAITrackingImmunity");

	return Clss;
}


// QtnAnimWindowAITrackingImmunity QtnGame.Default__QtnAnimWindowAITrackingImmunity
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowAITrackingImmunity* UQtnAnimWindowAITrackingImmunity::GetDefaultObj()
{
	static class UQtnAnimWindowAITrackingImmunity* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowAITrackingImmunity*>(UQtnAnimWindowAITrackingImmunity::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowAllowCancel
// (None)

class UClass* UQtnAnimWindowAllowCancel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowAllowCancel");

	return Clss;
}


// QtnAnimWindowAllowCancel QtnGame.Default__QtnAnimWindowAllowCancel
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowAllowCancel* UQtnAnimWindowAllowCancel::GetDefaultObj()
{
	static class UQtnAnimWindowAllowCancel* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowAllowCancel*>(UQtnAnimWindowAllowCancel::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowBlock
// (None)

class UClass* UQtnAnimWindowBlock::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowBlock");

	return Clss;
}


// QtnAnimWindowBlock QtnGame.Default__QtnAnimWindowBlock
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowBlock* UQtnAnimWindowBlock::GetDefaultObj()
{
	static class UQtnAnimWindowBlock* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowBlock*>(UQtnAnimWindowBlock::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowDamageImmunity
// (None)

class UClass* UQtnAnimWindowDamageImmunity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowDamageImmunity");

	return Clss;
}


// QtnAnimWindowDamageImmunity QtnGame.Default__QtnAnimWindowDamageImmunity
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowDamageImmunity* UQtnAnimWindowDamageImmunity::GetDefaultObj()
{
	static class UQtnAnimWindowDamageImmunity* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowDamageImmunity*>(UQtnAnimWindowDamageImmunity::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowInput
// (None)

class UClass* UQtnAnimWindowInput::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowInput");

	return Clss;
}


// QtnAnimWindowInput QtnGame.Default__QtnAnimWindowInput
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowInput* UQtnAnimWindowInput::GetDefaultObj()
{
	static class UQtnAnimWindowInput* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowInput*>(UQtnAnimWindowInput::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowMelee
// (None)

class UClass* UQtnAnimWindowMelee::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowMelee");

	return Clss;
}


// QtnAnimWindowMelee QtnGame.Default__QtnAnimWindowMelee
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowMelee* UQtnAnimWindowMelee::GetDefaultObj()
{
	static class UQtnAnimWindowMelee* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowMelee*>(UQtnAnimWindowMelee::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowParry
// (None)

class UClass* UQtnAnimWindowParry::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowParry");

	return Clss;
}


// QtnAnimWindowParry QtnGame.Default__QtnAnimWindowParry
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowParry* UQtnAnimWindowParry::GetDefaultObj()
{
	static class UQtnAnimWindowParry* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowParry*>(UQtnAnimWindowParry::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowRotation
// (None)

class UClass* UQtnAnimWindowRotation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowRotation");

	return Clss;
}


// QtnAnimWindowRotation QtnGame.Default__QtnAnimWindowRotation
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowRotation* UQtnAnimWindowRotation::GetDefaultObj()
{
	static class UQtnAnimWindowRotation* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowRotation*>(UQtnAnimWindowRotation::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowTransition
// (None)

class UClass* UQtnAnimWindowTransition::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowTransition");

	return Clss;
}


// QtnAnimWindowTransition QtnGame.Default__QtnAnimWindowTransition
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowTransition* UQtnAnimWindowTransition::GetDefaultObj()
{
	static class UQtnAnimWindowTransition* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowTransition*>(UQtnAnimWindowTransition::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAnimWindowTranslation
// (None)

class UClass* UQtnAnimWindowTranslation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAnimWindowTranslation");

	return Clss;
}


// QtnAnimWindowTranslation QtnGame.Default__QtnAnimWindowTranslation
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAnimWindowTranslation* UQtnAnimWindowTranslation::GetDefaultObj()
{
	static class UQtnAnimWindowTranslation* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAnimWindowTranslation*>(UQtnAnimWindowTranslation::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAssetManager
// (None)

class UClass* UQtnAssetManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAssetManager");

	return Clss;
}


// QtnAssetManager QtnGame.Default__QtnAssetManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAssetManager* UQtnAssetManager::GetDefaultObj()
{
	static class UQtnAssetManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAssetManager*>(UQtnAssetManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAssetManager.IsFullGameInstalled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAssetManager::IsFullGameInstalled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAssetManager", "IsFullGameInstalled");

	Params::UQtnAssetManager_IsFullGameInstalled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAsyncInterpolateValue
// (None)

class UClass* UQtnAsyncInterpolateValue::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAsyncInterpolateValue");

	return Clss;
}


// QtnAsyncInterpolateValue QtnGame.Default__QtnAsyncInterpolateValue
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAsyncInterpolateValue* UQtnAsyncInterpolateValue::GetDefaultObj()
{
	static class UQtnAsyncInterpolateValue* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAsyncInterpolateValue*>(UQtnAsyncInterpolateValue::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAsyncInterpolateValue.TickTask
// (Final, Native, Private)
// Parameters:

void UQtnAsyncInterpolateValue::TickTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValue", "TickTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnAsyncInterpolateValue.QtnFloatOutputPin__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAsyncInterpolateValue::QtnFloatOutputPin__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValue", "QtnFloatOutputPin__DelegateSignature");

	Params::UQtnAsyncInterpolateValue_QtnFloatOutputPin__DelegateSignature_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAsyncInterpolateValue.CompleteTask
// (Final, Native, Private)
// Parameters:

void UQtnAsyncInterpolateValue::CompleteTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValue", "CompleteTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAsyncInterpolateValue.AsyncInterpolateValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartValue                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TargetValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                OptionalTimerHandle                                              (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAsyncInterpolateValue*   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAsyncInterpolateValue* UQtnAsyncInterpolateValue::AsyncInterpolateValue(class UObject* WorldContextObject, float StartValue, float TargetValue, float Duration, struct FTimerHandle& OptionalTimerHandle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValue", "AsyncInterpolateValue");

	Params::UQtnAsyncInterpolateValue_AsyncInterpolateValue_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartValue = StartValue;
	Parms.TargetValue = TargetValue;
	Parms.Duration = Duration;
	Parms.OptionalTimerHandle = OptionalTimerHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAsyncInterpolateValueRealtime
// (None)

class UClass* UQtnAsyncInterpolateValueRealtime::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAsyncInterpolateValueRealtime");

	return Clss;
}


// QtnAsyncInterpolateValueRealtime QtnGame.Default__QtnAsyncInterpolateValueRealtime
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAsyncInterpolateValueRealtime* UQtnAsyncInterpolateValueRealtime::GetDefaultObj()
{
	static class UQtnAsyncInterpolateValueRealtime* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAsyncInterpolateValueRealtime*>(UQtnAsyncInterpolateValueRealtime::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAsyncInterpolateValueRealtime.TickTask
// (Final, Native, Private)
// Parameters:
// float                              Delta                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAsyncInterpolateValueRealtime::TickTask(float Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValueRealtime", "TickTask");

	Params::UQtnAsyncInterpolateValueRealtime_TickTask_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// DelegateFunction QtnGame.QtnAsyncInterpolateValueRealtime.QtnFloatOutputPin__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAsyncInterpolateValueRealtime::QtnFloatOutputPin__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValueRealtime", "QtnFloatOutputPin__DelegateSignature");

	Params::UQtnAsyncInterpolateValueRealtime_QtnFloatOutputPin__DelegateSignature_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAsyncInterpolateValueRealtime.CompleteTask
// (Final, Native, Private)
// Parameters:

void UQtnAsyncInterpolateValueRealtime::CompleteTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValueRealtime", "CompleteTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAsyncInterpolateValueRealtime.AsyncInterpolateValueRealtime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartValue                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TargetValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDelegateHandleBlueprint    OptionalHandle                                                   (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UQtnAsyncInterpolateValueRealtime*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAsyncInterpolateValueRealtime* UQtnAsyncInterpolateValueRealtime::AsyncInterpolateValueRealtime(class UObject* WorldContextObject, float StartValue, float TargetValue, float Duration, struct FDelegateHandleBlueprint& OptionalHandle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncInterpolateValueRealtime", "AsyncInterpolateValueRealtime");

	Params::UQtnAsyncInterpolateValueRealtime_AsyncInterpolateValueRealtime_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StartValue = StartValue;
	Parms.TargetValue = TargetValue;
	Parms.Duration = Duration;
	Parms.OptionalHandle = OptionalHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.DelegateHandleBlueprintLibrary
// (None)

class UClass* UDelegateHandleBlueprintLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("DelegateHandleBlueprintLibrary");

	return Clss;
}


// DelegateHandleBlueprintLibrary QtnGame.Default__DelegateHandleBlueprintLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UDelegateHandleBlueprintLibrary* UDelegateHandleBlueprintLibrary::GetDefaultObj()
{
	static class UDelegateHandleBlueprintLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UDelegateHandleBlueprintLibrary*>(UDelegateHandleBlueprintLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.DelegateHandleBlueprintLibrary.ClearAndInvalidateDelegateHandleBlueprint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDelegateHandleBlueprint    Handle                                                           (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDelegateHandleBlueprintLibrary::ClearAndInvalidateDelegateHandleBlueprint(struct FDelegateHandleBlueprint& Handle, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("DelegateHandleBlueprintLibrary", "ClearAndInvalidateDelegateHandleBlueprint");

	Params::UDelegateHandleBlueprintLibrary_ClearAndInvalidateDelegateHandleBlueprint_Params Parms{};

	Parms.Handle = Handle;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnAsyncWaitUntilMaterialFullyStreamed
// (None)

class UClass* UQtnAsyncWaitUntilMaterialFullyStreamed::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAsyncWaitUntilMaterialFullyStreamed");

	return Clss;
}


// QtnAsyncWaitUntilMaterialFullyStreamed QtnGame.Default__QtnAsyncWaitUntilMaterialFullyStreamed
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAsyncWaitUntilMaterialFullyStreamed* UQtnAsyncWaitUntilMaterialFullyStreamed::GetDefaultObj()
{
	static class UQtnAsyncWaitUntilMaterialFullyStreamed* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAsyncWaitUntilMaterialFullyStreamed*>(UQtnAsyncWaitUntilMaterialFullyStreamed::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAsyncWaitUntilMaterialFullyStreamed.TickTask
// (Final, Native, Private)
// Parameters:

void UQtnAsyncWaitUntilMaterialFullyStreamed::TickTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncWaitUntilMaterialFullyStreamed", "TickTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnAsyncWaitUntilMaterialFullyStreamed.QtnExecuteOutputPin__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void UQtnAsyncWaitUntilMaterialFullyStreamed::QtnExecuteOutputPin__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncWaitUntilMaterialFullyStreamed", "QtnExecuteOutputPin__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnAsyncWaitUntilMaterialFullyStreamed.CompleteTask
// (Final, Native, Private)
// Parameters:

void UQtnAsyncWaitUntilMaterialFullyStreamed::CompleteTask()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncWaitUntilMaterialFullyStreamed", "CompleteTask");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAsyncWaitUntilMaterialFullyStreamed.AsyncWaitUntilMaterialFullyStreamed
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          TargetMaterial                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimerHandle                OptionalTimerHandle                                              (Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAsyncWaitUntilMaterialFullyStreamed*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAsyncWaitUntilMaterialFullyStreamed* UQtnAsyncWaitUntilMaterialFullyStreamed::AsyncWaitUntilMaterialFullyStreamed(class UObject* WorldContextObject, class UMaterialInterface* TargetMaterial, struct FTimerHandle& OptionalTimerHandle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAsyncWaitUntilMaterialFullyStreamed", "AsyncWaitUntilMaterialFullyStreamed");

	Params::UQtnAsyncWaitUntilMaterialFullyStreamed_AsyncWaitUntilMaterialFullyStreamed_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetMaterial = TargetMaterial;
	Parms.OptionalTimerHandle = OptionalTimerHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAttribute
// (None)

class UClass* UQtnAttribute::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttribute");

	return Clss;
}


// QtnAttribute QtnGame.Default__QtnAttribute
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttribute* UQtnAttribute::GetDefaultObj()
{
	static class UQtnAttribute* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttribute*>(UQtnAttribute::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAttribute.OverrideSetCurrentValue
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnAttribute::OverrideSetCurrentValue(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OverrideSetCurrentValue");

	Params::UQtnAttribute_OverrideSetCurrentValue_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttribute.OnTriggerHit
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Threshold                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnAttributeThresholdDirectionDirection                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttribute::OnTriggerHit(int32 Index, float Threshold, enum class EQtnAttributeThresholdDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OnTriggerHit");

	Params::UQtnAttribute_OnTriggerHit_Params Parms{};

	Parms.Index = Index;
	Parms.Threshold = Threshold;
	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAttribute.OnTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttribute::OnTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OnTick");

	Params::UQtnAttribute_OnTick_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAttribute.OnRep_CurrentValue
// (Final, Native, Private)
// Parameters:

void UQtnAttribute::OnRep_CurrentValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OnRep_CurrentValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttribute.OnRemoved
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnAttribute::OnRemoved()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OnRemoved");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnAttribute.OnIncreased
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              AmountIncreased                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttribute::OnIncreased(float AmountIncreased)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OnIncreased");

	Params::UQtnAttribute_OnIncreased_Params Parms{};

	Parms.AmountIncreased = AmountIncreased;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAttribute.OnDecreased
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              AmountDecreased                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttribute::OnDecreased(float AmountDecreased)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OnDecreased");

	Params::UQtnAttribute_OnDecreased_Params Parms{};

	Parms.AmountDecreased = AmountDecreased;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAttribute.OnAdded
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnAttribute::OnAdded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "OnAdded");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnAttribute.HasAuthority
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EQtnOutputAuthorityEnum OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttribute::HasAuthority(enum class EQtnOutputAuthorityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "HasAuthority");

	Params::UQtnAttribute_HasAuthority_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnAttribute.GetRange
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               UseDefaultRange                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinValue                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxValue                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttribute::GetRange(bool UseDefaultRange, float* MinValue, float* MaxValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "GetRange");

	Params::UQtnAttribute_GetRange_Params Parms{};

	Parms.UseDefaultRange = UseDefaultRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MinValue != nullptr)
		*MinValue = Parms.MinValue;

	if (MaxValue != nullptr)
		*MaxValue = Parms.MaxValue;

}


// Function QtnGame.QtnAttribute.GetOwningObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UQtnAttribute::GetOwningObject()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "GetOwningObject");

	Params::UQtnAttribute_GetOwningObject_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttribute.GetOwningInterface
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class IQtnAttributeContainerInterface>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

TScriptInterface<class IQtnAttributeContainerInterface> UQtnAttribute::GetOwningInterface()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "GetOwningInterface");

	Params::UQtnAttribute_GetOwningInterface_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttribute.GetCurrentValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ApplyModifiers                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnAttribute::GetCurrentValue(bool ApplyModifiers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "GetCurrentValue");

	Params::UQtnAttribute_GetCurrentValue_Params Parms{};

	Parms.ApplyModifiers = ApplyModifiers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttribute.GetCurrentRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ApplyModifiers                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnAttribute::GetCurrentRatio(bool ApplyModifiers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "GetCurrentRatio");

	Params::UQtnAttribute_GetCurrentRatio_Params Parms{};

	Parms.ApplyModifiers = ApplyModifiers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttribute.GetAffectedBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnAttribute::GetAffectedBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttribute", "GetAffectedBody");

	Params::UQtnAttribute_GetAffectedBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAttributeComponent
// (None)

class UClass* UQtnAttributeComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributeComponent");

	return Clss;
}


// QtnAttributeComponent QtnGame.Default__QtnAttributeComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributeComponent* UQtnAttributeComponent::GetDefaultObj()
{
	static class UQtnAttributeComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributeComponent*>(UQtnAttributeComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAttributeComponent.OnRep_AttributeContainer
// (Final, Native, Private)
// Parameters:

void UQtnAttributeComponent::OnRep_AttributeContainer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeComponent", "OnRep_AttributeContainer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributeComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeComponent", "OnDebugDisplay");

	Params::UQtnAttributeComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnAttributeContainerInterface
// (None)

class UClass* IQtnAttributeContainerInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributeContainerInterface");

	return Clss;
}


// QtnAttributeContainerInterface QtnGame.Default__QtnAttributeContainerInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnAttributeContainerInterface* IQtnAttributeContainerInterface::GetDefaultObj()
{
	static class IQtnAttributeContainerInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnAttributeContainerInterface*>(IQtnAttributeContainerInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAttributeContainerInterface.UnTriggerModifierEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttributeModifierEvent>AttributeModifierEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::UnTriggerModifierEvent(TSubclassOf<class UQtnAttributeModifierEvent> AttributeModifierEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "UnTriggerModifierEvent");

	Params::IQtnAttributeContainerInterface_UnTriggerModifierEvent_Params Parms{};

	Parms.AttributeModifierEvent = AttributeModifierEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.UnlockAttribute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::UnlockAttribute(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "UnlockAttribute");

	Params::IQtnAttributeContainerInterface_UnlockAttribute_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.TriggerModifierEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttributeModifierEvent>AttributeModifierEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::TriggerModifierEvent(TSubclassOf<class UQtnAttributeModifierEvent> AttributeModifierEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "TriggerModifierEvent");

	Params::IQtnAttributeContainerInterface_TriggerModifierEvent_Params Parms{};

	Parms.AttributeModifierEvent = AttributeModifierEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.SetAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::SetAttributeValue(TSubclassOf<class UQtnAttribute> Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "SetAttributeValue");

	Params::IQtnAttributeContainerInterface_SetAttributeValue_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.SetAttributeMin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewMin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::SetAttributeMin(TSubclassOf<class UQtnAttribute> Attribute, float NewMin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "SetAttributeMin");

	Params::IQtnAttributeContainerInterface_SetAttributeMin_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.NewMin = NewMin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.SetAttributeMax
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NewMax                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::SetAttributeMax(TSubclassOf<class UQtnAttribute> Attribute, float NewMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "SetAttributeMax");

	Params::IQtnAttributeContainerInterface_SetAttributeMax_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.NewMax = NewMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.RemoveModifier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttributeModifier>Modifier                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::RemoveModifier(TSubclassOf<class UQtnAttributeModifier> Modifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "RemoveModifier");

	Params::IQtnAttributeContainerInterface_RemoveModifier_Params Parms{};

	Parms.Modifier = Modifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.RemoveAttribute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::RemoveAttribute(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "RemoveAttribute");

	Params::IQtnAttributeContainerInterface_RemoveAttribute_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.OnAttributeRemoved
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   AttributeClass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::OnAttributeRemoved(TSubclassOf<class UQtnAttribute> AttributeClass, class UQtnAttribute* Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "OnAttributeRemoved");

	Params::IQtnAttributeContainerInterface_OnAttributeRemoved_Params Parms{};

	Parms.AttributeClass = AttributeClass;
	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.OnAttributeAdded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   AttributeClass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::OnAttributeAdded(TSubclassOf<class UQtnAttribute> AttributeClass, class UQtnAttribute* Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "OnAttributeAdded");

	Params::IQtnAttributeContainerInterface_OnAttributeAdded_Params Parms{};

	Parms.AttributeClass = AttributeClass;
	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.LockAttribute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::LockAttribute(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "LockAttribute");

	Params::IQtnAttributeContainerInterface_LockAttribute_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.IsModifierEventActive
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttributeModifierEvent>AttributeModifierEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnAttributeContainerInterface::IsModifierEventActive(TSubclassOf<class UQtnAttributeModifierEvent> AttributeModifierEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "IsModifierEventActive");

	Params::IQtnAttributeContainerInterface_IsModifierEventActive_Params Parms{};

	Parms.AttributeModifierEvent = AttributeModifierEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.IncreaseAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::IncreaseAttributeValue(TSubclassOf<class UQtnAttribute> Attribute, float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "IncreaseAttributeValue");

	Params::IQtnAttributeContainerInterface_IncreaseAttributeValue_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.HasModifier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttributeModifier>Modifier                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnAttributeContainerInterface::HasModifier(TSubclassOf<class UQtnAttributeModifier> Modifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "HasModifier");

	Params::IQtnAttributeContainerInterface_HasModifier_Params Parms{};

	Parms.Modifier = Modifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.HasDefaultAttribute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnAttributeContainerInterface::HasDefaultAttribute(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "HasDefaultAttribute");

	Params::IQtnAttributeContainerInterface_HasDefaultAttribute_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.HasAttribute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnAttributeContainerInterface::HasAttribute(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "HasAttribute");

	Params::IQtnAttributeContainerInterface_HasAttribute_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetReferenceActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* IQtnAttributeContainerInterface::GetReferenceActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetReferenceActor");

	Params::IQtnAttributeContainerInterface_GetReferenceActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetDefaultAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IQtnAttributeContainerInterface::GetDefaultAttributeValue(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetDefaultAttributeValue");

	Params::IQtnAttributeContainerInterface_GetDefaultAttributeValue_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyModifiers                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IQtnAttributeContainerInterface::GetAttributeValue(TSubclassOf<class UQtnAttribute> Attribute, bool ApplyModifiers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAttributeValue");

	Params::IQtnAttributeContainerInterface_GetAttributeValue_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.ApplyModifiers = ApplyModifiers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAttributes
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<TSubclassOf<class UQtnAttribute>>Attributes                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<class UQtnAttribute*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQtnAttribute*> IQtnAttributeContainerInterface::GetAttributes(TArray<TSubclassOf<class UQtnAttribute>>& Attributes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAttributes");

	Params::IQtnAttributeContainerInterface_GetAttributes_Params Parms{};

	Parms.Attributes = Attributes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAttributeRange
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ClampedMin                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ClampedMax                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnRangedFloat IQtnAttributeContainerInterface::GetAttributeRange(TSubclassOf<class UQtnAttribute> Attribute, bool* ClampedMin, bool* ClampedMax)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAttributeRange");

	Params::IQtnAttributeContainerInterface_GetAttributeRange_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ClampedMin != nullptr)
		*ClampedMin = Parms.ClampedMin;

	if (ClampedMax != nullptr)
		*ClampedMax = Parms.ClampedMax;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAttributeMin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IQtnAttributeContainerInterface::GetAttributeMin(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAttributeMin");

	Params::IQtnAttributeContainerInterface_GetAttributeMin_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAttributeMax
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IQtnAttributeContainerInterface::GetAttributeMax(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAttributeMax");

	Params::IQtnAttributeContainerInterface_GetAttributeMax_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAttributeClassByName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                        AttributeName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnAttribute>   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnAttribute> IQtnAttributeContainerInterface::GetAttributeClassByName(class FName AttributeName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAttributeClassByName");

	Params::IQtnAttributeContainerInterface_GetAttributeClassByName_Params Parms{};

	Parms.AttributeName = AttributeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAttribute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAttribute*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAttribute* IQtnAttributeContainerInterface::GetAttribute(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAttribute");

	Params::IQtnAttributeContainerInterface_GetAttribute_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.GetAllAttributes
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnAttribute*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQtnAttribute*> IQtnAttributeContainerInterface::GetAllAttributes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "GetAllAttributes");

	Params::IQtnAttributeContainerInterface_GetAllAttributes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.DecreaseAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::DecreaseAttributeValue(TSubclassOf<class UQtnAttribute> Attribute, float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "DecreaseAttributeValue");

	Params::IQtnAttributeContainerInterface_DecreaseAttributeValue_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.ApplyModifiersToEnumAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// enum class EQtnAttributeEnum       EnumAttribute                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IQtnAttributeContainerInterface::ApplyModifiersToEnumAttributeValue(enum class EQtnAttributeEnum EnumAttribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "ApplyModifiersToEnumAttributeValue");

	Params::IQtnAttributeContainerInterface_ApplyModifiersToEnumAttributeValue_Params Parms{};

	Parms.EnumAttribute = EnumAttribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.ApplyModifiersToAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IQtnAttributeContainerInterface::ApplyModifiersToAttributeValue(TSubclassOf<class UQtnAttribute> Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "ApplyModifiersToAttributeValue");

	Params::IQtnAttributeContainerInterface_ApplyModifiersToAttributeValue_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeContainerInterface.AdjustAttributeValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::AdjustAttributeValue(TSubclassOf<class UQtnAttribute> Attribute, float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "AdjustAttributeValue");

	Params::IQtnAttributeContainerInterface_AdjustAttributeValue_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.AddModifier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttributeModifier>Modifier                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnAttributeContainerInterface::AddModifier(TSubclassOf<class UQtnAttributeModifier> Modifier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "AddModifier");

	Params::IQtnAttributeContainerInterface_AddModifier_Params Parms{};

	Parms.Modifier = Modifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeContainerInterface.AddAttribute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnAttribute>   Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAttribute*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAttribute* IQtnAttributeContainerInterface::AddAttribute(TSubclassOf<class UQtnAttribute> Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeContainerInterface", "AddAttribute");

	Params::IQtnAttributeContainerInterface_AddAttribute_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAttributeHitReactionThreshold
// (None)

class UClass* UQtnAttributeHitReactionThreshold::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributeHitReactionThreshold");

	return Clss;
}


// QtnAttributeHitReactionThreshold QtnGame.Default__QtnAttributeHitReactionThreshold
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributeHitReactionThreshold* UQtnAttributeHitReactionThreshold::GetDefaultObj()
{
	static class UQtnAttributeHitReactionThreshold* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributeHitReactionThreshold*>(UQtnAttributeHitReactionThreshold::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAttributeModifier
// (None)

class UClass* UQtnAttributeModifier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributeModifier");

	return Clss;
}


// QtnAttributeModifier QtnGame.Default__QtnAttributeModifier
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributeModifier* UQtnAttributeModifier::GetDefaultObj()
{
	static class UQtnAttributeModifier* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributeModifier*>(UQtnAttributeModifier::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAttributeModifierEvent
// (None)

class UClass* UQtnAttributeModifierEvent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributeModifierEvent");

	return Clss;
}


// QtnAttributeModifierEvent QtnGame.Default__QtnAttributeModifierEvent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributeModifierEvent* UQtnAttributeModifierEvent::GetDefaultObj()
{
	static class UQtnAttributeModifierEvent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributeModifierEvent*>(UQtnAttributeModifierEvent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAttributePinkEye
// (None)

class UClass* UQtnAttributePinkEye::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributePinkEye");

	return Clss;
}


// QtnAttributePinkEye QtnGame.Default__QtnAttributePinkEye
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributePinkEye* UQtnAttributePinkEye::GetDefaultObj()
{
	static class UQtnAttributePinkEye* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributePinkEye*>(UQtnAttributePinkEye::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAttributePipWidget
// (None)

class UClass* UQtnAttributePipWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributePipWidget");

	return Clss;
}


// QtnAttributePipWidget QtnGame.Default__QtnAttributePipWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributePipWidget* UQtnAttributePipWidget::GetDefaultObj()
{
	static class UQtnAttributePipWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributePipWidget*>(UQtnAttributePipWidget::StaticClass()->DefaultObject);

	return Default;
}


// DelegateFunction QtnGame.QtnAttributePipWidget.QtnAttributePipWidgetEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAttributePipWidget*      SourceWidget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributePipWidget::QtnAttributePipWidgetEvent__DelegateSignature(class UQtnAttributePipWidget* SourceWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "QtnAttributePipWidgetEvent__DelegateSignature");

	Params::UQtnAttributePipWidget_QtnAttributePipWidgetEvent__DelegateSignature_Params Parms{};

	Parms.SourceWidget = SourceWidget;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnAttributePipWidget.QtnAttributePipClassWidgetEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAttributePipWidget*      SourceWidget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnAttribute>   AttributeClass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributePipWidget::QtnAttributePipClassWidgetEvent__DelegateSignature(class UQtnAttributePipWidget* SourceWidget, TSubclassOf<class UQtnAttribute> AttributeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "QtnAttributePipClassWidgetEvent__DelegateSignature");

	Params::UQtnAttributePipWidget_QtnAttributePipClassWidgetEvent__DelegateSignature_Params Parms{};

	Parms.SourceWidget = SourceWidget;
	Parms.AttributeClass = AttributeClass;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAttributePipWidget.OnAttributeValueMetThreshold
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributePipWidget::OnAttributeValueMetThreshold(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "OnAttributeValueMetThreshold");

	Params::UQtnAttributePipWidget_OnAttributeValueMetThreshold_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributePipWidget.OnAttributeValueDepleted
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributePipWidget::OnAttributeValueDepleted(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "OnAttributeValueDepleted");

	Params::UQtnAttributePipWidget_OnAttributeValueDepleted_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributePipWidget.OnAttributeValueChanged
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributePipWidget::OnAttributeValueChanged(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "OnAttributeValueChanged");

	Params::UQtnAttributePipWidget_OnAttributeValueChanged_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributePipWidget.OnAttributeRemoved
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributePipWidget::OnAttributeRemoved(class UQtnAttribute* Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "OnAttributeRemoved");

	Params::UQtnAttributePipWidget_OnAttributeRemoved_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributePipWidget.InitializeAttributePipWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnAttributePipInitializationParametersInitializationParameters                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnAttributePipWidget::InitializeAttributePipWidget(struct FQtnAttributePipInitializationParameters& InitializationParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "InitializeAttributePipWidget");

	Params::UQtnAttributePipWidget_InitializeAttributePipWidget_Params Parms{};

	Parms.InitializationParameters = InitializationParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributePipWidget.GetAssociatedAttribute
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnAttribute*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAttribute* UQtnAttributePipWidget::GetAssociatedAttribute()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributePipWidget", "GetAssociatedAttribute");

	Params::UQtnAttributePipWidget_GetAssociatedAttribute_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAttributeRage
// (None)

class UClass* UQtnAttributeRage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributeRage");

	return Clss;
}


// QtnAttributeRage QtnGame.Default__QtnAttributeRage
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributeRage* UQtnAttributeRage::GetDefaultObj()
{
	static class UQtnAttributeRage* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributeRage*>(UQtnAttributeRage::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAttributeRage.SetUpgrade_Ragaholic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributeRage::SetUpgrade_Ragaholic(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeRage", "SetUpgrade_Ragaholic");

	Params::UQtnAttributeRage_SetUpgrade_Ragaholic_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeRage.SetRagaholic_Scaler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAttributeRage::SetRagaholic_Scaler(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeRage", "SetRagaholic_Scaler");

	Params::UQtnAttributeRage_SetRagaholic_Scaler_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAttributeRage.GetUpgrade_Ragaholic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnAttributeRage::GetUpgrade_Ragaholic()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeRage", "GetUpgrade_Ragaholic");

	Params::UQtnAttributeRage_GetUpgrade_Ragaholic_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnAttributeRage.GetRagaholic_Scaler
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnAttributeRage::GetRagaholic_Scaler()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAttributeRage", "GetRagaholic_Scaler");

	Params::UQtnAttributeRage_GetRagaholic_Scaler_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnAttributeStamina
// (None)

class UClass* UQtnAttributeStamina::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAttributeStamina");

	return Clss;
}


// QtnAttributeStamina QtnGame.Default__QtnAttributeStamina
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAttributeStamina* UQtnAttributeStamina::GetDefaultObj()
{
	static class UQtnAttributeStamina* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAttributeStamina*>(UQtnAttributeStamina::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnAuraComponent
// (None)

class UClass* UQtnAuraComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnAuraComponent");

	return Clss;
}


// QtnAuraComponent QtnGame.Default__QtnAuraComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnAuraComponent* UQtnAuraComponent::GetDefaultObj()
{
	static class UQtnAuraComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnAuraComponent*>(UQtnAuraComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnAuraComponent.RemoveEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    Target                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAuraComponent::RemoveEffect(class AQtnPawn* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAuraComponent", "RemoveEffect");

	Params::UQtnAuraComponent_RemoveEffect_Params Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnAuraComponent.CleanupAppliedEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnAuraComponent::CleanupAppliedEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAuraComponent", "CleanupAppliedEffects");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAuraComponent.ApplyEffectToPawns
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AQtnPawn*>            PlayerAndAllyPawns                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnAuraComponent::ApplyEffectToPawns(TArray<class AQtnPawn*>& PlayerAndAllyPawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAuraComponent", "ApplyEffectToPawns");

	Params::UQtnAuraComponent_ApplyEffectToPawns_Params Parms{};

	Parms.PlayerAndAllyPawns = PlayerAndAllyPawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnAuraComponent.ApplyEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    Target                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnAuraComponent::ApplyEffect(class AQtnPawn* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnAuraComponent", "ApplyEffect");

	Params::UQtnAuraComponent_ApplyEffect_Params Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnBehaviorTreeComponent
// (None)

class UClass* UQtnBehaviorTreeComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBehaviorTreeComponent");

	return Clss;
}


// QtnBehaviorTreeComponent QtnGame.Default__QtnBehaviorTreeComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBehaviorTreeComponent* UQtnBehaviorTreeComponent::GetDefaultObj()
{
	static class UQtnBehaviorTreeComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBehaviorTreeComponent*>(UQtnBehaviorTreeComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBlackboardComponent
// (None)

class UClass* UQtnBlackboardComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBlackboardComponent");

	return Clss;
}


// QtnBlackboardComponent QtnGame.Default__QtnBlackboardComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBlackboardComponent* UQtnBlackboardComponent::GetDefaultObj()
{
	static class UQtnBlackboardComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBlackboardComponent*>(UQtnBlackboardComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBodyAnimInstance
// (None)

class UClass* UQtnBodyAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBodyAnimInstance");

	return Clss;
}


// QtnBodyAnimInstance QtnGame.Default__QtnBodyAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBodyAnimInstance* UQtnBodyAnimInstance::GetDefaultObj()
{
	static class UQtnBodyAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBodyAnimInstance*>(UQtnBodyAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBodyAnimGraphTP
// (None)

class UClass* UQtnBodyAnimGraphTP::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBodyAnimGraphTP");

	return Clss;
}


// QtnBodyAnimGraphTP QtnGame.Default__QtnBodyAnimGraphTP
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBodyAnimGraphTP* UQtnBodyAnimGraphTP::GetDefaultObj()
{
	static class UQtnBodyAnimGraphTP* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBodyAnimGraphTP*>(UQtnBodyAnimGraphTP::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBodyController
// (Actor)

class UClass* AQtnBodyController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBodyController");

	return Clss;
}


// QtnBodyController QtnGame.Default__QtnBodyController
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnBodyController* AQtnBodyController::GetDefaultObj()
{
	static class AQtnBodyController* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnBodyController*>(AQtnBodyController::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBodyController.TempPsychicAwareness_Server
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                Target                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinAwarenessRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::TempPsychicAwareness_Server(float Time, class AQtnBodyPawn* Target, float MinAwarenessRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "TempPsychicAwareness_Server");

	Params::AQtnBodyController_TempPsychicAwareness_Server_Params Parms{};

	Parms.Time = Time;
	Parms.Target = Target;
	Parms.MinAwarenessRatio = MinAwarenessRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetTetheredPatrolRouteComponent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnPatrolRouteComponent*    PatrolRouteComponent                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetTetheredPatrolRouteComponent(class UQtnPatrolRouteComponent* PatrolRouteComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetTetheredPatrolRouteComponent");

	Params::AQtnBodyController_SetTetheredPatrolRouteComponent_Params Parms{};

	Parms.PatrolRouteComponent = PatrolRouteComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetTetherAnchor
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                      TetherAnchor                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             TetherRadii                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              TetherVerticalRatio                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetTetherAnchor(class AActor* TetherAnchor, struct FQtnRangedFloat& TetherRadii, float TetherVerticalRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetTetherAnchor");

	Params::AQtnBodyController_SetTetherAnchor_Params Parms{};

	Parms.TetherAnchor = TetherAnchor;
	Parms.TetherRadii = TetherRadii;
	Parms.TetherVerticalRatio = TetherVerticalRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetScriptedDestinationManually
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Position                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Rotation                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// enum class EQtnLocoSpeedEnum       LocoSpeed                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyStance          bodyStance                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideCombat                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeBeforeGivingUp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FinishUponReachingDestination                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetScriptedDestinationManually(const struct FVector& Position, const struct FRotator& Rotation, enum class EQtnLocoSpeedEnum LocoSpeed, enum class EQtnBodyStance bodyStance, bool OverrideCombat, float TimeBeforeGivingUp, bool FinishUponReachingDestination)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetScriptedDestinationManually");

	Params::AQtnBodyController_SetScriptedDestinationManually_Params Parms{};

	Parms.Position = Position;
	Parms.Rotation = Rotation;
	Parms.LocoSpeed = LocoSpeed;
	Parms.bodyStance = bodyStance;
	Parms.OverrideCombat = OverrideCombat;
	Parms.TimeBeforeGivingUp = TimeBeforeGivingUp;
	Parms.FinishUponReachingDestination = FinishUponReachingDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetScriptedDestination
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      DestinationActor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnLocoSpeedEnum       LocoSpeed                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyStance          bodyStance                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideCombat                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeBeforeGivingUp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FinishUponReachingDestination                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetScriptedDestination(class AActor* DestinationActor, enum class EQtnLocoSpeedEnum LocoSpeed, enum class EQtnBodyStance bodyStance, bool OverrideCombat, float TimeBeforeGivingUp, bool FinishUponReachingDestination)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetScriptedDestination");

	Params::AQtnBodyController_SetScriptedDestination_Params Parms{};

	Parms.DestinationActor = DestinationActor;
	Parms.LocoSpeed = LocoSpeed;
	Parms.bodyStance = bodyStance;
	Parms.OverrideCombat = OverrideCombat;
	Parms.TimeBeforeGivingUp = TimeBeforeGivingUp;
	Parms.FinishUponReachingDestination = FinishUponReachingDestination;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetScriptedAction
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     ScriptedActionCaller                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnActionIntention         ActionIntention                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               OverrideCombat                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      LookFocus                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               InterruptCombat                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetScriptedAction(class UObject* ScriptedActionCaller, struct FQtnActionIntention& ActionIntention, bool OverrideCombat, float Duration, class AActor* LookFocus, bool InterruptCombat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetScriptedAction");

	Params::AQtnBodyController_SetScriptedAction_Params Parms{};

	Parms.ScriptedActionCaller = ScriptedActionCaller;
	Parms.ActionIntention = ActionIntention;
	Parms.OverrideCombat = OverrideCombat;
	Parms.Duration = Duration;
	Parms.LookFocus = LookFocus;
	Parms.InterruptCombat = InterruptCombat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetRoamingTarget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                RoamingTarget                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetRoamingTarget(class AQtnBodyPawn* RoamingTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetRoamingTarget");

	Params::AQtnBodyController_SetRoamingTarget_Params Parms{};

	Parms.RoamingTarget = RoamingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetPerceptionOverride
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnPerceptionConfig        PerceptionOverride                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetPerceptionOverride(struct FQtnPerceptionConfig& PerceptionOverride, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetPerceptionOverride");

	Params::AQtnBodyController_SetPerceptionOverride_Params Parms{};

	Parms.PerceptionOverride = PerceptionOverride;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetHomeLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     HomeLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetHomeLocation(struct FVector& HomeLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetHomeLocation");

	Params::AQtnBodyController_SetHomeLocation_Params Parms{};

	Parms.HomeLocation = HomeLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetHearingVisionOverride
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantHearing                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WantVision                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetHearingVisionOverride(bool WantHearing, bool WantVision, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetHearingVisionOverride");

	Params::AQtnBodyController_SetHearingVisionOverride_Params Parms{};

	Parms.WantHearing = WantHearing;
	Parms.WantVision = WantVision;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetGeneralSearchLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     GeneralSearchLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetGeneralSearchLocation(struct FVector& GeneralSearchLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetGeneralSearchLocation");

	Params::AQtnBodyController_SetGeneralSearchLocation_Params Parms{};

	Parms.GeneralSearchLocation = GeneralSearchLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.SetCheatVerbClass
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        CheatVerbClass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::SetCheatVerbClass(TSubclassOf<class UQtnVerb> CheatVerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "SetCheatVerbClass");

	Params::AQtnBodyController_SetCheatVerbClass_Params Parms{};

	Parms.CheatVerbClass = CheatVerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.ReturnForegroundTicket
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyController::ReturnForegroundTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "ReturnForegroundTicket");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.ReturnAttackTicket
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyController::ReturnAttackTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "ReturnAttackTicket");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.RemovePsychicAwareness
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    Perpetrator                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::RemovePsychicAwareness(class AQtnPawn* Perpetrator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "RemovePsychicAwareness");

	Params::AQtnBodyController_RemovePsychicAwareness_Params Parms{};

	Parms.Perpetrator = Perpetrator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.RemoveIgnoredEmployer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          EmployerArchetype                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::RemoveIgnoredEmployer(TSubclassOf<class AActor> EmployerArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "RemoveIgnoredEmployer");

	Params::AQtnBodyController_RemoveIgnoredEmployer_Params Parms{};

	Parms.EmployerArchetype = EmployerArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.RemoveAIJobInhibitor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     JobInhibitor                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::RemoveAIJobInhibitor(class UObject* JobInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "RemoveAIJobInhibitor");

	Params::AQtnBodyController_RemoveAIJobInhibitor_Params Parms{};

	Parms.JobInhibitor = JobInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnBodyController.QtnBodyControllerEmployEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAIJobRole*               AiJobRole                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ClusterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        RoleID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAIJobComponent*          JobComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsCombatJob                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::QtnBodyControllerEmployEvent__DelegateSignature(class UQtnAIJobRole* AiJobRole, class FName ClusterID, class FName RoleID, class UQtnAIJobComponent* JobComponent, bool IsCombatJob)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "QtnBodyControllerEmployEvent__DelegateSignature");

	Params::AQtnBodyController_QtnBodyControllerEmployEvent__DelegateSignature_Params Parms{};

	Parms.AiJobRole = AiJobRole;
	Parms.ClusterID = ClusterID;
	Parms.RoleID = RoleID;
	Parms.JobComponent = JobComponent;
	Parms.IsCombatJob = IsCombatJob;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyController.PushScriptedAction
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnActionIntention         NonLoopingActionIntention                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnBodyController::PushScriptedAction(struct FQtnActionIntention& NonLoopingActionIntention)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "PushScriptedAction");

	Params::AQtnBodyController_PushScriptedAction_Params Parms{};

	Parms.NonLoopingActionIntention = NonLoopingActionIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.OnThink
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              TimeSinceLastThought                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::OnThink(float TimeSinceLastThought)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "OnThink");

	Params::AQtnBodyController_OnThink_Params Parms{};

	Parms.TimeSinceLastThought = TimeSinceLastThought;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyController.OnQtnReadyForGameplay
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::OnQtnReadyForGameplay(class AQtnBodyPawn* bodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "OnQtnReadyForGameplay");

	Params::AQtnBodyController_OnQtnReadyForGameplay_Params Parms{};

	Parms.bodyPawn = bodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyController.OnDebugDisplay
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "OnDebugDisplay");

	Params::AQtnBodyController_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.OnBodyControllerUnOccupied
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              OccupyingPlayerPawn                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::OnBodyControllerUnOccupied(class AQtnPlayerPawn* OccupyingPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "OnBodyControllerUnOccupied");

	Params::AQtnBodyController_OnBodyControllerUnOccupied_Params Parms{};

	Parms.OccupyingPlayerPawn = OccupyingPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyController.OnBodyControllerOccupied
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              OccupyingPlayerPawn                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::OnBodyControllerOccupied(class AQtnPlayerPawn* OccupyingPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "OnBodyControllerOccupied");

	Params::AQtnBodyController_OnBodyControllerOccupied_Params Parms{};

	Parms.OccupyingPlayerPawn = OccupyingPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyController.IsUsingScriptedDestination
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      DestinationActor                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsUsingScriptedDestination(class AActor** DestinationActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsUsingScriptedDestination");

	Params::AQtnBodyController_IsUsingScriptedDestination_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DestinationActor != nullptr)
		*DestinationActor = Parms.DestinationActor;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.IsUsingScriptedAction
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     ScriptedActionCaller                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsUsingScriptedAction(class UObject** ScriptedActionCaller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsUsingScriptedAction");

	Params::AQtnBodyController_IsUsingScriptedAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ScriptedActionCaller != nullptr)
		*ScriptedActionCaller = Parms.ScriptedActionCaller;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.IsTrackingEnemyForCombat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsTrackingEnemyForCombat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsTrackingEnemyForCombat");

	Params::AQtnBodyController_IsTrackingEnemyForCombat_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.IsReadyForGameplay
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsReadyForGameplay");

	Params::AQtnBodyController_IsReadyForGameplay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.IsOccupiedAndUnsuppressed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsOccupiedAndUnsuppressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsOccupiedAndUnsuppressed");

	Params::AQtnBodyController_IsOccupiedAndUnsuppressed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.IsInActiveCombatPursuit
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsInActiveCombatPursuit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsInActiveCombatPursuit");

	Params::AQtnBodyController_IsInActiveCombatPursuit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.IsEmployerIgnored
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      JobComponentOwner                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsEmployerIgnored(class AActor* JobComponentOwner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsEmployerIgnored");

	Params::AQtnBodyController_IsEmployerIgnored_Params Parms{};

	Parms.JobComponentOwner = JobComponentOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.IsCurrentlyOnPatrol
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::IsCurrentlyOnPatrol()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "IsCurrentlyOnPatrol");

	Params::AQtnBodyController_IsCurrentlyOnPatrol_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.HasForegroundTicket
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::HasForegroundTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "HasForegroundTicket");

	Params::AQtnBodyController_HasForegroundTicket_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.HasAttackTicket
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyController::HasAttackTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "HasAttackTicket");

	Params::AQtnBodyController_HasAttackTicket_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.HandleInventoryItemRemoved
// (Final, Native, Public)
// Parameters:
// class AQtnItem*                    PRemovedItem                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::HandleInventoryItemRemoved(class AQtnItem* PRemovedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "HandleInventoryItemRemoved");

	Params::AQtnBodyController_HandleInventoryItemRemoved_Params Parms{};

	Parms.PRemovedItem = PRemovedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.HandleInventoryItemAdded
// (Final, Native, Public)
// Parameters:
// class AQtnItem*                    PAddedItem                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::HandleInventoryItemAdded(class AQtnItem* PAddedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "HandleInventoryItemAdded");

	Params::AQtnBodyController_HandleInventoryItemAdded_Params Parms{};

	Parms.PAddedItem = PAddedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.GetTetheredPatrolRouteComponent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnPatrolRouteComponent*    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPatrolRouteComponent* AQtnBodyController::GetTetheredPatrolRouteComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetTetheredPatrolRouteComponent");

	Params::AQtnBodyController_GetTetheredPatrolRouteComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetTetherAnchorLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyController::GetTetherAnchorLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetTetherAnchorLocation");

	Params::AQtnBodyController_GetTetherAnchorLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetTetherAnchor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnBodyController::GetTetherAnchor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetTetherAnchor");

	Params::AQtnBodyController_GetTetherAnchor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetRoamingTarget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnBodyController::GetRoamingTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetRoamingTarget");

	Params::AQtnBodyController_GetRoamingTarget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetRelevantEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* AQtnBodyController::GetRelevantEnemy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetRelevantEnemy");

	Params::AQtnBodyController_GetRelevantEnemy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetQtnPerceptionComponent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnAIPerceptionComponent*   ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAIPerceptionComponent* AQtnBodyController::GetQtnPerceptionComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetQtnPerceptionComponent");

	Params::AQtnBodyController_GetQtnPerceptionComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetQtnPathFollowingComponent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnPathFollowingComponent*  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPathFollowingComponent* AQtnBodyController::GetQtnPathFollowingComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetQtnPathFollowingComponent");

	Params::AQtnBodyController_GetQtnPathFollowingComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetPerceivedTargetLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyController::GetPerceivedTargetLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetPerceivedTargetLocation");

	Params::AQtnBodyController_GetPerceivedTargetLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetOwningSkirmish
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnSkirmish*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnSkirmish* AQtnBodyController::GetOwningSkirmish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetOwningSkirmish");

	Params::AQtnBodyController_GetOwningSkirmish_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetNearestFormationParticipantDestination
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReferenceLocation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NearestBasedOnAngle                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyController::GetNearestFormationParticipantDestination(struct FVector& ReferenceLocation, struct FVector* NearestBasedOnAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetNearestFormationParticipantDestination");

	Params::AQtnBodyController_GetNearestFormationParticipantDestination_Params Parms{};

	Parms.ReferenceLocation = ReferenceLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NearestBasedOnAngle != nullptr)
		*NearestBasedOnAngle = std::move(Parms.NearestBasedOnAngle);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetLastNavLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyController::GetLastNavLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetLastNavLocation");

	Params::AQtnBodyController_GetLastNavLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetHomeLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyController::GetHomeLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetHomeLocation");

	Params::AQtnBodyController_GetHomeLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetGeneralSearchLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyController::GetGeneralSearchLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetGeneralSearchLocation");

	Params::AQtnBodyController_GetGeneralSearchLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetFormationTarget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnBodyController::GetFormationTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetFormationTarget");

	Params::AQtnBodyController_GetFormationTarget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetFavoriteAttackVerb
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* AQtnBodyController::GetFavoriteAttackVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetFavoriteAttackVerb");

	Params::AQtnBodyController_GetFavoriteAttackVerb_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetFavoriteAttackRange
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               IsRangedCombatant                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnBodyController::GetFavoriteAttackRange(bool* IsRangedCombatant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetFavoriteAttackRange");

	Params::AQtnBodyController_GetFavoriteAttackRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsRangedCombatant != nullptr)
		*IsRangedCombatant = Parms.IsRangedCombatant;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetCurrentNavLink
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               IsMovingForward                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnNavLinkCustomComponent*  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnNavLinkCustomComponent* AQtnBodyController::GetCurrentNavLink(bool* IsMovingForward)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetCurrentNavLink");

	Params::AQtnBodyController_GetCurrentNavLink_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsMovingForward != nullptr)
		*IsMovingForward = Parms.IsMovingForward;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetCombatAvoidanceRange
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnBodyController::GetCombatAvoidanceRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetCombatAvoidanceRange");

	Params::AQtnBodyController_GetCombatAvoidanceRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetClosestPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnBodyController::GetClosestPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetClosestPlayer");

	Params::AQtnBodyController_GetClosestPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetBodyPawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnBodyController::GetBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetBodyPawn");

	Params::AQtnBodyController_GetBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetAllyInNeedOfHelp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnBodyController::GetAllyInNeedOfHelp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetAllyInNeedOfHelp");

	Params::AQtnBodyController_GetAllyInNeedOfHelp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.GetAllBodyControllers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnBodyController*>  FoundBodyControllers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                        ActorTagFilter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SpawnerRegionFilter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::GetAllBodyControllers(class UObject* SelfReference, TArray<class AQtnBodyController*>* FoundBodyControllers, class FName ActorTagFilter, class FName SpawnerRegionFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetAllBodyControllers");

	Params::AQtnBodyController_GetAllBodyControllers_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.ActorTagFilter = ActorTagFilter;
	Parms.SpawnerRegionFilter = SpawnerRegionFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundBodyControllers != nullptr)
		*FoundBodyControllers = std::move(Parms.FoundBodyControllers);

}


// Function QtnGame.QtnBodyController.GetAIJobRole
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnAIJobRole*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAIJobRole* AQtnBodyController::GetAIJobRole()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "GetAIJobRole");

	Params::AQtnBodyController_GetAIJobRole_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.ForgetEverything
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyController::ForgetEverything()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "ForgetEverything");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.FindAllyToHelp
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyController::FindAllyToHelp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "FindAllyToHelp");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.DefendOtherBody
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                bodyToDefend                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::DefendOtherBody(class AQtnBodyPawn* bodyToDefend)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "DefendOtherBody");

	Params::AQtnBodyController_DefendOtherBody_Params Parms{};

	Parms.bodyToDefend = bodyToDefend;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.ClearPerceptionOverride
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyController::ClearPerceptionOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "ClearPerceptionOverride");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.ClearAllIgnoredEmployers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyController::ClearAllIgnoredEmployers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "ClearAllIgnoredEmployers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.ChooseAllyToHelp
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AQtnBodyPawn*>        AllyBodies                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnBodyController::ChooseAllyToHelp(TArray<class AQtnBodyPawn*>& AllyBodies)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "ChooseAllyToHelp");

	Params::AQtnBodyController_ChooseAllyToHelp_Params Parms{};

	Parms.AllyBodies = AllyBodies;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyController.CancelScriptedDestination
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyController::CancelScriptedDestination()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "CancelScriptedDestination");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.CancelScriptedAction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     ScriptedActionCaller                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::CancelScriptedAction(class UObject* ScriptedActionCaller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "CancelScriptedAction");

	Params::AQtnBodyController_CancelScriptedAction_Params Parms{};

	Parms.ScriptedActionCaller = ScriptedActionCaller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.AddPsychicAwarenessOfAllPlayers_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bBotsToo                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinAwarenessRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::AddPsychicAwarenessOfAllPlayers_ServerOnly(bool bBotsToo, float MinAwarenessRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "AddPsychicAwarenessOfAllPlayers_ServerOnly");

	Params::AQtnBodyController_AddPsychicAwarenessOfAllPlayers_ServerOnly_Params Parms{};

	Parms.bBotsToo = bBotsToo;
	Parms.MinAwarenessRatio = MinAwarenessRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.AddPsychicAwareness
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    Perpetrator                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinAwarenessRatio                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::AddPsychicAwareness(class AQtnPawn* Perpetrator, float MinAwarenessRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "AddPsychicAwareness");

	Params::AQtnBodyController_AddPsychicAwareness_Params Parms{};

	Parms.Perpetrator = Perpetrator;
	Parms.MinAwarenessRatio = MinAwarenessRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.AddIgnoredEmployer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          EmployerArchetype                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::AddIgnoredEmployer(TSubclassOf<class AActor> EmployerArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "AddIgnoredEmployer");

	Params::AQtnBodyController_AddIgnoredEmployer_Params Parms{};

	Parms.EmployerArchetype = EmployerArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyController.AddAIJobInhibitor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     JobInhibitor                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyController::AddAIJobInhibitor(class UObject* JobInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyController", "AddAIJobInhibitor");

	Params::AQtnBodyController_AddAIJobInhibitor_Params Parms{};

	Parms.JobInhibitor = JobInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDataBag
// (None)

class UClass* UQtnDataBag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDataBag");

	return Clss;
}


// QtnDataBag QtnGame.Default__QtnDataBag
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDataBag* UQtnDataBag::GetDefaultObj()
{
	static class UQtnDataBag* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDataBag*>(UQtnDataBag::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDataBag.PreSaveDataBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnSaveData*                SaveData                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOriginalBody                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDataBag::PreSaveDataBP(class UQtnSaveData* SaveData, class AQtnBodyPawn* LocalOriginalBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "PreSaveDataBP");

	Params::UQtnDataBag_PreSaveDataBP_Params Parms{};

	Parms.SaveData = SaveData;
	Parms.LocalOriginalBody = LocalOriginalBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDataBag.PreLoadDataBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnSaveData*                SaveData                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOriginalBody                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDataBag::PreLoadDataBP(class UQtnSaveData* SaveData, class AQtnBodyPawn* LocalOriginalBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "PreLoadDataBP");

	Params::UQtnDataBag_PreLoadDataBP_Params Parms{};

	Parms.SaveData = SaveData;
	Parms.LocalOriginalBody = LocalOriginalBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDataBag.PostSaveDataBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnSaveData*                SaveData                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOriginalBody                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDataBag::PostSaveDataBP(class UQtnSaveData* SaveData, bool Success, class AQtnBodyPawn* LocalOriginalBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "PostSaveDataBP");

	Params::UQtnDataBag_PostSaveDataBP_Params Parms{};

	Parms.SaveData = SaveData;
	Parms.Success = Success;
	Parms.LocalOriginalBody = LocalOriginalBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDataBag.PostLoadDataBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnSaveData*                SaveData                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOriginalBody                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDataBag::PostLoadDataBP(class UQtnSaveData* SaveData, bool Success, class AQtnBodyPawn* LocalOriginalBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "PostLoadDataBP");

	Params::UQtnDataBag_PostLoadDataBP_Params Parms{};

	Parms.SaveData = SaveData;
	Parms.Success = Success;
	Parms.LocalOriginalBody = LocalOriginalBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDataBag.OnReadyForGameplay
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                LocalPlayerUI                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOccupiedBodyPawn                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDataBag::OnReadyForGameplay(class AQtnPlayerController* LocalPlayerController, class AQtnPlayerUI* LocalPlayerUI, class AQtnBodyPawn* LocalOccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "OnReadyForGameplay");

	Params::UQtnDataBag_OnReadyForGameplay_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.LocalPlayerUI = LocalPlayerUI;
	Parms.LocalOccupiedBodyPawn = LocalOccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDataBag.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDataBag::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "OnDebugDisplay");

	Params::UQtnDataBag_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDataBag.HasValidBagData
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDataBag::HasValidBagData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "HasValidBagData");

	Params::UQtnDataBag_HasValidBagData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDataBag.GetParentDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnDataBag*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDataBag* UQtnDataBag::GetParentDataBag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "GetParentDataBag");

	Params::UQtnDataBag_GetParentDataBag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDataBag.GetChildDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnDataBag>     DatabagArchetype                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDataBag*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDataBag* UQtnDataBag::GetChildDataBag(TSubclassOf<class UQtnDataBag> DatabagArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDataBag", "GetChildDataBag");

	Params::UQtnDataBag_GetChildDataBag_Params Parms{};

	Parms.DatabagArchetype = DatabagArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnBodyDataBag
// (None)

class UClass* UQtnBodyDataBag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBodyDataBag");

	return Clss;
}


// QtnBodyDataBag QtnGame.Default__QtnBodyDataBag
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBodyDataBag* UQtnBodyDataBag::GetDefaultObj()
{
	static class UQtnBodyDataBag* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBodyDataBag*>(UQtnBodyDataBag::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBodyDataBag.OnBodyDataBagUnOccupy
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyDataBag::OnBodyDataBagUnOccupy(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyDataBag", "OnBodyDataBagUnOccupy");

	Params::UQtnBodyDataBag_OnBodyDataBagUnOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyDataBag.OnBodyDataBagOccupy
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyDataBag::OnBodyDataBagOccupy(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyDataBag", "OnBodyDataBagOccupy");

	Params::UQtnBodyDataBag_OnBodyDataBagOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnPawn
// (Actor, Pawn)

class UClass* AQtnPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPawn");

	return Clss;
}


// QtnPawn QtnGame.Default__QtnPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPawn* AQtnPawn::GetDefaultObj()
{
	static class AQtnPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPawn*>(AQtnPawn::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPawn.WasThirdPersonRecentlyRendered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              Recently                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::WasThirdPersonRecentlyRendered(float Recently)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "WasThirdPersonRecentlyRendered");

	Params::AQtnPawn_WasThirdPersonRecentlyRendered_Params Parms{};

	Parms.Recently = Recently;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.WaitForReadyForGameplay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AQtnPawn*                    ReadyPawn                                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::WaitForReadyForGameplay(class AQtnPawn* Pawn, const struct FLatentActionInfo& LatentInfo, class AQtnPawn** ReadyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "WaitForReadyForGameplay");

	Params::AQtnPawn_WaitForReadyForGameplay_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ReadyPawn != nullptr)
		*ReadyPawn = Parms.ReadyPawn;

}


// Function QtnGame.QtnPawn.UnSetActiveBullshit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Caller                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::UnSetActiveBullshit(class UObject* Caller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "UnSetActiveBullshit");

	Params::AQtnPawn_UnSetActiveBullshit_Params Parms{};

	Parms.Caller = Caller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.TestSlidePawnToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     DesiredLocation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OutReachedLocation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPawn::TestSlidePawnToLocation(const struct FVector& StartLocation, const struct FVector& DesiredLocation, struct FVector* OutReachedLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "TestSlidePawnToLocation");

	Params::AQtnPawn_TestSlidePawnToLocation_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.DesiredLocation = DesiredLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutReachedLocation != nullptr)
		*OutReachedLocation = std::move(Parms.OutReachedLocation);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.TeleportQtnPawnToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      DestinationActor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::TeleportQtnPawnToActor(class AActor* DestinationActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "TeleportQtnPawnToActor");

	Params::AQtnPawn_TeleportQtnPawnToActor_Params Parms{};

	Parms.DestinationActor = DestinationActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.TeleportQtnPawn
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Destination                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Orientation                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::TeleportQtnPawn(struct FVector& Destination, struct FRotator& Orientation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "TeleportQtnPawn");

	Params::AQtnPawn_TeleportQtnPawn_Params Parms{};

	Parms.Destination = Destination;
	Parms.Orientation = Orientation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.StopVerbByInstance_LocalOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnVerb*                    PVerbInstance                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::StopVerbByInstance_LocalOnly(class UQtnVerb* PVerbInstance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "StopVerbByInstance_LocalOnly");

	Params::AQtnPawn_StopVerbByInstance_LocalOnly_Params Parms{};

	Parms.PVerbInstance = PVerbInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.StartVerbByClass_LocalOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        VerbClass                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     IntendedTarget                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::StartVerbByClass_LocalOnly(TSubclassOf<class UQtnVerb> VerbClass, class UObject* IntendedTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "StartVerbByClass_LocalOnly");

	Params::AQtnPawn_StartVerbByClass_LocalOnly_Params Parms{};

	Parms.VerbClass = VerbClass;
	Parms.IntendedTarget = IntendedTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.SpawnProjectileFromPawn_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnProjectile>  ProjectileClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SourceActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    SourceVerb                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnProjectile*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnProjectile* AQtnPawn::SpawnProjectileFromPawn_ServerOnly(TSubclassOf<class AQtnProjectile> ProjectileClass, class AActor* SourceActor, class UQtnVerb* SourceVerb, const struct FVector& MuzzlePosition, const struct FVector& ProjectileVelocity, class AQtnPawn* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SpawnProjectileFromPawn_ServerOnly");

	Params::AQtnPawn_SpawnProjectileFromPawn_ServerOnly_Params Parms{};

	Parms.ProjectileClass = ProjectileClass;
	Parms.SourceActor = SourceActor;
	Parms.SourceVerb = SourceVerb;
	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;
	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.SpawnProjectileFromPawn_LocalOnly
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnProjectile>  ProjectileClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SourceActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    SourceVerb                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::SpawnProjectileFromPawn_LocalOnly(TSubclassOf<class AQtnProjectile> ProjectileClass, class AActor* SourceActor, class UQtnVerb* SourceVerb, const struct FVector& MuzzlePosition, const struct FVector& ProjectileVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SpawnProjectileFromPawn_LocalOnly");

	Params::AQtnPawn_SpawnProjectileFromPawn_LocalOnly_Params Parms{};

	Parms.ProjectileClass = ProjectileClass;
	Parms.SourceActor = SourceActor;
	Parms.SourceVerb = SourceVerb;
	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.SlidePawnToLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     DesiredLocation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  HitResult                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SendImpactEvents                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPawn::SlidePawnToLocation(const struct FVector& DesiredLocation, struct FHitResult* HitResult, bool SendImpactEvents)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SlidePawnToLocation");

	Params::AQtnPawn_SlidePawnToLocation_Params Parms{};

	Parms.DesiredLocation = DesiredLocation;
	Parms.SendImpactEvents = SendImpactEvents;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (HitResult != nullptr)
		*HitResult = std::move(Parms.HitResult);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.ShouldUseNavWalking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::ShouldUseNavWalking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ShouldUseNavWalking");

	Params::AQtnPawn_ShouldUseNavWalking_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.SetTeam_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnTeam>        NewTeamClass                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::SetTeam_ServerOnly(TSubclassOf<class UQtnTeam> NewTeamClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SetTeam_ServerOnly");

	Params::AQtnPawn_SetTeam_ServerOnly_Params Parms{};

	Parms.NewTeamClass = NewTeamClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.SetPawnScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              TargetScale                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::SetPawnScale(float TargetScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SetPawnScale");

	Params::AQtnPawn_SetPawnScale_Params Parms{};

	Parms.TargetScale = TargetScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.SetHUDLabel_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      HudLabel                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::SetHUDLabel_ServerOnly(class FString& HudLabel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SetHUDLabel_ServerOnly");

	Params::AQtnPawn_SetHUDLabel_ServerOnly_Params Parms{};

	Parms.HudLabel = HudLabel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.SetDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                        NewDisplayName                                                   (Parm, NativeAccessSpecifierPublic)

void AQtnPawn::SetDisplayName(class FText NewDisplayName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SetDisplayName");

	Params::AQtnPawn_SetDisplayName_Params Parms{};

	Parms.NewDisplayName = NewDisplayName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.SetBodyToBlame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::SetBodyToBlame(class AQtnBodyPawn* bodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SetBodyToBlame");

	Params::AQtnPawn_SetBodyToBlame_Params Parms{};

	Parms.bodyPawn = bodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.SetActiveBullshit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                ActiveBullshitTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     Caller                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::SetActiveBullshit(const struct FGameplayTag& ActiveBullshitTag, class UObject* Caller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "SetActiveBullshit");

	Params::AQtnPawn_SetActiveBullshit_Params Parms{};

	Parms.ActiveBullshitTag = ActiveBullshitTag;
	Parms.Caller = Caller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerTeleportQtnPawn
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults)
// Parameters:
// struct FVector                     Destination                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Orientation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::ServerTeleportQtnPawn(const struct FVector& Destination, const struct FRotator& Orientation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerTeleportQtnPawn");

	Params::AQtnPawn_ServerTeleportQtnPawn_Params Parms{};

	Parms.Destination = Destination;
	Parms.Orientation = Orientation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerSpawnProjectileFromPawn
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// TSubclassOf<class AQtnProjectile>  ProjectileClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SourceActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    SourceVerb                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerSpawnProjectileFromPawn(TSubclassOf<class AQtnProjectile> ProjectileClass, class AActor* SourceActor, class UQtnVerb* SourceVerb, const struct FVector& MuzzlePosition, const struct FVector& ProjectileVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerSpawnProjectileFromPawn");

	Params::AQtnPawn_ServerSpawnProjectileFromPawn_Params Parms{};

	Parms.ProjectileClass = ProjectileClass;
	Parms.SourceActor = SourceActor;
	Parms.SourceVerb = SourceVerb;
	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerSetRootMotionSmoothMoveToDynamicLocation
// (Net, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerSetRootMotionSmoothMoveToDynamicLocation(const struct FVector& TargetLocation, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerSetRootMotionSmoothMoveToDynamicLocation");

	Params::AQtnPawn_ServerSetRootMotionSmoothMoveToDynamicLocation_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerSetRootMotionInstantMoveToDynamicLocation
// (Net, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerSetRootMotionInstantMoveToDynamicLocation(const struct FVector& TargetLocation, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerSetRootMotionInstantMoveToDynamicLocation");

	Params::AQtnPawn_ServerSetRootMotionInstantMoveToDynamicLocation_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerSetPendingVerbAndTarget
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class UQtnVerb*                    PPendingVerb                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     PPendingVerbTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerSetPendingVerbAndTarget(class UQtnVerb* PPendingVerb, class UObject* PPendingVerbTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerSetPendingVerbAndTarget");

	Params::AQtnPawn_ServerSetPendingVerbAndTarget_Params Parms{};

	Parms.PPendingVerb = PPendingVerb;
	Parms.PPendingVerbTarget = PPendingVerbTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerSetCharacterMovementMode
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// enum class EMovementMode           MovementMode                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerSetCharacterMovementMode(enum class EMovementMode MovementMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerSetCharacterMovementMode");

	Params::AQtnPawn_ServerSetCharacterMovementMode_Params Parms{};

	Parms.MovementMode = MovementMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerOutgoingPlayerDamage
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class UQtnDamageReceptorComponent* PDamageRecipient                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::ServerOutgoingPlayerDamage(class UQtnDamageReceptorComponent* PDamageRecipient, const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerOutgoingPlayerDamage");

	Params::AQtnPawn_ServerOutgoingPlayerDamage_Params Parms{};

	Parms.PDamageRecipient = PDamageRecipient;
	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerGenerateAINoise
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// class AActor*                      EmittingActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnNoiseEnum           NoiseType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NoiseStrength                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerGenerateAINoise(class AActor* EmittingActor, enum class EQtnNoiseEnum NoiseType, float NoiseStrength)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerGenerateAINoise");

	Params::AQtnPawn_ServerGenerateAINoise_Params Parms{};

	Parms.EmittingActor = EmittingActor;
	Parms.NoiseType = NoiseType;
	Parms.NoiseStrength = NoiseStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerEndRootMotion
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerEndRootMotion(class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerEndRootMotion");

	Params::AQtnPawn_ServerEndRootMotion_Params Parms{};

	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerDropOtherActor
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DestroyAfterDrop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerDropOtherActor(class AActor* OtherActor, bool DestroyAfterDrop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerDropOtherActor");

	Params::AQtnPawn_ServerDropOtherActor_Params Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DestroyAfterDrop = DestroyAfterDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerBeginRootMotionSmoothMoveToDynamic
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ClientTimeStamp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerBeginRootMotionSmoothMoveToDynamic(const struct FVector& StartLocation, const struct FVector& EndLocation, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName, float ClientTimeStamp, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerBeginRootMotionSmoothMoveToDynamic");

	Params::AQtnPawn_ServerBeginRootMotionSmoothMoveToDynamic_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.EndLocation = EndLocation;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.ClientTimeStamp = ClientTimeStamp;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerBeginRootMotionSmoothMoveTo
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ClientTimeStamp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerBeginRootMotionSmoothMoveTo(const struct FVector& StartLocation, const struct FVector& EndLocation, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName, float ClientTimeStamp, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerBeginRootMotionSmoothMoveTo");

	Params::AQtnPawn_ServerBeginRootMotionSmoothMoveTo_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.EndLocation = EndLocation;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.ClientTimeStamp = ClientTimeStamp;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerBeginRootMotionInstantMoveToDynamic
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ClientTimeStamp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerBeginRootMotionInstantMoveToDynamic(const struct FVector& TargetLocation, float Duration, bool OverrideVelocity, bool ZeroVelocityWhenFinished, class FName InstanceName, float ClientTimeStamp, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerBeginRootMotionInstantMoveToDynamic");

	Params::AQtnPawn_ServerBeginRootMotionInstantMoveToDynamic_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.Duration = Duration;
	Parms.OverrideVelocity = OverrideVelocity;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.ClientTimeStamp = ClientTimeStamp;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerBeginRootMotionImpulse
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     Impulse                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ClientTimeStamp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerBeginRootMotionImpulse(const struct FVector& Impulse, bool OverrideVelocity, class FName InstanceName, float ClientTimeStamp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerBeginRootMotionImpulse");

	Params::AQtnPawn_ServerBeginRootMotionImpulse_Params Parms{};

	Parms.Impulse = Impulse;
	Parms.OverrideVelocity = OverrideVelocity;
	Parms.InstanceName = InstanceName;
	Parms.ClientTimeStamp = ClientTimeStamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerBeginRootMotionConstantForce
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Strength                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ClientTimeStamp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ServerBeginRootMotionConstantForce(const struct FVector& Direction, float Strength, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName, float ClientTimeStamp, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerBeginRootMotionConstantForce");

	Params::AQtnPawn_ServerBeginRootMotionConstantForce_Params Parms{};

	Parms.Direction = Direction;
	Parms.Strength = Strength;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.ClientTimeStamp = ClientTimeStamp;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ServerAddAndRequestVerb
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FQtnVerbRequest             VerbRequest                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::ServerAddAndRequestVerb(const struct FQtnVerbRequest& VerbRequest)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ServerAddAndRequestVerb");

	Params::AQtnPawn_ServerAddAndRequestVerb_Params Parms{};

	Parms.VerbRequest = VerbRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RequestVerb_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnVerbRequest             VerbRequest                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               AddIfMissing                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RequestVerb_ServerOnly(struct FQtnVerbRequest& VerbRequest, bool AddIfMissing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RequestVerb_ServerOnly");

	Params::AQtnPawn_RequestVerb_ServerOnly_Params Parms{};

	Parms.VerbRequest = VerbRequest;
	Parms.AddIfMissing = AddIfMissing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RequestVerb_LocalOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnVerbRequest             VerbRequest                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               AddIfMissing                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RequestVerb_LocalOnly(struct FQtnVerbRequest& VerbRequest, bool AddIfMissing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RequestVerb_LocalOnly");

	Params::AQtnPawn_RequestVerb_LocalOnly_Params Parms{};

	Parms.VerbRequest = VerbRequest;
	Parms.AddIfMissing = AddIfMissing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RemoveTimeDilation_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     TimeDilator                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RemoveTimeDilation_ServerOnly(class UObject* TimeDilator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RemoveTimeDilation_ServerOnly");

	Params::AQtnPawn_RemoveTimeDilation_ServerOnly_Params Parms{};

	Parms.TimeDilator = TimeDilator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RemoveDamageImmunity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnDamageType>  DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RemoveDamageImmunity(TSubclassOf<class UQtnDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RemoveDamageImmunity");

	Params::AQtnPawn_RemoveDamageImmunity_Params Parms{};

	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RemoveCombatTargetingInhibitor_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RemoveCombatTargetingInhibitor_ServerOnly(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RemoveCombatTargetingInhibitor_ServerOnly");

	Params::AQtnPawn_RemoveCombatTargetingInhibitor_ServerOnly_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RemoveAttackDamageMultiplier_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SourceObject                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RemoveAttackDamageMultiplier_ServerOnly(class UObject* SourceObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RemoveAttackDamageMultiplier_ServerOnly");

	Params::AQtnPawn_RemoveAttackDamageMultiplier_ServerOnly_Params Parms{};

	Parms.SourceObject = SourceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RemoveAggro_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     AggroCauser                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RemoveAggro_ServerOnly(class UObject* AggroCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RemoveAggro_ServerOnly");

	Params::AQtnPawn_RemoveAggro_ServerOnly_Params Parms{};

	Parms.AggroCauser = AggroCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.RegisterPawnLODComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*             PActorComponent                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::RegisterPawnLODComponent(class UActorComponent* PActorComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "RegisterPawnLODComponent");

	Params::AQtnPawn_RegisterPawnLODComponent_Params Parms{};

	Parms.PActorComponent = PActorComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.QueueLaunch
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     LaunchVelocity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QueueLaunch(const struct FVector& LaunchVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QueueLaunch");

	Params::AQtnPawn_QueueLaunch_Params Parms{};

	Parms.LaunchVelocity = LaunchVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnPawn.QtnWalkOffLedgeSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams, HasDefaults)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PreviousFloorImpactNormal                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PreviousFloorContactNormal                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PreviousLocation                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnWalkOffLedgeSignature__DelegateSignature(class AQtnPawn* Pawn, struct FVector& PreviousFloorImpactNormal, struct FVector& PreviousFloorContactNormal, struct FVector& PreviousLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnWalkOffLedgeSignature__DelegateSignature");

	Params::AQtnPawn_QtnWalkOffLedgeSignature__DelegateSignature_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.PreviousFloorImpactNormal = PreviousFloorImpactNormal;
	Parms.PreviousFloorContactNormal = PreviousFloorContactNormal;
	Parms.PreviousLocation = PreviousLocation;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnTeleportEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// struct FVector                     OldLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    OldRotation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                     NewLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    NewRotation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::QtnTeleportEvent__DelegateSignature(const struct FVector& OldLocation, const struct FRotator& OldRotation, const struct FVector& NewLocation, const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnTeleportEvent__DelegateSignature");

	Params::AQtnPawn_QtnTeleportEvent__DelegateSignature_Params Parms{};

	Parms.OldLocation = OldLocation;
	Parms.OldRotation = OldRotation;
	Parms.NewLocation = NewLocation;
	Parms.NewRotation = NewRotation;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnStatusEffectEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnStatusEffect*            StatusEffect                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnStatusEffectEvent__DelegateSignature(class UQtnStatusEffect* StatusEffect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnStatusEffectEvent__DelegateSignature");

	Params::AQtnPawn_QtnStatusEffectEvent__DelegateSignature_Params Parms{};

	Parms.StatusEffect = StatusEffect;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnPawnVerbEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnVerb*                    Verb                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnPawnVerbEvent__DelegateSignature(class UQtnVerb* Verb, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnPawnVerbEvent__DelegateSignature");

	Params::AQtnPawn_QtnPawnVerbEvent__DelegateSignature_Params Parms{};

	Parms.Verb = Verb;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnPawnTouchEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams, HasDefaults)
// Parameters:
// class AQtnPawn*                    SelfPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TouchLocation                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TouchNormal                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnPawnTouchEvent__DelegateSignature(class AQtnPawn* SelfPawn, class AActor* OtherActor, struct FVector& TouchLocation, struct FVector& TouchNormal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnPawnTouchEvent__DelegateSignature");

	Params::AQtnPawn_QtnPawnTouchEvent__DelegateSignature_Params Parms{};

	Parms.SelfPawn = SelfPawn;
	Parms.OtherActor = OtherActor;
	Parms.TouchLocation = TouchLocation;
	Parms.TouchNormal = TouchNormal;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnPawnTeamChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnTeam*                    OldTeam                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnTeam*                    NewTeam                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnPawnTeamChangeEvent__DelegateSignature(class UQtnTeam* OldTeam, class UQtnTeam* NewTeam)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnPawnTeamChangeEvent__DelegateSignature");

	Params::AQtnPawn_QtnPawnTeamChangeEvent__DelegateSignature_Params Parms{};

	Parms.OldTeam = OldTeam;
	Parms.NewTeam = NewTeam;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnPawnAnimNotifyEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAnimNotify*              AnimNotify                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnPawnAnimNotifyEvent__DelegateSignature(class UQtnAnimNotify* AnimNotify)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnPawnAnimNotifyEvent__DelegateSignature");

	Params::AQtnPawn_QtnPawnAnimNotifyEvent__DelegateSignature_Params Parms{};

	Parms.AnimNotify = AnimNotify;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnOutgoingDamageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class AActor*                      DamagedActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnOutgoingDamageEvent__DelegateSignature(class AActor* DamagedActor, struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactionInfo, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnOutgoingDamageEvent__DelegateSignature");

	Params::AQtnPawn_QtnOutgoingDamageEvent__DelegateSignature_Params Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageInfo = DamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnOnReadyForGameplayEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPawn*                    ReadyPawn                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnOnReadyForGameplayEvent__DelegateSignature(class AQtnPawn* ReadyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnOnReadyForGameplayEvent__DelegateSignature");

	Params::AQtnPawn_QtnOnReadyForGameplayEvent__DelegateSignature_Params Parms{};

	Parms.ReadyPawn = ReadyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnOnDisplayNameChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FText                        NewDisplayName                                                   (Parm, NativeAccessSpecifierPublic)

void AQtnPawn::QtnOnDisplayNameChangedEvent__DelegateSignature(class FText NewDisplayName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnOnDisplayNameChangedEvent__DelegateSignature");

	Params::AQtnPawn_QtnOnDisplayNameChangedEvent__DelegateSignature_Params Parms{};

	Parms.NewDisplayName = NewDisplayName;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnMovementBlockedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FHitResult                  Impact                                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::QtnMovementBlockedEvent__DelegateSignature(struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnMovementBlockedEvent__DelegateSignature");

	Params::AQtnPawn_QtnMovementBlockedEvent__DelegateSignature_Params Parms{};

	Parms.Impact = Impact;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnLaunchedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams, HasDefaults)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     LaunchVelocity                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnLaunchedSignature__DelegateSignature(class AQtnPawn* Pawn, struct FVector& LaunchVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnLaunchedSignature__DelegateSignature");

	Params::AQtnPawn_QtnLaunchedSignature__DelegateSignature_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.LaunchVelocity = LaunchVelocity;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnLandedSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::QtnLandedSignature__DelegateSignature(class AQtnPawn* Pawn, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnLandedSignature__DelegateSignature");

	Params::AQtnPawn_QtnLandedSignature__DelegateSignature_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.Hit = Hit;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnKilledSomethingEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPawn*                    Culprit                                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      KilledActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnKilledSomethingEvent__DelegateSignature(class AQtnPawn* Culprit, class AActor* KilledActor, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnKilledSomethingEvent__DelegateSignature");

	Params::AQtnPawn_QtnKilledSomethingEvent__DelegateSignature_Params Parms{};

	Parms.Culprit = Culprit;
	Parms.KilledActor = KilledActor;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnJumpSignature__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPawn*                    Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnJumpSignature__DelegateSignature(class AQtnPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnJumpSignature__DelegateSignature");

	Params::AQtnPawn_QtnJumpSignature__DelegateSignature_Params Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnAnimWindowEndEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnAnimWindowEndEvent__DelegateSignature(class UQtnAnimWindow* AnimWindow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnAnimWindowEndEvent__DelegateSignature");

	Params::AQtnPawn_QtnAnimWindowEndEvent__DelegateSignature_Params Parms{};

	Parms.AnimWindow = AnimWindow;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPawn.QtnAnimWindowBeginEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::QtnAnimWindowBeginEvent__DelegateSignature(class UQtnAnimWindow* AnimWindow, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "QtnAnimWindowBeginEvent__DelegateSignature");

	Params::AQtnPawn_QtnAnimWindowBeginEvent__DelegateSignature_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.OnRep_PendingVerbRequest
// (Final, Native, Protected)
// Parameters:

void AQtnPawn::OnRep_PendingVerbRequest()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnRep_PendingVerbRequest");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.OnRep_PawnIntentionsSimulatedProxy
// (Native, Protected)
// Parameters:

void AQtnPawn::OnRep_PawnIntentionsSimulatedProxy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnRep_PawnIntentionsSimulatedProxy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.OnRep_HudLabel
// (Final, Native, Private)
// Parameters:

void AQtnPawn::OnRep_HudLabel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnRep_HudLabel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.OnRep_DisplayName
// (Final, Native, Public)
// Parameters:

void AQtnPawn::OnRep_DisplayName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnRep_DisplayName");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.OnRep_CachedTeam
// (Final, Native, Private)
// Parameters:

void AQtnPawn::OnRep_CachedTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnRep_CachedTeam");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.OnQtnReadyForGameplay
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnPawn::OnQtnReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnQtnReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnPawn.OnManualStartedVerbEvent
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnPawnMontage             VerbAction                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              PlayRate                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartTime                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::OnManualStartedVerbEvent(struct FQtnPawnMontage& VerbAction, float PlayRate, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnManualStartedVerbEvent");

	Params::AQtnPawn_OnManualStartedVerbEvent_Params Parms{};

	Parms.VerbAction = VerbAction;
	Parms.PlayRate = PlayRate;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.OnManualFinishedVerbEvent
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnPawnMontage             VerbAction                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               JumpToOutro                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::OnManualFinishedVerbEvent(struct FQtnPawnMontage& VerbAction, bool JumpToOutro)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnManualFinishedVerbEvent");

	Params::AQtnPawn_OnManualFinishedVerbEvent_Params Parms{};

	Parms.VerbAction = VerbAction;
	Parms.JumpToOutro = JumpToOutro;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnDebugDisplay");

	Params::AQtnPawn_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.OnCheatVerbRequested
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FQtnVerbRequest             VerbRequest                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::OnCheatVerbRequested(const struct FQtnVerbRequest& VerbRequest)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnCheatVerbRequested");

	Params::AQtnPawn_OnCheatVerbRequested_Params Parms{};

	Parms.VerbRequest = VerbRequest;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.OnAnimWindowEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::OnAnimWindowEnd(class UQtnAnimWindow* AnimWindow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnAnimWindowEnd");

	Params::AQtnPawn_OnAnimWindowEnd_Params Parms{};

	Parms.AnimWindow = AnimWindow;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.OnAnimWindowBegin
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::OnAnimWindowBegin(class UQtnAnimWindow* AnimWindow, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnAnimWindowBegin");

	Params::AQtnPawn_OnAnimWindowBegin_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.OnAnimNotify
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimNotify*              AnimNotify                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::OnAnimNotify(class UQtnAnimNotify* AnimNotify)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "OnAnimNotify");

	Params::AQtnPawn_OnAnimNotify_Params Parms{};

	Parms.AnimNotify = AnimNotify;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPawn.MulticastTeleportQtnPawn
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                     Destination                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Orientation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::MulticastTeleportQtnPawn(const struct FVector& Destination, const struct FRotator& Orientation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "MulticastTeleportQtnPawn");

	Params::AQtnPawn_MulticastTeleportQtnPawn_Params Parms{};

	Parms.Destination = Destination;
	Parms.Orientation = Orientation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.MulticastOutgoingPlayerDamage
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UQtnDamageReceptorComponent* PDamageRecipient                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::MulticastOutgoingPlayerDamage(class UQtnDamageReceptorComponent* PDamageRecipient, const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "MulticastOutgoingPlayerDamage");

	Params::AQtnPawn_MulticastOutgoingPlayerDamage_Params Parms{};

	Parms.PDamageRecipient = PDamageRecipient;
	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.MulticastFX
// (BlueprintAuthorityOnly, Net, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnFXActor>     FxClass                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::MulticastFX(TSubclassOf<class AQtnFXActor> FxClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "MulticastFX");

	Params::AQtnPawn_MulticastFX_Params Parms{};

	Parms.FxClass = FxClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.MulticastDamageNonReplicatedActor
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UQtnDamageReceptorComponent* PDamageReceptor                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::MulticastDamageNonReplicatedActor(class UQtnDamageReceptorComponent* PDamageReceptor, const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "MulticastDamageNonReplicatedActor");

	Params::AQtnPawn_MulticastDamageNonReplicatedActor_Params Parms{};

	Parms.PDamageReceptor = PDamageReceptor;
	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.MarkForCleanup_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPawn::MarkForCleanup_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "MarkForCleanup_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ManuallyTickVerbInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnVerb*                    PVerbInstance                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaSeconds                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::ManuallyTickVerbInstance(class UQtnVerb* PVerbInstance, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ManuallyTickVerbInstance");

	Params::AQtnPawn_ManuallyTickVerbInstance_Params Parms{};

	Parms.PVerbInstance = PVerbInstance;
	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalSetRootMotionSmoothMoveToDynamicLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalSetRootMotionSmoothMoveToDynamicLocation(const struct FVector& TargetLocation, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalSetRootMotionSmoothMoveToDynamicLocation");

	Params::AQtnPawn_LocalSetRootMotionSmoothMoveToDynamicLocation_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalSetRootMotionInstantMoveToDynamicLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalSetRootMotionInstantMoveToDynamicLocation(const struct FVector& TargetLocation, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalSetRootMotionInstantMoveToDynamicLocation");

	Params::AQtnPawn_LocalSetRootMotionInstantMoveToDynamicLocation_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalSetDefaultCharacterMovementMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPawn::LocalSetDefaultCharacterMovementMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalSetDefaultCharacterMovementMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalSetCharacterMovementMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EMovementMode           MovementMode                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalSetCharacterMovementMode(enum class EMovementMode MovementMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalSetCharacterMovementMode");

	Params::AQtnPawn_LocalSetCharacterMovementMode_Params Parms{};

	Parms.MovementMode = MovementMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalGenerateAINoise
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      EmittingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnNoiseEnum           NoiseType                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NoiseStrength                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalGenerateAINoise(class AActor* EmittingActor, enum class EQtnNoiseEnum NoiseType, float NoiseStrength)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalGenerateAINoise");

	Params::AQtnPawn_LocalGenerateAINoise_Params Parms{};

	Parms.EmittingActor = EmittingActor;
	Parms.NoiseType = NoiseType;
	Parms.NoiseStrength = NoiseStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalEndRootMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalEndRootMotion(class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalEndRootMotion");

	Params::AQtnPawn_LocalEndRootMotion_Params Parms{};

	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalDropOtherActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DestroyAfterDrop                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalDropOtherActor(class AActor* OtherActor, bool DestroyAfterDrop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalDropOtherActor");

	Params::AQtnPawn_LocalDropOtherActor_Params Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DestroyAfterDrop = DestroyAfterDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalBeginRootMotionSmoothMoveToDynamic
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalBeginRootMotionSmoothMoveToDynamic(const struct FVector& StartLocation, const struct FVector& EndLocation, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalBeginRootMotionSmoothMoveToDynamic");

	Params::AQtnPawn_LocalBeginRootMotionSmoothMoveToDynamic_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.EndLocation = EndLocation;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalBeginRootMotionSmoothMoveTo
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalBeginRootMotionSmoothMoveTo(const struct FVector& StartLocation, const struct FVector& EndLocation, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalBeginRootMotionSmoothMoveTo");

	Params::AQtnPawn_LocalBeginRootMotionSmoothMoveTo_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.EndLocation = EndLocation;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalBeginRootMotionInstantMoveToDynamic
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalBeginRootMotionInstantMoveToDynamic(const struct FVector& TargetLocation, float Duration, bool OverrideVelocity, bool ZeroVelocityWhenFinished, class FName InstanceName, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalBeginRootMotionInstantMoveToDynamic");

	Params::AQtnPawn_LocalBeginRootMotionInstantMoveToDynamic_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.Duration = Duration;
	Parms.OverrideVelocity = OverrideVelocity;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalBeginRootMotionImpulse
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Impulse                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalBeginRootMotionImpulse(const struct FVector& Impulse, bool OverrideVelocity, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalBeginRootMotionImpulse");

	Params::AQtnPawn_LocalBeginRootMotionImpulse_Params Parms{};

	Parms.Impulse = Impulse;
	Parms.OverrideVelocity = OverrideVelocity;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.LocalBeginRootMotionConstantForce
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Strength                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromVerb                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::LocalBeginRootMotionConstantForce(const struct FVector& Direction, float Strength, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName, bool FromVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "LocalBeginRootMotionConstantForce");

	Params::AQtnPawn_LocalBeginRootMotionConstantForce_Params Parms{};

	Parms.Direction = Direction;
	Parms.Strength = Strength;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;
	Parms.FromVerb = FromVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.IsTouchingGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsTouchingGround()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsTouchingGround");

	Params::AQtnPawn_IsTouchingGround_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsReadyForGameplay
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsReadyForGameplay");

	Params::AQtnPawn_IsReadyForGameplay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsPawnOnNavMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsPawnOnNavMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsPawnOnNavMesh");

	Params::AQtnPawn_IsPawnOnNavMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsNeutral
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsNeutral(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsNeutral");

	Params::AQtnPawn_IsNeutral_Params Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsMarkedForCleanup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsMarkedForCleanup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsMarkedForCleanup");

	Params::AQtnPawn_IsMarkedForCleanup_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsLocallyControlledPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsLocallyControlledPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsLocallyControlledPlayer");

	Params::AQtnPawn_IsLocallyControlledPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsInDeepSnow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsInDeepSnow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsInDeepSnow");

	Params::AQtnPawn_IsInDeepSnow_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsImmuneToAITracking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsImmuneToAITracking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsImmuneToAITracking");

	Params::AQtnPawn_IsImmuneToAITracking_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsHitReactingOrKnockedDown
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsHitReactingOrKnockedDown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsHitReactingOrKnockedDown");

	Params::AQtnPawn_IsHitReactingOrKnockedDown_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsHero
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsHero()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsHero");

	Params::AQtnPawn_IsHero_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsEnemy(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsEnemy");

	Params::AQtnPawn_IsEnemy_Params Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsCarrying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsCarrying(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsCarrying");

	Params::AQtnPawn_IsCarrying_Params Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsAnyHitStopActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsAnyHitStopActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsAnyHitStopActive");

	Params::AQtnPawn_IsAnyHitStopActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsAlly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsAlly(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsAlly");

	Params::AQtnPawn_IsAlly_Params Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IsAliveAndConscious
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::IsAliveAndConscious()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IsAliveAndConscious");

	Params::AQtnPawn_IsAliveAndConscious_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.IgnoreVerbInputUntilRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnUIBodyActionEnum    InputAction                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::IgnoreVerbInputUntilRelease(enum class EQtnUIBodyActionEnum InputAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IgnoreVerbInputUntilRelease");

	Params::AQtnPawn_IgnoreVerbInputUntilRelease_Params Parms{};

	Parms.InputAction = InputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.IgnoreOverlappingPawnsAfterTeleport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      FreshlyTeleportedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::IgnoreOverlappingPawnsAfterTeleport(class AActor* FreshlyTeleportedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IgnoreOverlappingPawnsAfterTeleport");

	Params::AQtnPawn_IgnoreOverlappingPawnsAfterTeleport_Params Parms{};

	Parms.FreshlyTeleportedActor = FreshlyTeleportedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.IgnoreActorUntilOverlapEnds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      FreshlyTeleportedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::IgnoreActorUntilOverlapEnds(class AActor* FreshlyTeleportedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "IgnoreActorUntilOverlapEnds");

	Params::AQtnPawn_IgnoreActorUntilOverlapEnds_Params Parms{};

	Parms.FreshlyTeleportedActor = FreshlyTeleportedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HasTeamAttitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      OtherActor                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTeamAttitude        TeamAttitude                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::HasTeamAttitude(class AActor* OtherActor, enum class EQtnTeamAttitude TeamAttitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HasTeamAttitude");

	Params::AQtnPawn_HasTeamAttitude_Params Parms{};

	Parms.OtherActor = OtherActor;
	Parms.TeamAttitude = TeamAttitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.HasJustTeleported
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::HasJustTeleported()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HasJustTeleported");

	Params::AQtnPawn_HasJustTeleported_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.HasDamageImmunity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnDamageType>  DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PermanentlyImmune                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::HasDamageImmunity(TSubclassOf<class UQtnDamageType> DamageTypeClass, bool* PermanentlyImmune)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HasDamageImmunity");

	Params::AQtnPawn_HasDamageImmunity_Params Parms{};

	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PermanentlyImmune != nullptr)
		*PermanentlyImmune = Parms.PermanentlyImmune;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.HandleVerbEquipChange
// (Final, Native, Public)
// Parameters:
// class UQtnVerb*                    AffectedVerb                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsEquipped                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::HandleVerbEquipChange(class UQtnVerb* AffectedVerb, bool IsEquipped, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleVerbEquipChange");

	Params::AQtnPawn_HandleVerbEquipChange_Params Parms{};

	Parms.AffectedVerb = AffectedVerb;
	Parms.IsEquipped = IsEquipped;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleOverlapEnd
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*         POverlappedComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POtherActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         POtherComp                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::HandleOverlapEnd(class UPrimitiveComponent* POverlappedComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleOverlapEnd");

	Params::AQtnPawn_HandleOverlapEnd_Params Parms{};

	Parms.POverlappedComponent = POverlappedComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleOverlapBegin
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         POverlappedComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POtherActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         POtherComp                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::HandleOverlapBegin(class UPrimitiveComponent* POverlappedComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleOverlapBegin");

	Params::AQtnPawn_HandleOverlapBegin_Params Parms{};

	Parms.POverlappedComponent = POverlappedComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleOutgoingDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                      DamagedActor                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::HandleOutgoingDamage(class AActor* DamagedActor, struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactionInfo, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleOutgoingDamage");

	Params::AQtnPawn_HandleOutgoingDamage_Params Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageInfo = DamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleKilledSomething
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      KilledActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::HandleKilledSomething(class AActor* KilledActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleKilledSomething");

	Params::AQtnPawn_HandleKilledSomething_Params Parms{};

	Parms.KilledActor = KilledActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleDifficultyChange_ServerOnly
// (Final, Native, Protected)
// Parameters:
// enum class EQtnDifficulty          NewDifficulty                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::HandleDifficultyChange_ServerOnly(enum class EQtnDifficulty NewDifficulty)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleDifficultyChange_ServerOnly");

	Params::AQtnPawn_HandleDifficultyChange_ServerOnly_Params Parms{};

	Parms.NewDifficulty = NewDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleCarryStart
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UQtnCarryComponent*          CarryComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      CarryingActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnCarrySettings           CarrySettings                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::HandleCarryStart(class UQtnCarryComponent* CarryComponent, class AActor* CarryingActor, struct FQtnCarrySettings& CarrySettings, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleCarryStart");

	Params::AQtnPawn_HandleCarryStart_Params Parms{};

	Parms.CarryComponent = CarryComponent;
	Parms.CarryingActor = CarryingActor;
	Parms.CarrySettings = CarrySettings;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleCarryEnd
// (Final, Native, Public)
// Parameters:
// class UQtnCarryComponent*          CarryComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      CarryingActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::HandleCarryEnd(class UQtnCarryComponent* CarryComponent, class AActor* CarryingActor, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleCarryEnd");

	Params::AQtnPawn_HandleCarryEnd_Params Parms{};

	Parms.CarryComponent = CarryComponent;
	Parms.CarryingActor = CarryingActor;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.HandleCapsuleHit
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         PHitComp                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POtherActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         POtherComp                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::HandleCapsuleHit(class UPrimitiveComponent* PHitComp, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "HandleCapsuleHit");

	Params::AQtnPawn_HandleCapsuleHit_Params Parms{};

	Parms.PHitComp = PHitComp;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.GracefulDespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPawn::GracefulDespawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GracefulDespawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.GetVerbComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerbComponent*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerbComponent* AQtnPawn::GetVerbComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetVerbComponent");

	Params::AQtnPawn_GetVerbComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetUnlocksComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnUnlocksComponent*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnUnlocksComponent* AQtnPawn::GetUnlocksComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetUnlocksComponent");

	Params::AQtnPawn_GetUnlocksComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnTeam>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnTeam> AQtnPawn::GetTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetTeam");

	Params::AQtnPawn_GetTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetQtnTeamAttitudeTowards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      OtherActor                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTeamAttitude        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnTeamAttitude AQtnPawn::GetQtnTeamAttitudeTowards(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetQtnTeamAttitudeTowards");

	Params::AQtnPawn_GetQtnTeamAttitudeTowards_Params Parms{};

	Parms.OtherActor = OtherActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetQtnMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnMovementComponent*       ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnMovementComponent* AQtnPawn::GetQtnMovementComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetQtnMovementComponent");

	Params::AQtnPawn_GetQtnMovementComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetQtnCameraComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnCameraComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCameraComponent* AQtnPawn::GetQtnCameraComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetQtnCameraComponent");

	Params::AQtnPawn_GetQtnCameraComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPostRenderInfo
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        OtherPlayerController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               SkipThisFrame                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      HudLabel                                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                      FontColor                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::GetPostRenderInfo(class AQtnPlayerController* OtherPlayerController, bool* SkipThisFrame, class FString* HudLabel, struct FColor* FontColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPostRenderInfo");

	Params::AQtnPawn_GetPostRenderInfo_Params Parms{};

	Parms.OtherPlayerController = OtherPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SkipThisFrame != nullptr)
		*SkipThisFrame = Parms.SkipThisFrame;

	if (HudLabel != nullptr)
		*HudLabel = std::move(Parms.HudLabel);

	if (FontColor != nullptr)
		*FontColor = std::move(Parms.FontColor);

}


// Function QtnGame.QtnPawn.GetPawnVisibilityRatioBP
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                VisibilityColor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPawn::GetPawnVisibilityRatioBP(struct FLinearColor* VisibilityColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnVisibilityRatioBP");

	Params::AQtnPawn_GetPawnVisibilityRatioBP_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (VisibilityColor != nullptr)
		*VisibilityColor = std::move(Parms.VisibilityColor);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPawnScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPawn::GetPawnScale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnScale");

	Params::AQtnPawn_GetPawnScale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPawnLOD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnPawnLOD             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnPawnLOD AQtnPawn::GetPawnLOD()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnLOD");

	Params::AQtnPawn_GetPawnLOD_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPawnHeadLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnPawn::GetPawnHeadLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnHeadLocation");

	Params::AQtnPawn_GetPawnHeadLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPawnGravity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnPawn::GetPawnGravity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnGravity");

	Params::AQtnPawn_GetPawnGravity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPawnForwardVectorAlongGround
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnPawn::GetPawnForwardVectorAlongGround()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnForwardVectorAlongGround");

	Params::AQtnPawn_GetPawnForwardVectorAlongGround_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPawnFeetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnPawn::GetPawnFeetLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnFeetLocation");

	Params::AQtnPawn_GetPawnFeetLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetPawnCapsuleTop
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnPawn::GetPawnCapsuleTop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetPawnCapsuleTop");

	Params::AQtnPawn_GetPawnCapsuleTop_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetOwningSpawner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnSpawner*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnSpawner* AQtnPawn::GetOwningSpawner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetOwningSpawner");

	Params::AQtnPawn_GetOwningSpawner_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetOverlappingPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPawn*> AQtnPawn::GetOverlappingPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetOverlappingPawns");

	Params::AQtnPawn_GetOverlappingPawns_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetOverlappingNonPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AQtnPawn::GetOverlappingNonPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetOverlappingNonPawns");

	Params::AQtnPawn_GetOverlappingNonPawns_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetOriginalRelativeMeshRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AQtnPawn::GetOriginalRelativeMeshRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetOriginalRelativeMeshRotation");

	Params::AQtnPawn_GetOriginalRelativeMeshRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetOriginalRelativeMeshLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnPawn::GetOriginalRelativeMeshLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetOriginalRelativeMeshLocation");

	Params::AQtnPawn_GetOriginalRelativeMeshLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetOccupyingPlayerUI
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerUI*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerUI* AQtnPawn::GetOccupyingPlayerUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetOccupyingPlayerUI");

	Params::AQtnPawn_GetOccupyingPlayerUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetOccupyingLocalPlayerController
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* AQtnPawn::GetOccupyingLocalPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetOccupyingLocalPlayerController");

	Params::AQtnPawn_GetOccupyingLocalPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetManagedCarryComponents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnCarryComponent*>  ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnCarryComponent*> AQtnPawn::GetManagedCarryComponents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetManagedCarryComponents");

	Params::AQtnPawn_GetManagedCarryComponents_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetLootManagementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnLootManagementComponent* ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnLootManagementComponent* AQtnPawn::GetLootManagementComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetLootManagementComponent");

	Params::AQtnPawn_GetLootManagementComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetIntentions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnPawnIntentions          ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnPawnIntentions AQtnPawn::GetIntentions()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetIntentions");

	Params::AQtnPawn_GetIntentions_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetIntendedEquippedWeapons
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnItem*                    RangedWeapon                                                     (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnItem*                    MeleeWeapon                                                      (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::GetIntendedEquippedWeapons(class AQtnItem** RangedWeapon, class AQtnItem** MeleeWeapon)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetIntendedEquippedWeapons");

	Params::AQtnPawn_GetIntendedEquippedWeapons_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RangedWeapon != nullptr)
		*RangedWeapon = Parms.RangedWeapon;

	if (MeleeWeapon != nullptr)
		*MeleeWeapon = Parms.MeleeWeapon;

}


// Function QtnGame.QtnPawn.GetIntendedEquippedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               Ranged                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* AQtnPawn::GetIntendedEquippedWeapon(bool Ranged)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetIntendedEquippedWeapon");

	Params::AQtnPawn_GetIntendedEquippedWeapon_Params Parms{};

	Parms.Ranged = Ranged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetHealth
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                              Health                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxHealth                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::GetHealth(float* Health, float* MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetHealth");

	Params::AQtnPawn_GetHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Health != nullptr)
		*Health = Parms.Health;

	if (MaxHealth != nullptr)
		*MaxHealth = Parms.MaxHealth;

}


// Function QtnGame.QtnPawn.GetFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag AQtnPawn::GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetFaction");

	Params::AQtnPawn_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetExistingVerb
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnVerb>        VerbClass                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* AQtnPawn::GetExistingVerb(TSubclassOf<class UQtnVerb> VerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetExistingVerb");

	Params::AQtnPawn_GetExistingVerb_Params Parms{};

	Parms.VerbClass = VerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetEncompassingDeepSnowVolumes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnHintVolumeComponent*>ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnHintVolumeComponent*> AQtnPawn::GetEncompassingDeepSnowVolumes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetEncompassingDeepSnowVolumes");

	Params::AQtnPawn_GetEncompassingDeepSnowVolumes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

class FText AQtnPawn::GetDisplayName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetDisplayName");

	Params::AQtnPawn_GetDisplayName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetDamageReceptor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnDamageReceptorComponent* ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDamageReceptorComponent* AQtnPawn::GetDamageReceptor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetDamageReceptor");

	Params::AQtnPawn_GetDamageReceptor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetCurrentActiveVerb
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* AQtnPawn::GetCurrentActiveVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetCurrentActiveVerb");

	Params::AQtnPawn_GetCurrentActiveVerb_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetControllingPlayerPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnPawn::GetControllingPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetControllingPlayerPawn");

	Params::AQtnPawn_GetControllingPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetCarryingActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnPawn::GetCarryingActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetCarryingActor");

	Params::AQtnPawn_GetCarryingActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetCarryComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnCarryComponent*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCarryComponent* AQtnPawn::GetCarryComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetCarryComponent");

	Params::AQtnPawn_GetCarryComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetBodyToBlame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPawn::GetBodyToBlame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetBodyToBlame");

	Params::AQtnPawn_GetBodyToBlame_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetAttributeComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnAttributeComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAttributeComponent* AQtnPawn::GetAttributeComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetAttributeComponent");

	Params::AQtnPawn_GetAttributeComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetAttackDamageMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPawn::GetAttackDamageMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetAttackDamageMultiplier");

	Params::AQtnPawn_GetAttackDamageMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.GetAllEquippedVerbs
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UQtnVerb*>            PawnVerbs                                                        (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::GetAllEquippedVerbs(TArray<class UQtnVerb*>* PawnVerbs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "GetAllEquippedVerbs");

	Params::AQtnPawn_GetAllEquippedVerbs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PawnVerbs != nullptr)
		*PawnVerbs = std::move(Parms.PawnVerbs);

}


// Function QtnGame.QtnPawn.DropAllCarriedPawns_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPawn::DropAllCarriedPawns_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "DropAllCarriedPawns_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.DoHitStop
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnHitStopRequest          HitStopRequest                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::DoHitStop(struct FQtnHitStopRequest& HitStopRequest)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "DoHitStop");

	Params::AQtnPawn_DoHitStop_Params Parms{};

	Parms.HitStopRequest = HitStopRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.DoForceFeedbackCameraShakeIfLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UForceFeedbackEffect*        ForceFeedbackEffect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UCameraShakeBase>CameraShake                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              CameraShakeScale                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::DoForceFeedbackCameraShakeIfLocalPlayer(class UForceFeedbackEffect* ForceFeedbackEffect, TSubclassOf<class UCameraShakeBase> CameraShake, float CameraShakeScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "DoForceFeedbackCameraShakeIfLocalPlayer");

	Params::AQtnPawn_DoForceFeedbackCameraShakeIfLocalPlayer_Params Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.CameraShake = CameraShake;
	Parms.CameraShakeScale = CameraShakeScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ClientSetAutonomousProxyIntentions
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FQtnPawnIntentions          Intentions                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::ClientSetAutonomousProxyIntentions(const struct FQtnPawnIntentions& Intentions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ClientSetAutonomousProxyIntentions");

	Params::AQtnPawn_ClientSetAutonomousProxyIntentions_Params Parms{};

	Parms.Intentions = Intentions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ClientRequestVerb
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FQtnVerbRequest             VerbRequest                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPawn::ClientRequestVerb(const struct FQtnVerbRequest& VerbRequest)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ClientRequestVerb");

	Params::AQtnPawn_ClientRequestVerb_Params Parms{};

	Parms.VerbRequest = VerbRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ChooseBestVerb
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnUIBodyActionEnum    bodyActionEnum                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     IntendedTarget                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* AQtnPawn::ChooseBestVerb(enum class EQtnUIBodyActionEnum bodyActionEnum, class UObject* IntendedTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ChooseBestVerb");

	Params::AQtnPawn_ChooseBestVerb_Params Parms{};

	Parms.bodyActionEnum = bodyActionEnum;
	Parms.IntendedTarget = IntendedTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.ChooseBestAttackVerb
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     IntendedTarget                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* AQtnPawn::ChooseBestAttackVerb(class UObject* IntendedTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ChooseBestAttackVerb");

	Params::AQtnPawn_ChooseBestAttackVerb_Params Parms{};

	Parms.IntendedTarget = IntendedTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.CanBeTargetedForCombat_ServerOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    OtherPawn                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPawn::CanBeTargetedForCombat_ServerOnly(class AQtnPawn* OtherPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "CanBeTargetedForCombat_ServerOnly");

	Params::AQtnPawn_CanBeTargetedForCombat_ServerOnly_Params Parms{};

	Parms.OtherPawn = OtherPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.ApplyPawnDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPawn::ApplyPawnDamage(struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ApplyPawnDamage");

	Params::AQtnPawn_ApplyPawnDamage_Params Parms{};

	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.ApplyKnockback
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     SourceLocation                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HorizontalDistance                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ApexHeight                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AimAssistDegrees                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPawn::ApplyKnockback(class AQtnPawn* Culprit, struct FVector& SourceLocation, float HorizontalDistance, float ApexHeight, float AimAssistDegrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "ApplyKnockback");

	Params::AQtnPawn_ApplyKnockback_Params Parms{};

	Parms.Culprit = Culprit;
	Parms.SourceLocation = SourceLocation;
	Parms.HorizontalDistance = HorizontalDistance;
	Parms.ApexHeight = ApexHeight;
	Parms.AimAssistDegrees = AimAssistDegrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPawn.AdjustLocationForGeo
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPawn::AdjustLocationForGeo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "AdjustLocationForGeo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.AddTimeDilation_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     TimeDilator                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeDilation                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DurationBeforeDecay                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DecayDuration                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::AddTimeDilation_ServerOnly(class UObject* TimeDilator, float TimeDilation, float DurationBeforeDecay, float DecayDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "AddTimeDilation_ServerOnly");

	Params::AQtnPawn_AddTimeDilation_ServerOnly_Params Parms{};

	Parms.TimeDilator = TimeDilator;
	Parms.TimeDilation = TimeDilation;
	Parms.DurationBeforeDecay = DurationBeforeDecay;
	Parms.DecayDuration = DecayDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.AddDamageImmunity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnDamageType>  DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::AddDamageImmunity(TSubclassOf<class UQtnDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "AddDamageImmunity");

	Params::AQtnPawn_AddDamageImmunity_Params Parms{};

	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.AddCombatTargetingInhibitor_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::AddCombatTargetingInhibitor_ServerOnly(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "AddCombatTargetingInhibitor_ServerOnly");

	Params::AQtnPawn_AddCombatTargetingInhibitor_ServerOnly_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.AddAttackDamageMultiplier_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SourceObject                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Multiplier                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::AddAttackDamageMultiplier_ServerOnly(class UObject* SourceObject, float Multiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "AddAttackDamageMultiplier_ServerOnly");

	Params::AQtnPawn_AddAttackDamageMultiplier_ServerOnly_Params Parms{};

	Parms.SourceObject = SourceObject;
	Parms.Multiplier = Multiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPawn.AddAggro_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     AggroCauser                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AggroContribution                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPawn::AddAggro_ServerOnly(class UObject* AggroCauser, float AggroContribution)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPawn", "AddAggro_ServerOnly");

	Params::AQtnPawn_AddAggro_ServerOnly_Params Parms{};

	Parms.AggroCauser = AggroCauser;
	Parms.AggroContribution = AggroContribution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnBodyPawn
// (Actor, Pawn)

class UClass* AQtnBodyPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBodyPawn");

	return Clss;
}


// QtnBodyPawn QtnGame.Default__QtnBodyPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnBodyPawn* AQtnBodyPawn::GetDefaultObj()
{
	static class AQtnBodyPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnBodyPawn*>(AQtnBodyPawn::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBodyPawn.UpdateAppearance
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyPawn::UpdateAppearance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "UpdateAppearance");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.UnlockBodyYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     RequestingObject                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::UnlockBodyYaw(class UObject* RequestingObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "UnlockBodyYaw");

	Params::AQtnBodyPawn_UnlockBodyYaw_Params Parms{};

	Parms.RequestingObject = RequestingObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.SetMantleSpeedMultiplier_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              DesiredMultiplier                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::SetMantleSpeedMultiplier_ServerOnly(float DesiredMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "SetMantleSpeedMultiplier_ServerOnly");

	Params::AQtnBodyPawn_SetMantleSpeedMultiplier_ServerOnly_Params Parms{};

	Parms.DesiredMultiplier = DesiredMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.SetLocoBlendOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     OverridingObject                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlendSpace*                 LocoBlendOverride                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnLocoOverridePriorityPriority                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::SetLocoBlendOverride(class UObject* OverridingObject, class UBlendSpace* LocoBlendOverride, enum class EQtnLocoOverridePriority Priority)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "SetLocoBlendOverride");

	Params::AQtnBodyPawn_SetLocoBlendOverride_Params Parms{};

	Parms.OverridingObject = OverridingObject;
	Parms.LocoBlendOverride = LocoBlendOverride;
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.SetLockedBodyYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              WorldYaw                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::SetLockedBodyYaw(float WorldYaw)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "SetLockedBodyYaw");

	Params::AQtnBodyPawn_SetLockedBodyYaw_Params Parms{};

	Parms.WorldYaw = WorldYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.SetAimPitchBlend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBlendSpace1D*               AimPitchBlend1D                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::SetAimPitchBlend(class UBlendSpace1D* AimPitchBlend1D)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "SetAimPitchBlend");

	Params::AQtnBodyPawn_SetAimPitchBlend_Params Parms{};

	Parms.AimPitchBlend1D = AimPitchBlend1D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerSetScriptedAction
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FQtnActionIntention         ActionIntention                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerSetScriptedAction(const struct FQtnActionIntention& ActionIntention)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerSetScriptedAction");

	Params::AQtnBodyPawn_ServerSetScriptedAction_Params Parms{};

	Parms.ActionIntention = ActionIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerSetBodyAliveness
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// enum class EQtnBodyAliveness       bodyAliveness                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      AlivenessInstigator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerSetBodyAliveness(enum class EQtnBodyAliveness bodyAliveness, class AActor* AlivenessInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerSetBodyAliveness");

	Params::AQtnBodyPawn_ServerSetBodyAliveness_Params Parms{};

	Parms.bodyAliveness = bodyAliveness;
	Parms.AlivenessInstigator = AlivenessInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerRequestScriptedVOForThisPlayer
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AActor*                      PSpeaker                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PriorityOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerRequestScriptedVOForThisPlayer(class AActor* PSpeaker, const struct FGameplayTag& ScriptedId, bool PreferToPlayOnBody, int32 PrescribedVariant, int32 PriorityOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerRequestScriptedVOForThisPlayer");

	Params::AQtnBodyPawn_ServerRequestScriptedVOForThisPlayer_Params Parms{};

	Parms.PSpeaker = PSpeaker;
	Parms.ScriptedId = ScriptedId;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;
	Parms.PriorityOverride = PriorityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerRequestMantle
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults)
// Parameters:
// struct FVector                     MantleDirection                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     LedgePoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetPoint                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartingLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Vault                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerRequestMantle(const struct FVector& MantleDirection, const struct FVector& LedgePoint, const struct FVector& TargetPoint, const struct FVector& StartingLocation, bool Vault)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerRequestMantle");

	Params::AQtnBodyPawn_ServerRequestMantle_Params Parms{};

	Parms.MantleDirection = MantleDirection;
	Parms.LedgePoint = LedgePoint;
	Parms.TargetPoint = TargetPoint;
	Parms.StartingLocation = StartingLocation;
	Parms.Vault = Vault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerRequestJump
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// bool                               CanMantle                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IntentionalJump                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TopZ                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AirControl                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerRequestJump(bool CanMantle, bool IntentionalJump, float TopZ, bool AirControl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerRequestJump");

	Params::AQtnBodyPawn_ServerRequestJump_Params Parms{};

	Parms.CanMantle = CanMantle;
	Parms.IntentionalJump = IntentionalJump;
	Parms.TopZ = TopZ;
	Parms.AirControl = AirControl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerRequestItemUse
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnItem*                    PItem                                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PIntendedTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AltUse                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnItemUseIntent       UseIntent                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerRequestItemUse(class AQtnItem* PItem, class AActor* PIntendedTarget, bool AltUse, enum class EQtnItemUseIntent UseIntent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerRequestItemUse");

	Params::AQtnBodyPawn_ServerRequestItemUse_Params Parms{};

	Parms.PItem = PItem;
	Parms.PIntendedTarget = PIntendedTarget;
	Parms.AltUse = AltUse;
	Parms.UseIntent = UseIntent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerRequestFrob
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class UQtnFrobbableComponent*      PFrobTarget                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerRequestFrob(class UQtnFrobbableComponent* PFrobTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerRequestFrob");

	Params::AQtnBodyPawn_ServerRequestFrob_Params Parms{};

	Parms.PFrobTarget = PFrobTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerPushScriptedAction
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FQtnActionIntention         NonLoopingActionIntention                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerPushScriptedAction(const struct FQtnActionIntention& NonLoopingActionIntention)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerPushScriptedAction");

	Params::AQtnBodyPawn_ServerPushScriptedAction_Params Parms{};

	Parms.NonLoopingActionIntention = NonLoopingActionIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerMarkDataBagOccupy
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AQtnBodyPawn::ServerMarkDataBagOccupy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerMarkDataBagOccupy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerFinishCurrentFullBodyState
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AQtnBodyPawn::ServerFinishCurrentFullBodyState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerFinishCurrentFullBodyState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerDisengageFrob
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:

void AQtnBodyPawn::ServerDisengageFrob()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerDisengageFrob");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerCancelScriptedAction
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void AQtnBodyPawn::ServerCancelScriptedAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerCancelScriptedAction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ServerBodyUnOccupy
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnPlayerPawn*              POccupyingPlayer                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ServerBodyUnOccupy(class AQtnPlayerPawn* POccupyingPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ServerBodyUnOccupy");

	Params::AQtnBodyPawn_ServerBodyUnOccupy_Params Parms{};

	Parms.POccupyingPlayer = POccupyingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.RemoveStatusEffect_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::RemoveStatusEffect_ServerOnly(TSubclassOf<class UQtnStatusEffect> StatusEffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "RemoveStatusEffect_ServerOnly");

	Params::AQtnBodyPawn_RemoveStatusEffect_ServerOnly_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.RemoveJumpInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     JumpInhibitor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::RemoveJumpInhibitor_ServerOnly(class UObject* JumpInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "RemoveJumpInhibitor_ServerOnly");

	Params::AQtnBodyPawn_RemoveJumpInhibitor_ServerOnly_Params Parms{};

	Parms.JumpInhibitor = JumpInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.RemoveEmptyHandsInducer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Culprit                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::RemoveEmptyHandsInducer(class UObject* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "RemoveEmptyHandsInducer");

	Params::AQtnBodyPawn_RemoveEmptyHandsInducer_Params Parms{};

	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnBodyPawn.QtnItemEquipEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnItem*                    Item                                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::QtnItemEquipEvent__DelegateSignature(class AQtnItem* Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "QtnItemEquipEvent__DelegateSignature");

	Params::AQtnBodyPawn_QtnItemEquipEvent__DelegateSignature_Params Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyPawn.QtnBodyPawnFootstepEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams, HasDefaults)
// Parameters:
// enum class EPhysicalSurface        PhysicalSurface                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ImpactLocation                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ImpactNormal                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FootstepLoudness                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::QtnBodyPawnFootstepEvent__DelegateSignature(enum class EPhysicalSurface PhysicalSurface, struct FVector& ImpactLocation, struct FVector& ImpactNormal, float FootstepLoudness)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "QtnBodyPawnFootstepEvent__DelegateSignature");

	Params::AQtnBodyPawn_QtnBodyPawnFootstepEvent__DelegateSignature_Params Parms{};

	Parms.PhysicalSurface = PhysicalSurface;
	Parms.ImpactLocation = ImpactLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.FootstepLoudness = FootstepLoudness;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyPawn.QtnBodyAliveChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      AlivenessInstigator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       OldBodyAliveness                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       bodyAliveness                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::QtnBodyAliveChangeEvent__DelegateSignature(class AQtnBodyPawn* bodyPawn, class AActor* AlivenessInstigator, enum class EQtnBodyAliveness OldBodyAliveness, enum class EQtnBodyAliveness bodyAliveness, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "QtnBodyAliveChangeEvent__DelegateSignature");

	Params::AQtnBodyPawn_QtnBodyAliveChangeEvent__DelegateSignature_Params Parms{};

	Parms.bodyPawn = bodyPawn;
	Parms.AlivenessInstigator = AlivenessInstigator;
	Parms.OldBodyAliveness = OldBodyAliveness;
	Parms.bodyAliveness = bodyAliveness;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyPawn.QtnAICombatBeginEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyPawn*                AiBody                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::QtnAICombatBeginEvent__DelegateSignature(class AQtnBodyPawn* AiBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "QtnAICombatBeginEvent__DelegateSignature");

	Params::AQtnBodyPawn_QtnAICombatBeginEvent__DelegateSignature_Params Parms{};

	Parms.AiBody = AiBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyPawn.PlaySound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                  Sound                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Spatialize                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AQtnBodyPawn::PlaySound(class USoundBase* Sound, bool Spatialize)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "PlaySound");

	Params::AQtnBodyPawn_PlaySound_Params Parms{};

	Parms.Sound = Sound;
	Parms.Spatialize = Spatialize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.OnStanceChanged
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnBodyPawn::OnStanceChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "OnStanceChanged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnBodyPawn.OnRep_OccupyingPlayerPawn
// (Final, Native, Private)
// Parameters:

void AQtnBodyPawn::OnRep_OccupyingPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "OnRep_OccupyingPlayerPawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.OnRep_BodyAliveness
// (Final, Native, Private)
// Parameters:

void AQtnBodyPawn::OnRep_BodyAliveness()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "OnRep_BodyAliveness");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.OnBodyPawnUnOccupied
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              OccupyingPlayerPawn                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::OnBodyPawnUnOccupied(class AQtnPlayerPawn* OccupyingPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "OnBodyPawnUnOccupied");

	Params::AQtnBodyPawn_OnBodyPawnUnOccupied_Params Parms{};

	Parms.OccupyingPlayerPawn = OccupyingPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyPawn.OnBodyPawnOccupied
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              OccupyingPlayerPawn                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::OnBodyPawnOccupied(class AQtnPlayerPawn* OccupyingPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "OnBodyPawnOccupied");

	Params::AQtnBodyPawn_OnBodyPawnOccupied_Params Parms{};

	Parms.OccupyingPlayerPawn = OccupyingPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyPawn.OnAIBodyAppearanceUpdated
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnBodyPawn::OnAIBodyAppearanceUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "OnAIBodyAppearanceUpdated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnBodyPawn.MulticastRequestMantle
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                     MantleDirection                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     LedgePoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetPoint                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartingLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Vault                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::MulticastRequestMantle(const struct FVector& MantleDirection, const struct FVector& LedgePoint, const struct FVector& TargetPoint, const struct FVector& StartingLocation, bool Vault)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "MulticastRequestMantle");

	Params::AQtnBodyPawn_MulticastRequestMantle_Params Parms{};

	Parms.MantleDirection = MantleDirection;
	Parms.LedgePoint = LedgePoint;
	Parms.TargetPoint = TargetPoint;
	Parms.StartingLocation = StartingLocation;
	Parms.Vault = Vault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.MulticastRequestJump
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// bool                               CanMantle                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IntentionalJump                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TopZ                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AirControl                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::MulticastRequestJump(bool CanMantle, bool IntentionalJump, float TopZ, bool AirControl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "MulticastRequestJump");

	Params::AQtnBodyPawn_MulticastRequestJump_Params Parms{};

	Parms.CanMantle = CanMantle;
	Parms.IntentionalJump = IntentionalJump;
	Parms.TopZ = TopZ;
	Parms.AirControl = AirControl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.MulticastRequestItemUse
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AQtnItem*                    PItem                                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PIntendedTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AltUse                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnItemUseIntent       UseIntent                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::MulticastRequestItemUse(class AQtnItem* PItem, class AActor* PIntendedTarget, bool AltUse, enum class EQtnItemUseIntent UseIntent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "MulticastRequestItemUse");

	Params::AQtnBodyPawn_MulticastRequestItemUse_Params Parms{};

	Parms.PItem = PItem;
	Parms.PIntendedTarget = PIntendedTarget;
	Parms.AltUse = AltUse;
	Parms.UseIntent = UseIntent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.MulticastRequestFrob
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UQtnFrobbableComponent*      PFrobTarget                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::MulticastRequestFrob(class UQtnFrobbableComponent* PFrobTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "MulticastRequestFrob");

	Params::AQtnBodyPawn_MulticastRequestFrob_Params Parms{};

	Parms.PFrobTarget = PFrobTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.MulticastPushScriptedAction
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FQtnActionIntention         ActionIntention                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnBodyPawn::MulticastPushScriptedAction(const struct FQtnActionIntention& ActionIntention)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "MulticastPushScriptedAction");

	Params::AQtnBodyPawn_MulticastPushScriptedAction_Params Parms{};

	Parms.ActionIntention = ActionIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.MulticastFinishCurrentFullBodyState
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AQtnBodyPawn::MulticastFinishCurrentFullBodyState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "MulticastFinishCurrentFullBodyState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.MulticastDisengageFrob
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AQtnBodyPawn::MulticastDisengageFrob()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "MulticastDisengageFrob");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.LockBodyYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     RequestingObject                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::LockBodyYaw(class UObject* RequestingObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "LockBodyYaw");

	Params::AQtnBodyPawn_LockBodyYaw_Params Parms{};

	Parms.RequestingObject = RequestingObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.LocalSetScriptedAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnActionIntention         ActionIntention                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnBodyPawn::LocalSetScriptedAction(struct FQtnActionIntention& ActionIntention)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "LocalSetScriptedAction");

	Params::AQtnBodyPawn_LocalSetScriptedAction_Params Parms{};

	Parms.ActionIntention = ActionIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.LocalSetMeleeWeaponVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyPawn::LocalSetMeleeWeaponVisible()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "LocalSetMeleeWeaponVisible");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.LocalSetBodyHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Hidden                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     bodyHider                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::LocalSetBodyHidden(bool Hidden, class UObject* bodyHider)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "LocalSetBodyHidden");

	Params::AQtnBodyPawn_LocalSetBodyHidden_Params Parms{};

	Parms.Hidden = Hidden;
	Parms.bodyHider = bodyHider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.LocalRequestDodge
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyPawn::LocalRequestDodge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "LocalRequestDodge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.LocalPushScriptedAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnActionIntention         NonLoopingActionIntention                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnBodyPawn::LocalPushScriptedAction(struct FQtnActionIntention& NonLoopingActionIntention)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "LocalPushScriptedAction");

	Params::AQtnBodyPawn_LocalPushScriptedAction_Params Parms{};

	Parms.NonLoopingActionIntention = NonLoopingActionIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.LocalCancelScriptedAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyPawn::LocalCancelScriptedAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "LocalCancelScriptedAction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.IsTryingToJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsTryingToJump()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsTryingToJump");

	Params::AQtnBodyPawn_IsTryingToJump_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsOccupiedByPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsOccupiedByPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsOccupiedByPlayer");

	Params::AQtnBodyPawn_IsOccupiedByPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsKnockedDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsKnockedDown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsKnockedDown");

	Params::AQtnBodyPawn_IsKnockedDown_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsJumpInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsJumpInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsJumpInhibited");

	Params::AQtnBodyPawn_IsJumpInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsHitReacting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsHitReacting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsHitReacting");

	Params::AQtnBodyPawn_IsHitReacting_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsDoingScriptedAction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               FullBody                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsDoingScriptedAction(bool* FullBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsDoingScriptedAction");

	Params::AQtnBodyPawn_IsDoingScriptedAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FullBody != nullptr)
		*FullBody = Parms.FullBody;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsDoingQueuedAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsDoingQueuedAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsDoingQueuedAction");

	Params::AQtnBodyPawn_IsDoingQueuedAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsDead
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               CanBeRevived                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsDead(bool* CanBeRevived)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsDead");

	Params::AQtnBodyPawn_IsDead_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CanBeRevived != nullptr)
		*CanBeRevived = Parms.CanBeRevived;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsBoss
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsBoss()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsBoss");

	Params::AQtnBodyPawn_IsBoss_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsBodyIdle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               RequireStandingStill                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsBodyIdle(bool RequireStandingStill)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsBodyIdle");

	Params::AQtnBodyPawn_IsBodyIdle_Params Parms{};

	Parms.RequireStandingStill = RequireStandingStill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.IsAirborne
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               IncludeVerbs                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::IsAirborne(bool IncludeVerbs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "IsAirborne");

	Params::AQtnBodyPawn_IsAirborne_Params Parms{};

	Parms.IncludeVerbs = IncludeVerbs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.InduceEmptyHands
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantEmptyHands                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::InduceEmptyHands(bool WantEmptyHands)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "InduceEmptyHands");

	Params::AQtnBodyPawn_InduceEmptyHands_Params Parms{};

	Parms.WantEmptyHands = WantEmptyHands;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.HasUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnUpgrade>     UpgradeClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseInheritance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::HasUpgrade(TSubclassOf<class UQtnUpgrade> UpgradeClass, bool UseInheritance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "HasUpgrade");

	Params::AQtnBodyPawn_HasUpgrade_Params Parms{};

	Parms.UpgradeClass = UpgradeClass;
	Parms.UseInheritance = UseInheritance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.HasStatusEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::HasStatusEffect(TSubclassOf<class UQtnStatusEffect> StatusEffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "HasStatusEffect");

	Params::AQtnBodyPawn_HasStatusEffect_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.HandleLandFootstep
// (Final, Native, Private, HasOutParams)
// Parameters:
// class AQtnPawn*                    TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnBodyPawn::HandleLandFootstep(class AQtnPawn* TargetPawn, struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "HandleLandFootstep");

	Params::AQtnBodyPawn_HandleLandFootstep_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.HandleInventoryItemRemoved
// (Final, Native, Public)
// Parameters:
// class AQtnItem*                    PRemovedItem                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::HandleInventoryItemRemoved(class AQtnItem* PRemovedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "HandleInventoryItemRemoved");

	Params::AQtnBodyPawn_HandleInventoryItemRemoved_Params Parms{};

	Parms.PRemovedItem = PRemovedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.GetUpgradeSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnUpgradeSlot*>     ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnUpgradeSlot*> AQtnBodyPawn::GetUpgradeSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetUpgradeSlots");

	Params::AQtnBodyPawn_GetUpgradeSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetStatusEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnStatusEffect*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnStatusEffect* AQtnBodyPawn::GetStatusEffect(TSubclassOf<class UQtnStatusEffect> StatusEffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetStatusEffect");

	Params::AQtnBodyPawn_GetStatusEffect_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetStartActor_ServerOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnBodyPawn::GetStartActor_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetStartActor_ServerOnly");

	Params::AQtnBodyPawn_GetStartActor_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetOccupyingPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* AQtnBodyPawn::GetOccupyingPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetOccupyingPlayerState");

	Params::AQtnBodyPawn_GetOccupyingPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetOccupyingPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnBodyPawn::GetOccupyingPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetOccupyingPlayerPawn");

	Params::AQtnBodyPawn_GetOccupyingPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetNearbyFriendBodies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnBodyPawn*>        ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnBodyPawn*> AQtnBodyPawn::GetNearbyFriendBodies()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetNearbyFriendBodies");

	Params::AQtnBodyPawn_GetNearbyFriendBodies_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetLocoThrottleAndDirection
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              LocoThrottle                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LocoDirectionDegrees                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::GetLocoThrottleAndDirection(float* LocoThrottle, float* LocoDirectionDegrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetLocoThrottleAndDirection");

	Params::AQtnBodyPawn_GetLocoThrottleAndDirection_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LocoThrottle != nullptr)
		*LocoThrottle = Parms.LocoThrottle;

	if (LocoDirectionDegrees != nullptr)
		*LocoDirectionDegrees = Parms.LocoDirectionDegrees;

}


// Function QtnGame.QtnBodyPawn.GetHijackingPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnBodyPawn::GetHijackingPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetHijackingPlayerPawn");

	Params::AQtnBodyPawn_GetHijackingPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetHijackingBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnBodyPawn::GetHijackingBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetHijackingBodyPawn");

	Params::AQtnBodyPawn_GetHijackingBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetExistingUpperBodyState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnUpperBodyState>UpperBodyStateClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnUpperBodyState*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnUpperBodyState* AQtnBodyPawn::GetExistingUpperBodyState(TSubclassOf<class UQtnUpperBodyState> UpperBodyStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetExistingUpperBodyState");

	Params::AQtnBodyPawn_GetExistingUpperBodyState_Params Parms{};

	Parms.UpperBodyStateClass = UpperBodyStateClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetExistingFullBodyState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnFullBodyState>FullBodyStateClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnFullBodyState*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnFullBodyState* AQtnBodyPawn::GetExistingFullBodyState(TSubclassOf<class UQtnFullBodyState> FullBodyStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetExistingFullBodyState");

	Params::AQtnBodyPawn_GetExistingFullBodyState_Params Parms{};

	Parms.FullBodyStateClass = FullBodyStateClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetEntityTuningData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnEntityTuningDataRow     ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

struct FQtnEntityTuningDataRow AQtnBodyPawn::GetEntityTuningData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetEntityTuningData");

	Params::AQtnBodyPawn_GetEntityTuningData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetCurrentUpperBodyState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnUpperBodyState*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnUpperBodyState* AQtnBodyPawn::GetCurrentUpperBodyState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetCurrentUpperBodyState");

	Params::AQtnBodyPawn_GetCurrentUpperBodyState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetCurrentUpgradesArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UQtnUpgrade*>         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQtnUpgrade*> AQtnBodyPawn::GetCurrentUpgradesArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetCurrentUpgradesArray");

	Params::AQtnBodyPawn_GetCurrentUpgradesArray_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetCurrentUpgrades
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UQtnUpgrade*>         CurrentUpgrades                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AQtnBodyPawn::GetCurrentUpgrades(TArray<class UQtnUpgrade*>& CurrentUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetCurrentUpgrades");

	Params::AQtnBodyPawn_GetCurrentUpgrades_Params Parms{};

	Parms.CurrentUpgrades = CurrentUpgrades;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetCurrentlyTargetedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               IncludePerceptionResults                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnBodyPawn::GetCurrentlyTargetedActor(bool IncludePerceptionResults)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetCurrentlyTargetedActor");

	Params::AQtnBodyPawn_GetCurrentlyTargetedActor_Params Parms{};

	Parms.IncludePerceptionResults = IncludePerceptionResults;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetCurrentlyFrobbedObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnFrobbableComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnFrobbableComponent* AQtnBodyPawn::GetCurrentlyFrobbedObject()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetCurrentlyFrobbedObject");

	Params::AQtnBodyPawn_GetCurrentlyFrobbedObject_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetCurrentFullBodyState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnFullBodyState*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnFullBodyState* AQtnBodyPawn::GetCurrentFullBodyState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetCurrentFullBodyState");

	Params::AQtnBodyPawn_GetCurrentFullBodyState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetBodyInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnInventoryComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnInventoryComponent* AQtnBodyPawn::GetBodyInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetBodyInventory");

	Params::AQtnBodyPawn_GetBodyInventory_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetBodyIntentionWorldMovement
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyPawn::GetBodyIntentionWorldMovement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetBodyIntentionWorldMovement");

	Params::AQtnBodyPawn_GetBodyIntentionWorldMovement_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetBodyIntentionLocalMovement
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnBodyPawn::GetBodyIntentionLocalMovement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetBodyIntentionLocalMovement");

	Params::AQtnBodyPawn_GetBodyIntentionLocalMovement_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetBodyController
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyController*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyController* AQtnBodyPawn::GetBodyController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetBodyController");

	Params::AQtnBodyPawn_GetBodyController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetBodyAppearanceComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnCharacterAppearanceComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCharacterAppearanceComponent* AQtnBodyPawn::GetBodyAppearanceComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetBodyAppearanceComponent");

	Params::AQtnBodyPawn_GetBodyAppearanceComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetBodyAlivenessInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnBodyPawn::GetBodyAlivenessInstigator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetBodyAlivenessInstigator");

	Params::AQtnBodyPawn_GetBodyAlivenessInstigator_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetBodyAliveness
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnBodyAliveness       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnBodyAliveness AQtnBodyPawn::GetBodyAliveness()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetBodyAliveness");

	Params::AQtnBodyPawn_GetBodyAliveness_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetAllStatusEffects
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnStatusEffect*>    ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnStatusEffect*> AQtnBodyPawn::GetAllStatusEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetAllStatusEffects");

	Params::AQtnBodyPawn_GetAllStatusEffects_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetAllBodyTagDescriptions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnTagPresence>     TagDescriptions                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FQtnTagPresence>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQtnTagPresence> AQtnBodyPawn::GetAllBodyTagDescriptions(TArray<struct FQtnTagPresence>& TagDescriptions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetAllBodyTagDescriptions");

	Params::AQtnBodyPawn_GetAllBodyTagDescriptions_Params Parms{};

	Parms.TagDescriptions = TagDescriptions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.GetAllBodyPawns
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnBodyPawn*>        FoundBodyPawns                                                   (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class FName                        ActorTagFilter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SpawnerRegionFilter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::GetAllBodyPawns(class UObject* SelfReference, TArray<class AQtnBodyPawn*>* FoundBodyPawns, class FName ActorTagFilter, class FName SpawnerRegionFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetAllBodyPawns");

	Params::AQtnBodyPawn_GetAllBodyPawns_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.ActorTagFilter = ActorTagFilter;
	Parms.SpawnerRegionFilter = SpawnerRegionFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundBodyPawns != nullptr)
		*FoundBodyPawns = std::move(Parms.FoundBodyPawns);

}


// Function QtnGame.QtnBodyPawn.GetActualEquippedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               Ranged                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* AQtnBodyPawn::GetActualEquippedItem(bool Ranged)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "GetActualEquippedItem");

	Params::AQtnBodyPawn_GetActualEquippedItem_Params Parms{};

	Parms.Ranged = Ranged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.FindUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnUpgrade>     UpgradeClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseInheritance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnUpgradeSlot*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnUpgradeSlot* AQtnBodyPawn::FindUpgrade(TSubclassOf<class UQtnUpgrade> UpgradeClass, bool UseInheritance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "FindUpgrade");

	Params::AQtnBodyPawn_FindUpgrade_Params Parms{};

	Parms.UpgradeClass = UpgradeClass;
	Parms.UseInheritance = UseInheritance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.DisengageFrob
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnBodyPawn::DisengageFrob()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "DisengageFrob");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.ClientRequestJump
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// bool                               CanMantle                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IntentionalJump                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TopZ                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AirControl                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::ClientRequestJump(bool CanMantle, bool IntentionalJump, float TopZ, bool AirControl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "ClientRequestJump");

	Params::AQtnBodyPawn_ClientRequestJump_Params Parms{};

	Parms.CanMantle = CanMantle;
	Parms.IntentionalJump = IntentionalJump;
	Parms.TopZ = TopZ;
	Parms.AirControl = AirControl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.CanSeeThisActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ActorToCheck                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VisionConeDistance                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VisionConeYawDegrees                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VisionConePitchDegrees                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::CanSeeThisActor(class AActor* ActorToCheck, float VisionConeDistance, float VisionConeYawDegrees, float VisionConePitchDegrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "CanSeeThisActor");

	Params::AQtnBodyPawn_CanSeeThisActor_Params Parms{};

	Parms.ActorToCheck = ActorToCheck;
	Parms.VisionConeDistance = VisionConeDistance;
	Parms.VisionConeYawDegrees = VisionConeYawDegrees;
	Parms.VisionConePitchDegrees = VisionConePitchDegrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.CanBeRevived
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    OtherPawn                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::CanBeRevived(class AQtnPawn* OtherPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "CanBeRevived");

	Params::AQtnBodyPawn_CanBeRevived_Params Parms{};

	Parms.OtherPawn = OtherPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.AreHandsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnBodyPawn::AreHandsEmpty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "AreHandsEmpty");

	Params::AQtnBodyPawn_AreHandsEmpty_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.AddStatusEffect_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    StatusInstigator                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnStatusEffect*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnStatusEffect* AQtnBodyPawn::AddStatusEffect_ServerOnly(TSubclassOf<class UQtnStatusEffect> StatusEffectClass, class AQtnPawn* StatusInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "AddStatusEffect_ServerOnly");

	Params::AQtnBodyPawn_AddStatusEffect_ServerOnly_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;
	Parms.StatusInstigator = StatusInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBodyPawn.AddJumpInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     JumpInhibitor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::AddJumpInhibitor_ServerOnly(class UObject* JumpInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "AddJumpInhibitor_ServerOnly");

	Params::AQtnBodyPawn_AddJumpInhibitor_ServerOnly_Params Parms{};

	Parms.JumpInhibitor = JumpInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBodyPawn.AddEmptyHandsInducer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Culprit                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBodyPawn::AddEmptyHandsInducer(class UObject* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyPawn", "AddEmptyHandsInducer");

	Params::AQtnBodyPawn_AddEmptyHandsInducer_Params Parms{};

	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFSMState
// (None)

class UClass* UQtnFSMState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFSMState");

	return Clss;
}


// QtnFSMState QtnGame.Default__QtnFSMState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFSMState* UQtnFSMState::GetDefaultObj()
{
	static class UQtnFSMState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFSMState*>(UQtnFSMState::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFSMState.IsStateActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnFSMState::IsStateActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFSMState", "IsStateActive");

	Params::UQtnFSMState_IsStateActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnBodyState
// (None)

class UClass* UQtnBodyState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBodyState");

	return Clss;
}


// QtnBodyState QtnGame.Default__QtnBodyState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBodyState* UQtnBodyState::GetDefaultObj()
{
	static class UQtnBodyState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBodyState*>(UQtnBodyState::StaticClass()->DefaultObject);

	return Default;
}


// DelegateFunction QtnGame.QtnBodyState.QtnTickBodyStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnBodyState*               SelfBodyState                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::QtnTickBodyStateEvent__DelegateSignature(class UQtnBodyState* SelfBodyState, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "QtnTickBodyStateEvent__DelegateSignature");

	Params::UQtnBodyState_QtnTickBodyStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfBodyState = SelfBodyState;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyState.QtnExitBodyStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnBodyState*               SelfBodyState                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnBodyState>   NextBodyStateClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::QtnExitBodyStateEvent__DelegateSignature(class UQtnBodyState* SelfBodyState, TSubclassOf<class UQtnBodyState> NextBodyStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "QtnExitBodyStateEvent__DelegateSignature");

	Params::UQtnBodyState_QtnExitBodyStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfBodyState = SelfBodyState;
	Parms.NextBodyStateClass = NextBodyStateClass;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyState.QtnEnterBodyStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnBodyState*               SelfBodyState                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnBodyState*               PreviousBodyState                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::QtnEnterBodyStateEvent__DelegateSignature(class UQtnBodyState* SelfBodyState, class UQtnBodyState* PreviousBodyState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "QtnEnterBodyStateEvent__DelegateSignature");

	Params::UQtnBodyState_QtnEnterBodyStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfBodyState = SelfBodyState;
	Parms.PreviousBodyState = PreviousBodyState;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyState.QtnBodyStateAnimNotifyEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAnimNotify*              AnimNotify                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::QtnBodyStateAnimNotifyEvent__DelegateSignature(class UQtnAnimNotify* AnimNotify)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "QtnBodyStateAnimNotifyEvent__DelegateSignature");

	Params::UQtnBodyState_QtnBodyStateAnimNotifyEvent__DelegateSignature_Params Parms{};

	Parms.AnimNotify = AnimNotify;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyState.QtnAnimWindowEndEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::QtnAnimWindowEndEvent__DelegateSignature(class UQtnAnimWindow* AnimWindow, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "QtnAnimWindowEndEvent__DelegateSignature");

	Params::UQtnBodyState_QtnAnimWindowEndEvent__DelegateSignature_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnBodyState.QtnAnimWindowBeginEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::QtnAnimWindowBeginEvent__DelegateSignature(class UQtnAnimWindow* AnimWindow, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "QtnAnimWindowBeginEvent__DelegateSignature");

	Params::UQtnBodyState_QtnAnimWindowBeginEvent__DelegateSignature_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.OnTickBodyState
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::OnTickBodyState(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnTickBodyState");

	Params::UQtnBodyState_OnTickBodyState_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.OnInitBodyState
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnBodyState::OnInitBodyState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnInitBodyState");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnBodyState.OnExitBodyState
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnBodyState>   NextBodyStateClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::OnExitBodyState(TSubclassOf<class UQtnBodyState> NextBodyStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnExitBodyState");

	Params::UQtnBodyState_OnExitBodyState_Params Parms{};

	Parms.NextBodyStateClass = NextBodyStateClass;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.OnEnterBodyState
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnBodyState*               PreviousBodyState                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::OnEnterBodyState(class UQtnBodyState* PreviousBodyState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnEnterBodyState");

	Params::UQtnBodyState_OnEnterBodyState_Params Parms{};

	Parms.PreviousBodyState = PreviousBodyState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnDebugDisplay");

	Params::UQtnBodyState_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.OnAnimWindowEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::OnAnimWindowEnd(class UQtnAnimWindow* AnimWindow, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnAnimWindowEnd");

	Params::UQtnBodyState_OnAnimWindowEnd_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.OnAnimWindowBegin
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::OnAnimWindowBegin(class UQtnAnimWindow* AnimWindow, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnAnimWindowBegin");

	Params::UQtnBodyState_OnAnimWindowBegin_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.OnAnimNotify
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimNotify*              AnimNotify                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBodyState::OnAnimNotify(class UQtnAnimNotify* AnimNotify)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "OnAnimNotify");

	Params::UQtnBodyState_OnAnimNotify_Params Parms{};

	Parms.AnimNotify = AnimNotify;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBodyState.GetOwningPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnBodyState::GetOwningPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBodyState", "GetOwningPawn");

	Params::UQtnBodyState_GetOwningPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnBPActor
// (Actor)

class UClass* AQtnBPActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBPActor");

	return Clss;
}


// QtnBPActor QtnGame.Default__QtnBPActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnBPActor* AQtnBPActor::GetDefaultObj()
{
	static class AQtnBPActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnBPActor*>(AQtnBPActor::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBPActor.OnEditorSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsSelected                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBPActor::OnEditorSelected(bool IsSelected)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBPActor", "OnEditorSelected");

	Params::AQtnBPActor_OnEditorSelected_Params Parms{};

	Parms.IsSelected = IsSelected;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBPActor.OnEditorPropertyChange
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        PropertyName                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBPActor::OnEditorPropertyChange(class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBPActor", "OnEditorPropertyChange");

	Params::AQtnBPActor_OnEditorPropertyChange_Params Parms{};

	Parms.PropertyName = PropertyName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBPActor.OnEditorLinkedActorDeleted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      LinkedActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBPActor::OnEditorLinkedActorDeleted(class AActor* LinkedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBPActor", "OnEditorLinkedActorDeleted");

	Params::AQtnBPActor_OnEditorLinkedActorDeleted_Params Parms{};

	Parms.LinkedActor = LinkedActor;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBPActor.OnEditorCheckForErrors
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnBPActor::OnEditorCheckForErrors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBPActor", "OnEditorCheckForErrors");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnBPActor.OnEditorActorMoved
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Finished                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnBPActor::OnEditorActorMoved(bool Finished)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBPActor", "OnEditorActorMoved");

	Params::AQtnBPActor_OnEditorActorMoved_Params Parms{};

	Parms.Finished = Finished;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnBPActorProxyComponent
// (None)

class UClass* UQtnBPActorProxyComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBPActorProxyComponent");

	return Clss;
}


// QtnBPActorProxyComponent QtnGame.Default__QtnBPActorProxyComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBPActorProxyComponent* UQtnBPActorProxyComponent::GetDefaultObj()
{
	static class UQtnBPActorProxyComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBPActorProxyComponent*>(UQtnBPActorProxyComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBreadCrumbComponent
// (None)

class UClass* UQtnBreadCrumbComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBreadCrumbComponent");

	return Clss;
}


// QtnBreadCrumbComponent QtnGame.Default__QtnBreadCrumbComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBreadCrumbComponent* UQtnBreadCrumbComponent::GetDefaultObj()
{
	static class UQtnBreadCrumbComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBreadCrumbComponent*>(UQtnBreadCrumbComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBreadCrumbComponent.StopLocalPlayerTracking
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnBreadCrumbComponent::StopLocalPlayerTracking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBreadCrumbComponent", "StopLocalPlayerTracking");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBreadCrumbComponent.StartLocalPlayerTracking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnBreadCrumbComponent::StartLocalPlayerTracking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBreadCrumbComponent", "StartLocalPlayerTracking");

	Params::UQtnBreadCrumbComponent_StartLocalPlayerTracking_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// DelegateFunction QtnGame.QtnBreadCrumbComponent.QtnOnPathBuiltEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               IsCurrentResultReliable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBreadCrumbComponent::QtnOnPathBuiltEvent__DelegateSignature(bool IsCurrentResultReliable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBreadCrumbComponent", "QtnOnPathBuiltEvent__DelegateSignature");

	Params::UQtnBreadCrumbComponent_QtnOnPathBuiltEvent__DelegateSignature_Params Parms{};

	Parms.IsCurrentResultReliable = IsCurrentResultReliable;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBreadCrumbComponent.IsAtDestination
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnBreadCrumbComponent::IsAtDestination()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBreadCrumbComponent", "IsAtDestination");

	Params::UQtnBreadCrumbComponent_IsAtDestination_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBreadCrumbComponent.HandleLocalPlayerTeleport
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                     OldLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    OldRotation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                     NewLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    NewRotation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UQtnBreadCrumbComponent::HandleLocalPlayerTeleport(const struct FVector& OldLocation, const struct FRotator& OldRotation, const struct FVector& NewLocation, const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBreadCrumbComponent", "HandleLocalPlayerTeleport");

	Params::UQtnBreadCrumbComponent_HandleLocalPlayerTeleport_Params Parms{};

	Parms.OldLocation = OldLocation;
	Parms.OldRotation = OldRotation;
	Parms.NewLocation = NewLocation;
	Parms.NewRotation = NewRotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBreadCrumbComponent.GetSuggestedWaypoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               IsCurrentResultReliable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsAtDestination                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnBreadCrumbComponent::GetSuggestedWaypoint(bool* IsCurrentResultReliable, bool* IsAtDestination)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBreadCrumbComponent", "GetSuggestedWaypoint");

	Params::UQtnBreadCrumbComponent_GetSuggestedWaypoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsCurrentResultReliable != nullptr)
		*IsCurrentResultReliable = Parms.IsCurrentResultReliable;

	if (IsAtDestination != nullptr)
		*IsAtDestination = Parms.IsAtDestination;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBreadCrumbComponent.GetPathResult
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNavigationPath*             LastGoodResult                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsCurrentResultReliable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBreadCrumbComponent::GetPathResult(class UNavigationPath** LastGoodResult, bool* IsCurrentResultReliable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBreadCrumbComponent", "GetPathResult");

	Params::UQtnBreadCrumbComponent_GetPathResult_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LastGoodResult != nullptr)
		*LastGoodResult = Parms.LastGoodResult;

	if (IsCurrentResultReliable != nullptr)
		*IsCurrentResultReliable = Parms.IsCurrentResultReliable;

}


// Class QtnGame.QtnBTDecorator
// (None)

class UClass* UQtnBTDecorator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTDecorator");

	return Clss;
}


// QtnBTDecorator QtnGame.Default__QtnBTDecorator
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTDecorator* UQtnBTDecorator::GetDefaultObj()
{
	static class UQtnBTDecorator* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTDecorator*>(UQtnBTDecorator::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTDecoratorCompareBool
// (None)

class UClass* UQtnBTDecoratorCompareBool::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTDecoratorCompareBool");

	return Clss;
}


// QtnBTDecoratorCompareBool QtnGame.Default__QtnBTDecoratorCompareBool
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTDecoratorCompareBool* UQtnBTDecoratorCompareBool::GetDefaultObj()
{
	static class UQtnBTDecoratorCompareBool* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTDecoratorCompareBool*>(UQtnBTDecoratorCompareBool::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTDecoratorEnemyPerceived
// (None)

class UClass* UQtnBTDecoratorEnemyPerceived::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTDecoratorEnemyPerceived");

	return Clss;
}


// QtnBTDecoratorEnemyPerceived QtnGame.Default__QtnBTDecoratorEnemyPerceived
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTDecoratorEnemyPerceived* UQtnBTDecoratorEnemyPerceived::GetDefaultObj()
{
	static class UQtnBTDecoratorEnemyPerceived* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTDecoratorEnemyPerceived*>(UQtnBTDecoratorEnemyPerceived::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTDecoratorInterestedInHiding
// (None)

class UClass* UQtnBTDecoratorInterestedInHiding::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTDecoratorInterestedInHiding");

	return Clss;
}


// QtnBTDecoratorInterestedInHiding QtnGame.Default__QtnBTDecoratorInterestedInHiding
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTDecoratorInterestedInHiding* UQtnBTDecoratorInterestedInHiding::GetDefaultObj()
{
	static class UQtnBTDecoratorInterestedInHiding* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTDecoratorInterestedInHiding*>(UQtnBTDecoratorInterestedInHiding::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTDecoratorInterestedInSniping
// (None)

class UClass* UQtnBTDecoratorInterestedInSniping::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTDecoratorInterestedInSniping");

	return Clss;
}


// QtnBTDecoratorInterestedInSniping QtnGame.Default__QtnBTDecoratorInterestedInSniping
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTDecoratorInterestedInSniping* UQtnBTDecoratorInterestedInSniping::GetDefaultObj()
{
	static class UQtnBTDecoratorInterestedInSniping* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTDecoratorInterestedInSniping*>(UQtnBTDecoratorInterestedInSniping::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTask
// (None)

class UClass* UQtnBTTask::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTask");

	return Clss;
}


// QtnBTTask QtnGame.Default__QtnBTTask
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTask* UQtnBTTask::GetDefaultObj()
{
	static class UQtnBTTask* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTask*>(UQtnBTTask::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskBP
// (None)

class UClass* UQtnBTTaskBP::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskBP");

	return Clss;
}


// QtnBTTaskBP QtnGame.Default__QtnBTTaskBP
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskBP* UQtnBTTaskBP::GetDefaultObj()
{
	static class UQtnBTTaskBP* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskBP*>(UQtnBTTaskBP::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBTTaskBP.TickBPTask
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnBodyController*          bodyController                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlackboardComponent*        BlackboardComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaSeconds                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ElapsedTime                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBTTaskBP::TickBPTask(class AQtnBodyController* bodyController, class UBlackboardComponent* BlackboardComponent, float DeltaSeconds, float ElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBTTaskBP", "TickBPTask");

	Params::UQtnBTTaskBP_TickBPTask_Params Parms{};

	Parms.bodyController = bodyController;
	Parms.BlackboardComponent = BlackboardComponent;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.ElapsedTime = ElapsedTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBTTaskBP.StartBPTask
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnBodyController*          bodyController                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlackboardComponent*        BlackboardComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBTTaskBP::StartBPTask(class AQtnBodyController* bodyController, class UBlackboardComponent* BlackboardComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBTTaskBP", "StartBPTask");

	Params::UQtnBTTaskBP_StartBPTask_Params Parms{};

	Parms.bodyController = bodyController;
	Parms.BlackboardComponent = BlackboardComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBTTaskBP.IsBPTaskFinished
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AQtnBodyController*          bodyController                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlackboardComponent*        BlackboardComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ElapsedTime                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnBTTaskBP::IsBPTaskFinished(class AQtnBodyController* bodyController, class UBlackboardComponent* BlackboardComponent, float ElapsedTime, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBTTaskBP", "IsBPTaskFinished");

	Params::UQtnBTTaskBP_IsBPTaskFinished_Params Parms{};

	Parms.bodyController = bodyController;
	Parms.BlackboardComponent = BlackboardComponent;
	Parms.ElapsedTime = ElapsedTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBTTaskBP.GetDescription
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnBTTaskBP::GetDescription()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBTTaskBP", "GetDescription");

	Params::UQtnBTTaskBP_GetDescription_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBTTaskBP.EndBPTask
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnBodyController*          bodyController                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlackboardComponent*        BlackboardComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBTTaskBP::EndBPTask(class AQtnBodyController* bodyController, class UBlackboardComponent* BlackboardComponent, bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBTTaskBP", "EndBPTask");

	Params::UQtnBTTaskBP_EndBPTask_Params Parms{};

	Parms.bodyController = bodyController;
	Parms.BlackboardComponent = BlackboardComponent;
	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnBTTaskEnableAttacks
// (None)

class UClass* UQtnBTTaskEnableAttacks::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskEnableAttacks");

	return Clss;
}


// QtnBTTaskEnableAttacks QtnGame.Default__QtnBTTaskEnableAttacks
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskEnableAttacks* UQtnBTTaskEnableAttacks::GetDefaultObj()
{
	static class UQtnBTTaskEnableAttacks* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskEnableAttacks*>(UQtnBTTaskEnableAttacks::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskFrob
// (None)

class UClass* UQtnBTTaskFrob::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskFrob");

	return Clss;
}


// QtnBTTaskFrob QtnGame.Default__QtnBTTaskFrob
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskFrob* UQtnBTTaskFrob::GetDefaultObj()
{
	static class UQtnBTTaskFrob* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskFrob*>(UQtnBTTaskFrob::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskInduceEmptyHands
// (None)

class UClass* UQtnBTTaskInduceEmptyHands::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskInduceEmptyHands");

	return Clss;
}


// QtnBTTaskInduceEmptyHands QtnGame.Default__QtnBTTaskInduceEmptyHands
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskInduceEmptyHands* UQtnBTTaskInduceEmptyHands::GetDefaultObj()
{
	static class UQtnBTTaskInduceEmptyHands* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskInduceEmptyHands*>(UQtnBTTaskInduceEmptyHands::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskMoveTo
// (None)

class UClass* UQtnBTTaskMoveTo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskMoveTo");

	return Clss;
}


// QtnBTTaskMoveTo QtnGame.Default__QtnBTTaskMoveTo
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskMoveTo* UQtnBTTaskMoveTo::GetDefaultObj()
{
	static class UQtnBTTaskMoveTo* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskMoveTo*>(UQtnBTTaskMoveTo::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskPawnAction
// (None)

class UClass* UQtnBTTaskPawnAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskPawnAction");

	return Clss;
}


// QtnBTTaskPawnAction QtnGame.Default__QtnBTTaskPawnAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskPawnAction* UQtnBTTaskPawnAction::GetDefaultObj()
{
	static class UQtnBTTaskPawnAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskPawnAction*>(UQtnBTTaskPawnAction::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskQuitJob
// (None)

class UClass* UQtnBTTaskQuitJob::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskQuitJob");

	return Clss;
}


// QtnBTTaskQuitJob QtnGame.Default__QtnBTTaskQuitJob
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskQuitJob* UQtnBTTaskQuitJob::GetDefaultObj()
{
	static class UQtnBTTaskQuitJob* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskQuitJob*>(UQtnBTTaskQuitJob::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskRequestVerb
// (None)

class UClass* UQtnBTTaskRequestVerb::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskRequestVerb");

	return Clss;
}


// QtnBTTaskRequestVerb QtnGame.Default__QtnBTTaskRequestVerb
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskRequestVerb* UQtnBTTaskRequestVerb::GetDefaultObj()
{
	static class UQtnBTTaskRequestVerb* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskRequestVerb*>(UQtnBTTaskRequestVerb::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskSetTether
// (None)

class UClass* UQtnBTTaskSetTether::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskSetTether");

	return Clss;
}


// QtnBTTaskSetTether QtnGame.Default__QtnBTTaskSetTether
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskSetTether* UQtnBTTaskSetTether::GetDefaultObj()
{
	static class UQtnBTTaskSetTether* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskSetTether*>(UQtnBTTaskSetTether::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBTTaskWaitForVerb
// (None)

class UClass* UQtnBTTaskWaitForVerb::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBTTaskWaitForVerb");

	return Clss;
}


// QtnBTTaskWaitForVerb QtnGame.Default__QtnBTTaskWaitForVerb
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBTTaskWaitForVerb* UQtnBTTaskWaitForVerb::GetDefaultObj()
{
	static class UQtnBTTaskWaitForVerb* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBTTaskWaitForVerb*>(UQtnBTTaskWaitForVerb::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnBullshit
// (None)

class UClass* UQtnBullshit::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBullshit");

	return Clss;
}


// QtnBullshit QtnGame.Default__QtnBullshit
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBullshit* UQtnBullshit::GetDefaultObj()
{
	static class UQtnBullshit* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBullshit*>(UQtnBullshit::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBullshit.OnRep_OwningBullshitManager
// (Final, Native, Private)
// Parameters:

void UQtnBullshit::OnRep_OwningBullshitManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "OnRep_OwningBullshitManager");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBullshit.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBullshit::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "OnDebugDisplay");

	Params::UQtnBullshit_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBullshit.OnBullshitTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBullshit::OnBullshitTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "OnBullshitTick");

	Params::UQtnBullshit_OnBullshitTick_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBullshit.OnBullshitStop
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnBullshit::OnBullshitStop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "OnBullshitStop");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnBullshit.OnBullshitStart
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnBullshit::OnBullshitStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "OnBullshitStart");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnBullshit.OnBullshitLocalInit
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnBullshitManagerComponent*OwningBullshitManager                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBullshit::OnBullshitLocalInit(class UQtnBullshitManagerComponent* OwningBullshitManager)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "OnBullshitLocalInit");

	Params::UQtnBullshit_OnBullshitLocalInit_Params Parms{};

	Parms.OwningBullshitManager = OwningBullshitManager;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBullshit.IsServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnBullshit::IsServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "IsServer");

	Params::UQtnBullshit_IsServer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshit.GetWorld
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UQtnBullshit::GetWorld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "GetWorld");

	Params::UQtnBullshit_GetWorld_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshit.GetOwningBullshitManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnBullshitManagerComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnBullshitManagerComponent* UQtnBullshit::GetOwningBullshitManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "GetOwningBullshitManager");

	Params::UQtnBullshit_GetOwningBullshitManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshit.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnBullshit::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "GetIconForUI");

	Params::UQtnBullshit_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshit.GetCulprit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnBullshit::GetCulprit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "GetCulprit");

	Params::UQtnBullshit_GetCulprit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshit.GetBullshitArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UQtnBullshit>    bullshitClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnBullshit*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnBullshit* UQtnBullshit::GetBullshitArchetype(TSubclassOf<class UQtnBullshit> bullshitClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "GetBullshitArchetype");

	Params::UQtnBullshit_GetBullshitArchetype_Params Parms{};

	Parms.bullshitClass = bullshitClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshit.FinishBullshit_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnBullshit::FinishBullshit_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshit", "FinishBullshit_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnBullshitManagerComponent
// (None)

class UClass* UQtnBullshitManagerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnBullshitManagerComponent");

	return Clss;
}


// QtnBullshitManagerComponent QtnGame.Default__QtnBullshitManagerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnBullshitManagerComponent* UQtnBullshitManagerComponent::GetDefaultObj()
{
	static class UQtnBullshitManagerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnBullshitManagerComponent*>(UQtnBullshitManagerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnBullshitManagerComponent.RemoveBullshit_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnBullshit>    bullshitClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBullshitManagerComponent::RemoveBullshit_ServerOnly(TSubclassOf<class UQtnBullshit> bullshitClass, class AQtnPawn* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "RemoveBullshit_ServerOnly");

	Params::UQtnBullshitManagerComponent_RemoveBullshit_ServerOnly_Params Parms{};

	Parms.bullshitClass = bullshitClass;
	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnBullshitManagerComponent.QtnBullshitEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<class UQtnBullshit*>        bullshitArray                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnBullshitManagerComponent::QtnBullshitEvent__DelegateSignature(TArray<class UQtnBullshit*>& bullshitArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "QtnBullshitEvent__DelegateSignature");

	Params::UQtnBullshitManagerComponent_QtnBullshitEvent__DelegateSignature_Params Parms{};

	Parms.bullshitArray = bullshitArray;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBullshitManagerComponent.OnRep_BullshitInstances
// (Final, Native, Private)
// Parameters:

void UQtnBullshitManagerComponent::OnRep_BullshitInstances()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "OnRep_BullshitInstances");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnBullshitManagerComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnBullshitManagerComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "OnDebugDisplay");

	Params::UQtnBullshitManagerComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnBullshitManagerComponent.IsBullshitActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnBullshit>    bullshitClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnBullshitManagerComponent::IsBullshitActive(TSubclassOf<class UQtnBullshit> bullshitClass, class AQtnPawn* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "IsBullshitActive");

	Params::UQtnBullshitManagerComponent_IsBullshitActive_Params Parms{};

	Parms.bullshitClass = bullshitClass;
	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshitManagerComponent.GetBullshitManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnBullshitManagerComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnBullshitManagerComponent* UQtnBullshitManagerComponent::GetBullshitManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "GetBullshitManager");

	Params::UQtnBullshitManagerComponent_GetBullshitManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshitManagerComponent.GetAllActiveBullshits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnBullshit*>        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnBullshit*> UQtnBullshitManagerComponent::GetAllActiveBullshits()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "GetAllActiveBullshits");

	Params::UQtnBullshitManagerComponent_GetAllActiveBullshits_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshitManagerComponent.GetActiveBullshit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnBullshit>    bullshitClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnBullshit*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnBullshit* UQtnBullshitManagerComponent::GetActiveBullshit(TSubclassOf<class UQtnBullshit> bullshitClass, class AQtnPawn* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "GetActiveBullshit");

	Params::UQtnBullshitManagerComponent_GetActiveBullshit_Params Parms{};

	Parms.bullshitClass = bullshitClass;
	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnBullshitManagerComponent.AddBullshit_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnBullshit>    bullshitClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnBullshit*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnBullshit* UQtnBullshitManagerComponent::AddBullshit_ServerOnly(TSubclassOf<class UQtnBullshit> bullshitClass, class AQtnPawn* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnBullshitManagerComponent", "AddBullshit_ServerOnly");

	Params::UQtnBullshitManagerComponent_AddBullshit_ServerOnly_Params Parms{};

	Parms.bullshitClass = bullshitClass;
	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCameraBehavior
// (None)

class UClass* UQtnCameraBehavior::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraBehavior");

	return Clss;
}


// QtnCameraBehavior QtnGame.Default__QtnCameraBehavior
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraBehavior* UQtnCameraBehavior::GetDefaultObj()
{
	static class UQtnCameraBehavior* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraBehavior*>(UQtnCameraBehavior::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCameraBehavior.OnCameraBehaviorTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCameraBehavior::OnCameraBehaviorTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "OnCameraBehaviorTick");

	Params::UQtnCameraBehavior_OnCameraBehaviorTick_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnCameraBehavior.OnCameraBehaviorInit
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnCameraBehavior::OnCameraBehaviorInit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "OnCameraBehaviorInit");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnCameraBehavior.OnCameraBehaviorFadeOutEnd
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnCameraBehavior::OnCameraBehaviorFadeOutEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "OnCameraBehaviorFadeOutEnd");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnCameraBehavior.OnCameraBehaviorFadeInStart
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnCameraBehavior::OnCameraBehaviorFadeInStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "OnCameraBehaviorFadeInStart");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnCameraBehavior.GetStickLookScale
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCameraBehavior::GetStickLookScale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "GetStickLookScale");

	Params::UQtnCameraBehavior_GetStickLookScale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraBehavior.GetOwningPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnCameraBehavior::GetOwningPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "GetOwningPawn");

	Params::UQtnCameraBehavior_GetOwningPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraBehavior.GetOwningCameraComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnCameraComponent*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCameraComponent* UQtnCameraBehavior::GetOwningCameraComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "GetOwningCameraComponent");

	Params::UQtnCameraBehavior_GetOwningCameraComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraBehavior.GetMouseLookScale
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCameraBehavior::GetMouseLookScale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraBehavior", "GetMouseLookScale");

	Params::UQtnCameraBehavior_GetMouseLookScale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCameraBehaviorAim
// (None)

class UClass* UQtnCameraBehaviorAim::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraBehaviorAim");

	return Clss;
}


// QtnCameraBehaviorAim QtnGame.Default__QtnCameraBehaviorAim
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraBehaviorAim* UQtnCameraBehaviorAim::GetDefaultObj()
{
	static class UQtnCameraBehaviorAim* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraBehaviorAim*>(UQtnCameraBehaviorAim::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCameraBehaviorAnimOverride
// (None)

class UClass* UQtnCameraBehaviorAnimOverride::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraBehaviorAnimOverride");

	return Clss;
}


// QtnCameraBehaviorAnimOverride QtnGame.Default__QtnCameraBehaviorAnimOverride
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraBehaviorAnimOverride* UQtnCameraBehaviorAnimOverride::GetDefaultObj()
{
	static class UQtnCameraBehaviorAnimOverride* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraBehaviorAnimOverride*>(UQtnCameraBehaviorAnimOverride::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCameraBehaviorFirstPerson
// (None)

class UClass* UQtnCameraBehaviorFirstPerson::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraBehaviorFirstPerson");

	return Clss;
}


// QtnCameraBehaviorFirstPerson QtnGame.Default__QtnCameraBehaviorFirstPerson
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraBehaviorFirstPerson* UQtnCameraBehaviorFirstPerson::GetDefaultObj()
{
	static class UQtnCameraBehaviorFirstPerson* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraBehaviorFirstPerson*>(UQtnCameraBehaviorFirstPerson::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCameraBehaviorTether
// (None)

class UClass* UQtnCameraBehaviorTether::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraBehaviorTether");

	return Clss;
}


// QtnCameraBehaviorTether QtnGame.Default__QtnCameraBehaviorTether
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraBehaviorTether* UQtnCameraBehaviorTether::GetDefaultObj()
{
	static class UQtnCameraBehaviorTether* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraBehaviorTether*>(UQtnCameraBehaviorTether::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCameraComponent
// (SceneComponent)

class UClass* UQtnCameraComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraComponent");

	return Clss;
}


// QtnCameraComponent QtnGame.Default__QtnCameraComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraComponent* UQtnCameraComponent::GetDefaultObj()
{
	static class UQtnCameraComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraComponent*>(UQtnCameraComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCameraComponent.UnRequestCameraBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnCameraBehavior>CamBehaviorClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     Requestor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCameraComponent::UnRequestCameraBehavior(TSubclassOf<class UQtnCameraBehavior> CamBehaviorClass, class UObject* Requestor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "UnRequestCameraBehavior");

	Params::UQtnCameraComponent_UnRequestCameraBehavior_Params Parms{};

	Parms.CamBehaviorClass = CamBehaviorClass;
	Parms.Requestor = Requestor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCameraComponent.SetAmbientCameraBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnCameraBehavior>CamBehaviorClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCameraComponent::SetAmbientCameraBehavior(TSubclassOf<class UQtnCameraBehavior> CamBehaviorClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "SetAmbientCameraBehavior");

	Params::UQtnCameraComponent_SetAmbientCameraBehavior_Params Parms{};

	Parms.CamBehaviorClass = CamBehaviorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCameraComponent.RequestCameraBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnCameraBehavior>CamBehaviorClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     Requestor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnCameraBehavior*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCameraBehavior* UQtnCameraComponent::RequestCameraBehavior(TSubclassOf<class UQtnCameraBehavior> CamBehaviorClass, class UObject* Requestor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "RequestCameraBehavior");

	Params::UQtnCameraComponent_RequestCameraBehavior_Params Parms{};

	Parms.CamBehaviorClass = CamBehaviorClass;
	Parms.Requestor = Requestor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraComponent.GetTargetRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                    ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UQtnCameraComponent::GetTargetRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "GetTargetRotation");

	Params::UQtnCameraComponent_GetTargetRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraComponent.GetTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnCameraComponent::GetTargetLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "GetTargetLocation");

	Params::UQtnCameraComponent_GetTargetLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraComponent.GetTargetFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCameraComponent::GetTargetFOV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "GetTargetFOV");

	Params::UQtnCameraComponent_GetTargetFOV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraComponent.GetRelativeNeckOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnCameraComponent::GetRelativeNeckOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "GetRelativeNeckOffset");

	Params::UQtnCameraComponent_GetRelativeNeckOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCameraComponent.GetActiveCameraBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnCameraBehavior*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCameraBehavior* UQtnCameraComponent::GetActiveCameraBehavior()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCameraComponent", "GetActiveCameraBehavior");

	Params::UQtnCameraComponent_GetActiveCameraBehavior_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCameraModifierFullBodyEngagement
// (None)

class UClass* UQtnCameraModifierFullBodyEngagement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraModifierFullBodyEngagement");

	return Clss;
}


// QtnCameraModifierFullBodyEngagement QtnGame.Default__QtnCameraModifierFullBodyEngagement
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraModifierFullBodyEngagement* UQtnCameraModifierFullBodyEngagement::GetDefaultObj()
{
	static class UQtnCameraModifierFullBodyEngagement* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraModifierFullBodyEngagement*>(UQtnCameraModifierFullBodyEngagement::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCameraModifierThirdPersonMontage
// (None)

class UClass* UQtnCameraModifierThirdPersonMontage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCameraModifierThirdPersonMontage");

	return Clss;
}


// QtnCameraModifierThirdPersonMontage QtnGame.Default__QtnCameraModifierThirdPersonMontage
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCameraModifierThirdPersonMontage* UQtnCameraModifierThirdPersonMontage::GetDefaultObj()
{
	static class UQtnCameraModifierThirdPersonMontage* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCameraModifierThirdPersonMontage*>(UQtnCameraModifierThirdPersonMontage::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCarryComponent
// (None)

class UClass* UQtnCarryComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCarryComponent");

	return Clss;
}


// QtnCarryComponent QtnGame.Default__QtnCarryComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCarryComponent* UQtnCarryComponent::GetDefaultObj()
{
	static class UQtnCarryComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCarryComponent*>(UQtnCarryComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCarryComponent.SetCarryingActor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                      CarryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnCarrySettings           CarrySettings                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnCarryComponent::SetCarryingActor_ServerOnly(class AActor* CarryingActor, struct FQtnCarrySettings& CarrySettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryComponent", "SetCarryingActor_ServerOnly");

	Params::UQtnCarryComponent_SetCarryingActor_ServerOnly_Params Parms{};

	Parms.CarryingActor = CarryingActor;
	Parms.CarrySettings = CarrySettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnCarryComponent.QtnCarryStartEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UQtnCarryComponent*          CarryComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      CarryingActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnCarrySettings           CarrySettings                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCarryComponent::QtnCarryStartEvent__DelegateSignature(class UQtnCarryComponent* CarryComponent, class AActor* CarryingActor, struct FQtnCarrySettings& CarrySettings, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryComponent", "QtnCarryStartEvent__DelegateSignature");

	Params::UQtnCarryComponent_QtnCarryStartEvent__DelegateSignature_Params Parms{};

	Parms.CarryComponent = CarryComponent;
	Parms.CarryingActor = CarryingActor;
	Parms.CarrySettings = CarrySettings;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnCarryComponent.QtnCarryEndEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnCarryComponent*          CarryComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      CarryingActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCarryComponent::QtnCarryEndEvent__DelegateSignature(class UQtnCarryComponent* CarryComponent, class AActor* CarryingActor, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryComponent", "QtnCarryEndEvent__DelegateSignature");

	Params::UQtnCarryComponent_QtnCarryEndEvent__DelegateSignature_Params Parms{};

	Parms.CarryComponent = CarryComponent;
	Parms.CarryingActor = CarryingActor;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnCarryComponent.OnRep_CarryingActor
// (Final, Native, Private)
// Parameters:

void UQtnCarryComponent::OnRep_CarryingActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryComponent", "OnRep_CarryingActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCarryComponent.GetCarryingActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnCarryComponent::GetCarryingActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryComponent", "GetCarryingActor");

	Params::UQtnCarryComponent_GetCarryingActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCarryComponent.ClearCarryingActor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               DestroyCarriedActor                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCarryComponent::ClearCarryingActor_ServerOnly(bool DestroyCarriedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryComponent", "ClearCarryingActor_ServerOnly");

	Params::UQtnCarryComponent_ClearCarryingActor_ServerOnly_Params Parms{};

	Parms.DestroyCarriedActor = DestroyCarriedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnCarryingActorInterface
// (None)

class UClass* IQtnCarryingActorInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCarryingActorInterface");

	return Clss;
}


// QtnCarryingActorInterface QtnGame.Default__QtnCarryingActorInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnCarryingActorInterface* IQtnCarryingActorInterface::GetDefaultObj()
{
	static class IQtnCarryingActorInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnCarryingActorInterface*>(IQtnCarryingActorInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCarryingActorInterface.ShouldDropCarriedObjects
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnCarryingActorInterface::ShouldDropCarriedObjects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryingActorInterface", "ShouldDropCarriedObjects");

	Params::IQtnCarryingActorInterface_ShouldDropCarriedObjects_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCarryingActorInterface.RemoveManagedCarryComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQtnCarryComponent*          CarryComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnCarryingActorInterface::RemoveManagedCarryComponent(class UQtnCarryComponent* CarryComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryingActorInterface", "RemoveManagedCarryComponent");

	Params::IQtnCarryingActorInterface_RemoveManagedCarryComponent_Params Parms{};

	Parms.CarryComponent = CarryComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCarryingActorInterface.AddManagedCarryComponent
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQtnCarryComponent*          CarryComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnCarrySettings           CarrySettings                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void IQtnCarryingActorInterface::AddManagedCarryComponent(class UQtnCarryComponent* CarryComponent, struct FQtnCarrySettings& CarrySettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCarryingActorInterface", "AddManagedCarryComponent");

	Params::IQtnCarryingActorInterface_AddManagedCarryComponent_Params Parms{};

	Parms.CarryComponent = CarryComponent;
	Parms.CarrySettings = CarrySettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnCharacterAppearanceComponent
// (None)

class UClass* UQtnCharacterAppearanceComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCharacterAppearanceComponent");

	return Clss;
}


// QtnCharacterAppearanceComponent QtnGame.Default__QtnCharacterAppearanceComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCharacterAppearanceComponent* UQtnCharacterAppearanceComponent::GetDefaultObj()
{
	static class UQtnCharacterAppearanceComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCharacterAppearanceComponent*>(UQtnCharacterAppearanceComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCharacterAppearanceComponent.UpdateAppearance
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnCharacterAppearanceComponent::UpdateAppearance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "UpdateAppearance");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.SetupComponentForDefaults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                POwnerBodypawn                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::SetupComponentForDefaults(class AQtnBodyPawn* POwnerBodypawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "SetupComponentForDefaults");

	Params::UQtnCharacterAppearanceComponent_SetupComponentForDefaults_Params Parms{};

	Parms.POwnerBodypawn = POwnerBodypawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.SetDesiredEmotes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>              DesiredEmotes                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::SetDesiredEmotes(TArray<class FString>& DesiredEmotes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "SetDesiredEmotes");

	Params::UQtnCharacterAppearanceComponent_SetDesiredEmotes_Params Parms{};

	Parms.DesiredEmotes = DesiredEmotes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.SetDesiredCosmetics
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      DesiredBody                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      DesiredHat                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      DesiredHair                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      DesiredCape                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      DesiredHead                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      DesiredHeadAccessory                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::SetDesiredCosmetics(class FString& DesiredBody, class FString& DesiredHat, class FString& DesiredHair, class FString& DesiredCape, class FString& DesiredHead, class FString& DesiredHeadAccessory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "SetDesiredCosmetics");

	Params::UQtnCharacterAppearanceComponent_SetDesiredCosmetics_Params Parms{};

	Parms.DesiredBody = DesiredBody;
	Parms.DesiredHat = DesiredHat;
	Parms.DesiredHair = DesiredHair;
	Parms.DesiredCape = DesiredCape;
	Parms.DesiredHead = DesiredHead;
	Parms.DesiredHeadAccessory = DesiredHeadAccessory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.SetCharacterVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewVisibility                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::SetCharacterVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "SetCharacterVisibility");

	Params::UQtnCharacterAppearanceComponent_SetCharacterVisibility_Params Parms{};

	Parms.bNewVisibility = bNewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerUnsetEmote
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                              EmoteSlot                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerUnsetEmote(int32 EmoteSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerUnsetEmote");

	Params::UQtnCharacterAppearanceComponent_ServerUnsetEmote_Params Parms{};

	Parms.EmoteSlot = EmoteSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerUnsetCosmetic
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// enum class EQtnAppearanceSlot      AppearanceSlot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerUnsetCosmetic(enum class EQtnAppearanceSlot AppearanceSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerUnsetCosmetic");

	Params::UQtnCharacterAppearanceComponent_ServerUnsetCosmetic_Params Parms{};

	Parms.AppearanceSlot = AppearanceSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerSetEmote
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                              EmotesIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              EmoteSlot                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerSetEmote(int32 EmotesIndex, int32 EmoteSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerSetEmote");

	Params::UQtnCharacterAppearanceComponent_ServerSetEmote_Params Parms{};

	Parms.EmotesIndex = EmotesIndex;
	Parms.EmoteSlot = EmoteSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerSetCosmetic
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                              CosmeticsIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnAppearanceSlot      AppearanceSlot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerSetCosmetic(int32 CosmeticsIndex, enum class EQtnAppearanceSlot AppearanceSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerSetCosmetic");

	Params::UQtnCharacterAppearanceComponent_ServerSetCosmetic_Params Parms{};

	Parms.CosmeticsIndex = CosmeticsIndex;
	Parms.AppearanceSlot = AppearanceSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerAddAvailableItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      ItemId                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsEmote                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerAddAvailableItem(class FString& ItemId, bool IsEmote)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerAddAvailableItem");

	Params::UQtnCharacterAppearanceComponent_ServerAddAvailableItem_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.IsEmote = IsEmote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerAddAvailableEmotes
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TArray<class FString>              Emotes                                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerAddAvailableEmotes(TArray<class FString>& Emotes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerAddAvailableEmotes");

	Params::UQtnCharacterAppearanceComponent_ServerAddAvailableEmotes_Params Parms{};

	Parms.Emotes = Emotes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerAddAvailableEmote
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      Emote                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerAddAvailableEmote(class FString& Emote)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerAddAvailableEmote");

	Params::UQtnCharacterAppearanceComponent_ServerAddAvailableEmote_Params Parms{};

	Parms.Emote = Emote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerAddAvailableCosmetics
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TArray<class FString>              Cosmetics                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerAddAvailableCosmetics(TArray<class FString>& Cosmetics)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerAddAvailableCosmetics");

	Params::UQtnCharacterAppearanceComponent_ServerAddAvailableCosmetics_Params Parms{};

	Parms.Cosmetics = Cosmetics;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.ServerAddAvailableCosmetic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      Cosmetic                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::ServerAddAvailableCosmetic(class FString& Cosmetic)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "ServerAddAvailableCosmetic");

	Params::UQtnCharacterAppearanceComponent_ServerAddAvailableCosmetic_Params Parms{};

	Parms.Cosmetic = Cosmetic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.PreloadDefaultMeshesForClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USkeletalMesh*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class USkeletalMesh*> UQtnCharacterAppearanceComponent::PreloadDefaultMeshesForClass(TSubclassOf<class AActor> ActorClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "PreloadDefaultMeshesForClass");

	Params::UQtnCharacterAppearanceComponent_PreloadDefaultMeshesForClass_Params Parms{};

	Parms.ActorClass = ActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.OnRep_VaultEmotesData
// (Final, Native, Protected)
// Parameters:

void UQtnCharacterAppearanceComponent::OnRep_VaultEmotesData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "OnRep_VaultEmotesData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.OnRep_VaultCosmeticsData
// (Final, Native, Protected)
// Parameters:

void UQtnCharacterAppearanceComponent::OnRep_VaultCosmeticsData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "OnRep_VaultCosmeticsData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.OnRep_EquippedEmoteVerbs
// (Final, Native, Private)
// Parameters:

void UQtnCharacterAppearanceComponent::OnRep_EquippedEmoteVerbs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "OnRep_EquippedEmoteVerbs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.OnRep_CharacterAppearanceData
// (Final, Native, Protected)
// Parameters:

void UQtnCharacterAppearanceComponent::OnRep_CharacterAppearanceData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "OnRep_CharacterAppearanceData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "OnDebugDisplay");

	Params::UQtnCharacterAppearanceComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnCharacterAppearanceComponent.LocalUnsetCosmetic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnAppearanceSlot      AppearanceSlot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::LocalUnsetCosmetic(enum class EQtnAppearanceSlot AppearanceSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "LocalUnsetCosmetic");

	Params::UQtnCharacterAppearanceComponent_LocalUnsetCosmetic_Params Parms{};

	Parms.AppearanceSlot = AppearanceSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.LocalSetUnownedCosmetic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EQtnAppearanceSlot      AppearanceSlot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CosmeticsId                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::LocalSetUnownedCosmetic(enum class EQtnAppearanceSlot AppearanceSlot, class FString& CosmeticsId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "LocalSetUnownedCosmetic");

	Params::UQtnCharacterAppearanceComponent_LocalSetUnownedCosmetic_Params Parms{};

	Parms.AppearanceSlot = AppearanceSlot;
	Parms.CosmeticsId = CosmeticsId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.LocalSetEmote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              EmotesIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              EmoteSlot                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::LocalSetEmote(int32 EmotesIndex, int32 EmoteSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "LocalSetEmote");

	Params::UQtnCharacterAppearanceComponent_LocalSetEmote_Params Parms{};

	Parms.EmotesIndex = EmotesIndex;
	Parms.EmoteSlot = EmoteSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.LocalSetCosmetic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              CosmeticsIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnAppearanceSlot      AppearanceSlot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::LocalSetCosmetic(int32 CosmeticsIndex, enum class EQtnAppearanceSlot AppearanceSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "LocalSetCosmetic");

	Params::UQtnCharacterAppearanceComponent_LocalSetCosmetic_Params Parms{};

	Parms.CosmeticsIndex = CosmeticsIndex;
	Parms.AppearanceSlot = AppearanceSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.LocalFindCosmeticIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      CosmeticItemToFind                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnCharacterAppearanceComponent::LocalFindCosmeticIndex(class FString& CosmeticItemToFind)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "LocalFindCosmeticIndex");

	Params::UQtnCharacterAppearanceComponent_LocalFindCosmeticIndex_Params Parms{};

	Parms.CosmeticItemToFind = CosmeticItemToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.LocalCopyCosmeticsFromTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnCharacterAppearanceComponent*TargetAppearanceComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceComponent::LocalCopyCosmeticsFromTarget(class UQtnCharacterAppearanceComponent* TargetAppearanceComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "LocalCopyCosmeticsFromTarget");

	Params::UQtnCharacterAppearanceComponent_LocalCopyCosmeticsFromTarget_Params Parms{};

	Parms.TargetAppearanceComponent = TargetAppearanceComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetVaultEmotesData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class FString> UQtnCharacterAppearanceComponent::GetVaultEmotesData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetVaultEmotesData");

	Params::UQtnCharacterAppearanceComponent_GetVaultEmotesData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetVaultCosmeticsData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class FString> UQtnCharacterAppearanceComponent::GetVaultCosmeticsData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetVaultCosmeticsData");

	Params::UQtnCharacterAppearanceComponent_GetVaultCosmeticsData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetHeadComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UQtnCharacterAppearanceComponent::GetHeadComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetHeadComponent");

	Params::UQtnCharacterAppearanceComponent_GetHeadComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetHeadAccessoryComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UQtnCharacterAppearanceComponent::GetHeadAccessoryComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetHeadAccessoryComponent");

	Params::UQtnCharacterAppearanceComponent_GetHeadAccessoryComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetHatComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UQtnCharacterAppearanceComponent::GetHatComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetHatComponent");

	Params::UQtnCharacterAppearanceComponent_GetHatComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetHairComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UQtnCharacterAppearanceComponent::GetHairComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetHairComponent");

	Params::UQtnCharacterAppearanceComponent_GetHairComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetEquippedEmotes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSubclassOf<class UQtnVerb>>ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UQtnVerb>> UQtnCharacterAppearanceComponent::GetEquippedEmotes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetEquippedEmotes");

	Params::UQtnCharacterAppearanceComponent_GetEquippedEmotes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetEquippedCosmetics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UQtnCharacterAppearanceComponent::GetEquippedCosmetics()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetEquippedCosmetics");

	Params::UQtnCharacterAppearanceComponent_GetEquippedCosmetics_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetCharacterAppearanceData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnCharacterAppearance     ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnCharacterAppearance UQtnCharacterAppearanceComponent::GetCharacterAppearanceData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetCharacterAppearanceData");

	Params::UQtnCharacterAppearanceComponent_GetCharacterAppearanceData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetCapeComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UQtnCharacterAppearanceComponent::GetCapeComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetCapeComponent");

	Params::UQtnCharacterAppearanceComponent_GetCapeComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.GetBodyComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UQtnCharacterAppearanceComponent::GetBodyComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "GetBodyComponent");

	Params::UQtnCharacterAppearanceComponent_GetBodyComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceComponent.AddAndUpdateMeshSlot
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class USkeletalMeshComponent*      PParentMesh                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnCharacterBodyMesh*       PCharacterMesh                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        AttachmentSocket                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UQtnCharacterAppearanceComponent::AddAndUpdateMeshSlot(class USkeletalMeshComponent* PParentMesh, class UQtnCharacterBodyMesh* PCharacterMesh, class FName& AttachmentSocket)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceComponent", "AddAndUpdateMeshSlot");

	Params::UQtnCharacterAppearanceComponent_AddAndUpdateMeshSlot_Params Parms{};

	Parms.PParentMesh = PParentMesh;
	Parms.PCharacterMesh = PCharacterMesh;
	Parms.AttachmentSocket = AttachmentSocket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCharacterAppearanceSettings
// (None)

class UClass* UQtnCharacterAppearanceSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCharacterAppearanceSettings");

	return Clss;
}


// QtnCharacterAppearanceSettings QtnGame.Default__QtnCharacterAppearanceSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCharacterAppearanceSettings* UQtnCharacterAppearanceSettings::GetDefaultObj()
{
	static class UQtnCharacterAppearanceSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCharacterAppearanceSettings*>(UQtnCharacterAppearanceSettings::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCharacterAppearanceSettings.GetEmoteVerbClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      EmoteVerbName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnVerb>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnVerb> UQtnCharacterAppearanceSettings::GetEmoteVerbClass(const class FString& EmoteVerbName, bool* Success, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceSettings", "GetEmoteVerbClass");

	Params::UQtnCharacterAppearanceSettings_GetEmoteVerbClass_Params Parms{};

	Parms.EmoteVerbName = EmoteVerbName;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCharacterAppearanceSettings.GetCharacterAppearanceDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      CatalogId                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ItemId                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        OutDisplayName                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                        OutDescription                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterAppearanceSettings::GetCharacterAppearanceDisplayText(const class FString& CatalogId, const class FString& ItemId, class FText* OutDisplayName, class FText* OutDescription, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceSettings", "GetCharacterAppearanceDisplayText");

	Params::UQtnCharacterAppearanceSettings_GetCharacterAppearanceDisplayText_Params Parms{};

	Parms.CatalogId = CatalogId;
	Parms.ItemId = ItemId;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDisplayName != nullptr)
		*OutDisplayName = Parms.OutDisplayName;

	if (OutDescription != nullptr)
		*OutDescription = Parms.OutDescription;

}


// Function QtnGame.QtnCharacterAppearanceSettings.GetBodyMeshClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      bodyMeshName                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnCharacterBodyMesh>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnCharacterBodyMesh> UQtnCharacterAppearanceSettings::GetBodyMeshClass(const class FString& bodyMeshName, bool* Success, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterAppearanceSettings", "GetBodyMeshClass");

	Params::UQtnCharacterAppearanceSettings_GetBodyMeshClass_Params Parms{};

	Parms.bodyMeshName = bodyMeshName;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Success != nullptr)
		*Success = Parms.Success;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCharacterBodyMesh
// (None)

class UClass* UQtnCharacterBodyMesh::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCharacterBodyMesh");

	return Clss;
}


// QtnCharacterBodyMesh QtnGame.Default__QtnCharacterBodyMesh
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCharacterBodyMesh* UQtnCharacterBodyMesh::GetDefaultObj()
{
	static class UQtnCharacterBodyMesh* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCharacterBodyMesh*>(UQtnCharacterBodyMesh::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCharacterBodyMesh.OnBodyMeshAcquired
// (Event, Public, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*      ComponentAdded                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCharacterBodyMesh::OnBodyMeshAcquired(class USkeletalMeshComponent* ComponentAdded)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCharacterBodyMesh", "OnBodyMeshAcquired");

	Params::UQtnCharacterBodyMesh_OnBodyMeshAcquired_Params Parms{};

	Parms.ComponentAdded = ComponentAdded;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnCheatManager
// (None)

class UClass* UQtnCheatManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCheatManager");

	return Clss;
}


// QtnCheatManager QtnGame.Default__QtnCheatManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCheatManager* UQtnCheatManager::GetDefaultObj()
{
	static class UQtnCheatManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCheatManager*>(UQtnCheatManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCheatManager.QtnSetControllerId
// (Final, Exec, Native, Protected)
// Parameters:
// int32                              ControllerId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCheatManager::QtnSetControllerId(int32 ControllerId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCheatManager", "QtnSetControllerId");

	Params::UQtnCheatManager_QtnSetControllerId_Params Parms{};

	Parms.ControllerId = ControllerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCheatManager.QtnAutomatedReports
// (Final, Exec, Native, Protected)
// Parameters:

void UQtnCheatManager::QtnAutomatedReports()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCheatManager", "QtnAutomatedReports");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCheatManager.AreCheatsLocked
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnCheatManager::AreCheatsLocked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCheatManager", "AreCheatsLocked");

	Params::UQtnCheatManager_AreCheatsLocked_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSaveData
// (None)

class UClass* UQtnSaveData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSaveData");

	return Clss;
}


// QtnSaveData QtnGame.Default__QtnSaveData
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSaveData* UQtnSaveData::GetDefaultObj()
{
	static class UQtnSaveData* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSaveData*>(UQtnSaveData::StaticClass()->DefaultObject);

	return Default;
}


// DelegateFunction QtnGame.QtnSaveData.QtnPreSaveLoadDataEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyPawn*                LocalOriginalBody                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSaveData::QtnPreSaveLoadDataEvent__DelegateSignature(class AQtnBodyPawn* LocalOriginalBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveData", "QtnPreSaveLoadDataEvent__DelegateSignature");

	Params::UQtnSaveData_QtnPreSaveLoadDataEvent__DelegateSignature_Params Parms{};

	Parms.LocalOriginalBody = LocalOriginalBody;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnSaveData.QtnPostSaveLoadDataEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               Success                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOriginalBody                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSaveData::QtnPostSaveLoadDataEvent__DelegateSignature(bool Success, class AQtnBodyPawn* LocalOriginalBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveData", "QtnPostSaveLoadDataEvent__DelegateSignature");

	Params::UQtnSaveData_QtnPostSaveLoadDataEvent__DelegateSignature_Params Parms{};

	Parms.Success = Success;
	Parms.LocalOriginalBody = LocalOriginalBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSaveData.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSaveData::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveData", "OnDebugDisplay");

	Params::UQtnSaveData_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSaveData.HasValidSaveData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnSaveData::HasValidSaveData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveData", "HasValidSaveData");

	Params::UQtnSaveData_HasValidSaveData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSaveData.GetLatestSaveDataVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnVersion                 ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnVersion UQtnSaveData::GetLatestSaveDataVersion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveData", "GetLatestSaveDataVersion");

	Params::UQtnSaveData_GetLatestSaveDataVersion_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSaveData.GetCustomDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnDataBag>     DatabagArchetype                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDataBag*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDataBag* UQtnSaveData::GetCustomDataBag(TSubclassOf<class UQtnDataBag> DatabagArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveData", "GetCustomDataBag");

	Params::UQtnSaveData_GetCustomDataBag_Params Parms{};

	Parms.DatabagArchetype = DatabagArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSaveData.GetCurrentSaveDataVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnVersion                 ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnVersion UQtnSaveData::GetCurrentSaveDataVersion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveData", "GetCurrentSaveDataVersion");

	Params::UQtnSaveData_GetCurrentSaveDataVersion_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCloudOptionsSaveData
// (None)

class UClass* UQtnCloudOptionsSaveData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCloudOptionsSaveData");

	return Clss;
}


// QtnCloudOptionsSaveData QtnGame.Default__QtnCloudOptionsSaveData
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCloudOptionsSaveData* UQtnCloudOptionsSaveData::GetDefaultObj()
{
	static class UQtnCloudOptionsSaveData* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCloudOptionsSaveData*>(UQtnCloudOptionsSaveData::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCloudOptionsSaveData.SetVOLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                VoLanguage                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetVOLanguage(const struct FGameplayTag& VoLanguage, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetVOLanguage");

	Params::UQtnCloudOptionsSaveData_SetVOLanguage_Params Parms{};

	Parms.VoLanguage = VoLanguage;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetStickLookSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              SpeedRatio                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetStickLookSpeed(float SpeedRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetStickLookSpeed");

	Params::UQtnCloudOptionsSaveData_SetStickLookSpeed_Params Parms{};

	Parms.SpeedRatio = SpeedRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetStickAimSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              SpeedRatio                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetStickAimSpeed(float SpeedRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetStickAimSpeed");

	Params::UQtnCloudOptionsSaveData_SetStickAimSpeed_Params Parms{};

	Parms.SpeedRatio = SpeedRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetMouseLookSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              SpeedRatio                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetMouseLookSpeed(float SpeedRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetMouseLookSpeed");

	Params::UQtnCloudOptionsSaveData_SetMouseLookSpeed_Params Parms{};

	Parms.SpeedRatio = SpeedRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetMouseAimSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              SpeedRatio                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetMouseAimSpeed(float SpeedRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetMouseAimSpeed");

	Params::UQtnCloudOptionsSaveData_SetMouseAimSpeed_Params Parms{};

	Parms.SpeedRatio = SpeedRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                      Language                                                         (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetLanguage(const class FString& Language, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetLanguage");

	Params::UQtnCloudOptionsSaveData_SetLanguage_Params Parms{};

	Parms.Language = Language;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetGamepadGlyphStyle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// enum class EQtnGamepadGlyphStyle   GamepadGlyphStyle                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetGamepadGlyphStyle(enum class EQtnGamepadGlyphStyle GamepadGlyphStyle, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetGamepadGlyphStyle");

	Params::UQtnCloudOptionsSaveData_SetGamepadGlyphStyle_Params Parms{};

	Parms.GamepadGlyphStyle = GamepadGlyphStyle;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetFOVScaleRatio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              FOVScaleRatio                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetFOVScaleRatio(float FOVScaleRatio, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetFOVScaleRatio");

	Params::UQtnCloudOptionsSaveData_SetFOVScaleRatio_Params Parms{};

	Parms.FOVScaleRatio = FOVScaleRatio;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetForceFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                               ForceFeedback                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetForceFeedback(bool ForceFeedback, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetForceFeedback");

	Params::UQtnCloudOptionsSaveData_SetForceFeedback_Params Parms{};

	Parms.ForceFeedback = ForceFeedback;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetAudioSpeechVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              Volume                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetAudioSpeechVolume(float Volume, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetAudioSpeechVolume");

	Params::UQtnCloudOptionsSaveData_SetAudioSpeechVolume_Params Parms{};

	Parms.Volume = Volume;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetAudioSFXVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              Volume                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetAudioSFXVolume(float Volume, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetAudioSFXVolume");

	Params::UQtnCloudOptionsSaveData_SetAudioSFXVolume_Params Parms{};

	Parms.Volume = Volume;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetAudioMusicVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              Volume                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetAudioMusicVolume(float Volume, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetAudioMusicVolume");

	Params::UQtnCloudOptionsSaveData_SetAudioMusicVolume_Params Parms{};

	Parms.Volume = Volume;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetAudioMasterVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              Volume                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetAudioMasterVolume(float Volume, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetAudioMasterVolume");

	Params::UQtnCloudOptionsSaveData_SetAudioMasterVolume_Params Parms{};

	Parms.Volume = Volume;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.SetAudioAmbienceVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              Volume                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCloudOptionsSaveData::SetAudioAmbienceVolume(float Volume, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "SetAudioAmbienceVolume");

	Params::UQtnCloudOptionsSaveData_SetAudioAmbienceVolume_Params Parms{};

	Parms.Volume = Volume;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetVOLanguage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnCloudOptionsSaveData::GetVOLanguage(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetVOLanguage");

	Params::UQtnCloudOptionsSaveData_GetVOLanguage_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetStickLookSpeedRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetStickLookSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetStickLookSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetStickLookSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetStickAimSpeedRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetStickAimSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetStickAimSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetStickAimSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetMouseLookSpeedRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetMouseLookSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetMouseLookSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetMouseLookSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetMouseAimSpeedRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetMouseAimSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetMouseAimSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetMouseAimSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetLanguage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnCloudOptionsSaveData::GetLanguage(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetLanguage");

	Params::UQtnCloudOptionsSaveData_GetLanguage_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetInputDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnInputDataBag*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnInputDataBag* UQtnCloudOptionsSaveData::GetInputDataBag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetInputDataBag");

	Params::UQtnCloudOptionsSaveData_GetInputDataBag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetGamepadGlyphStyle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnGamepadGlyphStyle   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnGamepadGlyphStyle UQtnCloudOptionsSaveData::GetGamepadGlyphStyle(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetGamepadGlyphStyle");

	Params::UQtnCloudOptionsSaveData_GetGamepadGlyphStyle_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetFOVScaleRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetFOVScaleRatio(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetFOVScaleRatio");

	Params::UQtnCloudOptionsSaveData_GetFOVScaleRatio_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetForceFeedback
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnCloudOptionsSaveData::GetForceFeedback(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetForceFeedback");

	Params::UQtnCloudOptionsSaveData_GetForceFeedback_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultVOLanguage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnCloudOptionsSaveData::GetDefaultVOLanguage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultVOLanguage");

	Params::UQtnCloudOptionsSaveData_GetDefaultVOLanguage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultStickLookSpeedRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultStickLookSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultStickLookSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetDefaultStickLookSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultStickLookSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultStickLookSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultStickLookSpeed");

	Params::UQtnCloudOptionsSaveData_GetDefaultStickLookSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultStickAimSpeedRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultStickAimSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultStickAimSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetDefaultStickAimSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultStickAimSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultStickAimSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultStickAimSpeed");

	Params::UQtnCloudOptionsSaveData_GetDefaultStickAimSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultMouseLookSpeedRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultMouseLookSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultMouseLookSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetDefaultMouseLookSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultMouseLookSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultMouseLookSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultMouseLookSpeed");

	Params::UQtnCloudOptionsSaveData_GetDefaultMouseLookSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultMouseAimSpeedRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultMouseAimSpeedRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultMouseAimSpeedRatio");

	Params::UQtnCloudOptionsSaveData_GetDefaultMouseAimSpeedRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultMouseAimSpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultMouseAimSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultMouseAimSpeed");

	Params::UQtnCloudOptionsSaveData_GetDefaultMouseAimSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultLanguage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnCloudOptionsSaveData::GetDefaultLanguage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultLanguage");

	Params::UQtnCloudOptionsSaveData_GetDefaultLanguage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultInvertCameraY
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnCloudOptionsSaveData::GetDefaultInvertCameraY()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultInvertCameraY");

	Params::UQtnCloudOptionsSaveData_GetDefaultInvertCameraY_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultGyroSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultGyroSensitivity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultGyroSensitivity");

	Params::UQtnCloudOptionsSaveData_GetDefaultGyroSensitivity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultGyroAiming
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnCloudOptionsSaveData::GetDefaultGyroAiming()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultGyroAiming");

	Params::UQtnCloudOptionsSaveData_GetDefaultGyroAiming_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultGamepadGlyphStyle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EQtnGamepadGlyphStyle   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnGamepadGlyphStyle UQtnCloudOptionsSaveData::GetDefaultGamepadGlyphStyle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultGamepadGlyphStyle");

	Params::UQtnCloudOptionsSaveData_GetDefaultGamepadGlyphStyle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultFOVScaleRatio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultFOVScaleRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultFOVScaleRatio");

	Params::UQtnCloudOptionsSaveData_GetDefaultFOVScaleRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultForceFeedback
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnCloudOptionsSaveData::GetDefaultForceFeedback()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultForceFeedback");

	Params::UQtnCloudOptionsSaveData_GetDefaultForceFeedback_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultAudioSpeechVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultAudioSpeechVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultAudioSpeechVolume");

	Params::UQtnCloudOptionsSaveData_GetDefaultAudioSpeechVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultAudioSFXVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultAudioSFXVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultAudioSFXVolume");

	Params::UQtnCloudOptionsSaveData_GetDefaultAudioSFXVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultAudioMusicVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultAudioMusicVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultAudioMusicVolume");

	Params::UQtnCloudOptionsSaveData_GetDefaultAudioMusicVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultAudioMasterVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultAudioMasterVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultAudioMasterVolume");

	Params::UQtnCloudOptionsSaveData_GetDefaultAudioMasterVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetDefaultAudioAmbienceVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetDefaultAudioAmbienceVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetDefaultAudioAmbienceVolume");

	Params::UQtnCloudOptionsSaveData_GetDefaultAudioAmbienceVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetAudioSpeechVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetAudioSpeechVolume(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetAudioSpeechVolume");

	Params::UQtnCloudOptionsSaveData_GetAudioSpeechVolume_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetAudioSFXVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetAudioSFXVolume(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetAudioSFXVolume");

	Params::UQtnCloudOptionsSaveData_GetAudioSFXVolume_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetAudioMusicVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetAudioMusicVolume(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetAudioMusicVolume");

	Params::UQtnCloudOptionsSaveData_GetAudioMusicVolume_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetAudioMasterVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetAudioMasterVolume(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetAudioMasterVolume");

	Params::UQtnCloudOptionsSaveData_GetAudioMasterVolume_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCloudOptionsSaveData.GetAudioAmbienceVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnCloudOptionsSaveData::GetAudioAmbienceVolume(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCloudOptionsSaveData", "GetAudioAmbienceVolume");

	Params::UQtnCloudOptionsSaveData_GetAudioAmbienceVolume_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCombatSettings
// (None)

class UClass* UQtnCombatSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCombatSettings");

	return Clss;
}


// QtnCombatSettings QtnGame.Default__QtnCombatSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCombatSettings* UQtnCombatSettings::GetDefaultObj()
{
	static class UQtnCombatSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCombatSettings*>(UQtnCombatSettings::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCombatSettings.GetWeaponConfigurationFromWeaponTypeGameplayType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnItemData                ItemData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               FoundConfiguration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnWeaponConfiguration     ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnWeaponConfiguration UQtnCombatSettings::GetWeaponConfigurationFromWeaponTypeGameplayType(class UObject* WorldContextObject, struct FQtnItemData& ItemData, bool* FoundConfiguration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCombatSettings", "GetWeaponConfigurationFromWeaponTypeGameplayType");

	Params::UQtnCombatSettings_GetWeaponConfigurationFromWeaponTypeGameplayType_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundConfiguration != nullptr)
		*FoundConfiguration = Parms.FoundConfiguration;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCombatSettings.GetCurrencyConfigurationFromCurrencyTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                CurrencyTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FoundConfiguration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnLootItemVisualConfigurationReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnLootItemVisualConfiguration UQtnCombatSettings::GetCurrencyConfigurationFromCurrencyTag(class UObject* WorldContextObject, struct FGameplayTag& CurrencyTag, bool* FoundConfiguration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCombatSettings", "GetCurrencyConfigurationFromCurrencyTag");

	Params::UQtnCombatSettings_GetCurrencyConfigurationFromCurrencyTag_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CurrencyTag = CurrencyTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundConfiguration != nullptr)
		*FoundConfiguration = Parms.FoundConfiguration;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCombatSettings.GetAllWeaponGameplayTags
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTag>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameplayTag> UQtnCombatSettings::GetAllWeaponGameplayTags(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCombatSettings", "GetAllWeaponGameplayTags");

	Params::UQtnCombatSettings_GetAllWeaponGameplayTags_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnContactData
// (None)

class UClass* UQtnContactData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactData");

	return Clss;
}


// QtnContactData QtnGame.Default__QtnContactData
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactData* UQtnContactData::GetDefaultObj()
{
	static class UQtnContactData* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactData*>(UQtnContactData::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystem
// (None)

class UClass* UQtnContactSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystem");

	return Clss;
}


// QtnContactSubsystem QtnGame.Default__QtnContactSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystem* UQtnContactSubsystem::GetDefaultObj()
{
	static class UQtnContactSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystem*>(UQtnContactSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnContactSubsystem.HandleContactSystemResults
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnContactData*             ContactData                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactEventInfo        ContactInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnContactSystemResult     ContactSystemResults                                             (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnContactSystemResult     ReturnValue                                                      (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnContactSystemResult UQtnContactSubsystem::HandleContactSystemResults(class UObject* WorldContextObject, class UQtnContactData* ContactData, struct FQtnContactEventInfo& ContactInfo, struct FQtnContactSystemResult& ContactSystemResults)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnContactSubsystem", "HandleContactSystemResults");

	Params::UQtnContactSubsystem_HandleContactSystemResults_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContactData = ContactData;
	Parms.ContactInfo = ContactInfo;
	Parms.ContactSystemResults = ContactSystemResults;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnContactSubsystem.GetQtnContactSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnContactSubsystem*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnContactSubsystem* UQtnContactSubsystem::GetQtnContactSubsystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnContactSubsystem", "GetQtnContactSubsystem");

	Params::UQtnContactSubsystem_GetQtnContactSubsystem_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnContactSubsystem.GenerateContactEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnContactData*             ContactData                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactEventInfo        ContactInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SpawnContactEffect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactSystemResult     ReturnValue                                                      (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnContactSystemResult UQtnContactSubsystem::GenerateContactEvent(class UObject* WorldContextObject, class UQtnContactData* ContactData, struct FQtnContactEventInfo& ContactInfo, bool SpawnContactEffect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnContactSubsystem", "GenerateContactEvent");

	Params::UQtnContactSubsystem_GenerateContactEvent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ContactData = ContactData;
	Parms.ContactInfo = ContactInfo;
	Parms.SpawnContactEffect = SpawnContactEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnContactSubsystemSurfaceSelector
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector QtnGame.Default__QtnContactSubsystemSurfaceSelector
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector* UQtnContactSubsystemSurfaceSelector::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector*>(UQtnContactSubsystemSurfaceSelector::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnContactSubsystemSurfaceSelector.SelectSurfaceResult
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UQtnContactData*             ContactData                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactEventInfo        ContactInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnSurfaceData             ReturnValue                                                      (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnSurfaceData UQtnContactSubsystemSurfaceSelector::SelectSurfaceResult(class UQtnContactData* ContactData, struct FQtnContactEventInfo& ContactInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnContactSubsystemSurfaceSelector", "SelectSurfaceResult");

	Params::UQtnContactSubsystemSurfaceSelector_SelectSurfaceResult_Params Parms{};

	Parms.ContactData = ContactData;
	Parms.ContactInfo = ContactInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnContactSubsystemSurfaceSelector_Null
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector_Null::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector_Null");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector_Null QtnGame.Default__QtnContactSubsystemSurfaceSelector_Null
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector_Null* UQtnContactSubsystemSurfaceSelector_Null::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector_Null* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector_Null*>(UQtnContactSubsystemSurfaceSelector_Null::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSurfaceSelector_Single
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector_Single::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector_Single");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector_Single QtnGame.Default__QtnContactSubsystemSurfaceSelector_Single
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector_Single* UQtnContactSubsystemSurfaceSelector_Single::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector_Single* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector_Single*>(UQtnContactSubsystemSurfaceSelector_Single::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSurfaceSelector_FromMap
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector_FromMap::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector_FromMap");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector_FromMap QtnGame.Default__QtnContactSubsystemSurfaceSelector_FromMap
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector_FromMap* UQtnContactSubsystemSurfaceSelector_FromMap::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector_FromMap* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector_FromMap*>(UQtnContactSubsystemSurfaceSelector_FromMap::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSurfaceSelector_FromAsset
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector_FromAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector_FromAsset");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector_FromAsset QtnGame.Default__QtnContactSubsystemSurfaceSelector_FromAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector_FromAsset* UQtnContactSubsystemSurfaceSelector_FromAsset::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector_FromAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector_FromAsset*>(UQtnContactSubsystemSurfaceSelector_FromAsset::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSurfaceSelector_Sequence
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector_Sequence::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector_Sequence");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector_Sequence QtnGame.Default__QtnContactSubsystemSurfaceSelector_Sequence
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector_Sequence* UQtnContactSubsystemSurfaceSelector_Sequence::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector_Sequence* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector_Sequence*>(UQtnContactSubsystemSurfaceSelector_Sequence::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSurfaceSelector_Concurrent
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector_Concurrent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector_Concurrent");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector_Concurrent QtnGame.Default__QtnContactSubsystemSurfaceSelector_Concurrent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector_Concurrent* UQtnContactSubsystemSurfaceSelector_Concurrent::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector_Concurrent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector_Concurrent*>(UQtnContactSubsystemSurfaceSelector_Concurrent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSurfaceSelector_FromDamageType
// (None)

class UClass* UQtnContactSubsystemSurfaceSelector_FromDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSurfaceSelector_FromDamageType");

	return Clss;
}


// QtnContactSubsystemSurfaceSelector_FromDamageType QtnGame.Default__QtnContactSubsystemSurfaceSelector_FromDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSurfaceSelector_FromDamageType* UQtnContactSubsystemSurfaceSelector_FromDamageType::GetDefaultObj()
{
	static class UQtnContactSubsystemSurfaceSelector_FromDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSurfaceSelector_FromDamageType*>(UQtnContactSubsystemSurfaceSelector_FromDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSystemResultSelector
// (None)

class UClass* UQtnContactSubsystemSystemResultSelector::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemResultSelector");

	return Clss;
}


// QtnContactSubsystemSystemResultSelector QtnGame.Default__QtnContactSubsystemSystemResultSelector
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemResultSelector* UQtnContactSubsystemSystemResultSelector::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemResultSelector* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemResultSelector*>(UQtnContactSubsystemSystemResultSelector::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnContactSubsystemSystemResultSelector.SelectSystemResult
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UQtnContactData*             ContactData                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactEventInfo        ContactInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnSurfaceData             SurfaceData                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnContactSystemResult     ReturnValue                                                      (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnContactSystemResult UQtnContactSubsystemSystemResultSelector::SelectSystemResult(class UQtnContactData* ContactData, struct FQtnContactEventInfo& ContactInfo, struct FQtnSurfaceData& SurfaceData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnContactSubsystemSystemResultSelector", "SelectSystemResult");

	Params::UQtnContactSubsystemSystemResultSelector_SelectSystemResult_Params Parms{};

	Parms.ContactData = ContactData;
	Parms.ContactInfo = ContactInfo;
	Parms.SurfaceData = SurfaceData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnContactSubsystemSystemResultSelector_Null
// (None)

class UClass* UQtnContactSubsystemSystemResultSelector_Null::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemResultSelector_Null");

	return Clss;
}


// QtnContactSubsystemSystemResultSelector_Null QtnGame.Default__QtnContactSubsystemSystemResultSelector_Null
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemResultSelector_Null* UQtnContactSubsystemSystemResultSelector_Null::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemResultSelector_Null* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemResultSelector_Null*>(UQtnContactSubsystemSystemResultSelector_Null::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSystemResultSelector_Single
// (None)

class UClass* UQtnContactSubsystemSystemResultSelector_Single::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemResultSelector_Single");

	return Clss;
}


// QtnContactSubsystemSystemResultSelector_Single QtnGame.Default__QtnContactSubsystemSystemResultSelector_Single
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemResultSelector_Single* UQtnContactSubsystemSystemResultSelector_Single::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemResultSelector_Single* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemResultSelector_Single*>(UQtnContactSubsystemSystemResultSelector_Single::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSystemResultSelector_FromMap
// (None)

class UClass* UQtnContactSubsystemSystemResultSelector_FromMap::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemResultSelector_FromMap");

	return Clss;
}


// QtnContactSubsystemSystemResultSelector_FromMap QtnGame.Default__QtnContactSubsystemSystemResultSelector_FromMap
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemResultSelector_FromMap* UQtnContactSubsystemSystemResultSelector_FromMap::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemResultSelector_FromMap* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemResultSelector_FromMap*>(UQtnContactSubsystemSystemResultSelector_FromMap::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSystemResultSelector_Random
// (None)

class UClass* UQtnContactSubsystemSystemResultSelector_Random::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemResultSelector_Random");

	return Clss;
}


// QtnContactSubsystemSystemResultSelector_Random QtnGame.Default__QtnContactSubsystemSystemResultSelector_Random
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemResultSelector_Random* UQtnContactSubsystemSystemResultSelector_Random::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemResultSelector_Random* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemResultSelector_Random*>(UQtnContactSubsystemSystemResultSelector_Random::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSystemResultSelector_All
// (None)

class UClass* UQtnContactSubsystemSystemResultSelector_All::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemResultSelector_All");

	return Clss;
}


// QtnContactSubsystemSystemResultSelector_All QtnGame.Default__QtnContactSubsystemSystemResultSelector_All
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemResultSelector_All* UQtnContactSubsystemSystemResultSelector_All::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemResultSelector_All* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemResultSelector_All*>(UQtnContactSubsystemSystemResultSelector_All::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSystemSpawnModifier
// (None)

class UClass* UQtnContactSubsystemSystemSpawnModifier::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemSpawnModifier");

	return Clss;
}


// QtnContactSubsystemSystemSpawnModifier QtnGame.Default__QtnContactSubsystemSystemSpawnModifier
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemSpawnModifier* UQtnContactSubsystemSystemSpawnModifier::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemSpawnModifier* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemSpawnModifier*>(UQtnContactSubsystemSystemSpawnModifier::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnContactSubsystemSystemSpawnModifier.ModifySpawnedContactFX
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AQtnFXActor*                 ActorFX                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnContactData*             ContactData                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactEventInfo        ContactInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnSurfaceData             SurfaceData                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnContactSubsystemSystemSpawnModifier::ModifySpawnedContactFX(class AQtnFXActor* ActorFX, class UQtnContactData* ContactData, struct FQtnContactEventInfo& ContactInfo, struct FQtnSurfaceData& SurfaceData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnContactSubsystemSystemSpawnModifier", "ModifySpawnedContactFX");

	Params::UQtnContactSubsystemSystemSpawnModifier_ModifySpawnedContactFX_Params Parms{};

	Parms.ActorFX = ActorFX;
	Parms.ContactData = ContactData;
	Parms.ContactInfo = ContactInfo;
	Parms.SurfaceData = SurfaceData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnContactSubsystemSystemSpawnModifier_Null
// (None)

class UClass* UQtnContactSubsystemSystemSpawnModifier_Null::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemSpawnModifier_Null");

	return Clss;
}


// QtnContactSubsystemSystemSpawnModifier_Null QtnGame.Default__QtnContactSubsystemSystemSpawnModifier_Null
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemSpawnModifier_Null* UQtnContactSubsystemSystemSpawnModifier_Null::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemSpawnModifier_Null* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemSpawnModifier_Null*>(UQtnContactSubsystemSystemSpawnModifier_Null::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemSystemSpawnModifier_AttachToTargetActor
// (None)

class UClass* UQtnContactSubsystemSystemSpawnModifier_AttachToTargetActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemSystemSpawnModifier_AttachToTargetActor");

	return Clss;
}


// QtnContactSubsystemSystemSpawnModifier_AttachToTargetActor QtnGame.Default__QtnContactSubsystemSystemSpawnModifier_AttachToTargetActor
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemSystemSpawnModifier_AttachToTargetActor* UQtnContactSubsystemSystemSpawnModifier_AttachToTargetActor::GetDefaultObj()
{
	static class UQtnContactSubsystemSystemSpawnModifier_AttachToTargetActor* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemSystemSpawnModifier_AttachToTargetActor*>(UQtnContactSubsystemSystemSpawnModifier_AttachToTargetActor::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemTargetFilter
// (None)

class UClass* UQtnContactSubsystemTargetFilter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemTargetFilter");

	return Clss;
}


// QtnContactSubsystemTargetFilter QtnGame.Default__QtnContactSubsystemTargetFilter
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemTargetFilter* UQtnContactSubsystemTargetFilter::GetDefaultObj()
{
	static class UQtnContactSubsystemTargetFilter* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemTargetFilter*>(UQtnContactSubsystemTargetFilter::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnContactSubsystemTargetFilter.FilterIncomingContactRequest
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UQtnContactData*             ContactData                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactEventInfo        ContactInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnContactSubsystemTargetFilter::FilterIncomingContactRequest(class UQtnContactData* ContactData, struct FQtnContactEventInfo& ContactInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnContactSubsystemTargetFilter", "FilterIncomingContactRequest");

	Params::UQtnContactSubsystemTargetFilter_FilterIncomingContactRequest_Params Parms{};

	Parms.ContactData = ContactData;
	Parms.ContactInfo = ContactInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnContactSubsystemTargetFilter_Always
// (None)

class UClass* UQtnContactSubsystemTargetFilter_Always::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemTargetFilter_Always");

	return Clss;
}


// QtnContactSubsystemTargetFilter_Always QtnGame.Default__QtnContactSubsystemTargetFilter_Always
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemTargetFilter_Always* UQtnContactSubsystemTargetFilter_Always::GetDefaultObj()
{
	static class UQtnContactSubsystemTargetFilter_Always* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemTargetFilter_Always*>(UQtnContactSubsystemTargetFilter_Always::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnContactSubsystemTargetFilter_Sequence
// (None)

class UClass* UQtnContactSubsystemTargetFilter_Sequence::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnContactSubsystemTargetFilter_Sequence");

	return Clss;
}


// QtnContactSubsystemTargetFilter_Sequence QtnGame.Default__QtnContactSubsystemTargetFilter_Sequence
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnContactSubsystemTargetFilter_Sequence* UQtnContactSubsystemTargetFilter_Sequence::GetDefaultObj()
{
	static class UQtnContactSubsystemTargetFilter_Sequence* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnContactSubsystemTargetFilter_Sequence*>(UQtnContactSubsystemTargetFilter_Sequence::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCosmeticCache
// (None)

class UClass* UQtnCosmeticCache::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCosmeticCache");

	return Clss;
}


// QtnCosmeticCache QtnGame.Default__QtnCosmeticCache
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCosmeticCache* UQtnCosmeticCache::GetDefaultObj()
{
	static class UQtnCosmeticCache* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCosmeticCache*>(UQtnCosmeticCache::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCosmeticCache.SetFilterSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FQtnCosmeticFilterSettings  FilterSettings                                                   (Parm, NativeAccessSpecifierPublic)
// bool                               RefreshEntries                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCosmeticCache::SetFilterSettings(const struct FQtnCosmeticFilterSettings& FilterSettings, bool RefreshEntries)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCosmeticCache", "SetFilterSettings");

	Params::UQtnCosmeticCache_SetFilterSettings_Params Parms{};

	Parms.FilterSettings = FilterSettings;
	Parms.RefreshEntries = RefreshEntries;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCosmeticCache.RefreshPlayerItemOwnership
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnCosmeticCache::RefreshPlayerItemOwnership()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCosmeticCache", "RefreshPlayerItemOwnership");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCosmeticCache.RefreshFilteredCosmetics
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnCosmeticCache::RefreshFilteredCosmetics()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCosmeticCache", "RefreshFilteredCosmetics");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnCosmeticCache.QtnFilteredCosmeticsChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void UQtnCosmeticCache::QtnFilteredCosmeticsChangedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCosmeticCache", "QtnFilteredCosmeticsChangedEvent__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnCosmeticCache.LoadCosmeticsFromDataTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                  DataTable                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               LoadAdditively                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCosmeticCache::LoadCosmeticsFromDataTable(class UDataTable* DataTable, bool LoadAdditively)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCosmeticCache", "LoadCosmeticsFromDataTable");

	Params::UQtnCosmeticCache_LoadCosmeticsFromDataTable_Params Parms{};

	Parms.DataTable = DataTable;
	Parms.LoadAdditively = LoadAdditively;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCosmeticCache.InitializeCosmeticCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                OwningBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCosmeticCache::InitializeCosmeticCache(class AQtnBodyPawn* OwningBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCosmeticCache", "InitializeCosmeticCache");

	Params::UQtnCosmeticCache_InitializeCosmeticCache_Params Parms{};

	Parms.OwningBodyPawn = OwningBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCosmeticCache.ApplyAdditiveFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer       FilterTags                                                       (Parm, NativeAccessSpecifierPublic)
// bool                               RefreshEntries                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCosmeticCache::ApplyAdditiveFilter(const struct FGameplayTagContainer& FilterTags, bool RefreshEntries)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCosmeticCache", "ApplyAdditiveFilter");

	Params::UQtnCosmeticCache_ApplyAdditiveFilter_Params Parms{};

	Parms.FilterTags = FilterTags;
	Parms.RefreshEntries = RefreshEntries;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnCreditSectionWidgetInterface
// (None)

class UClass* IQtnCreditSectionWidgetInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCreditSectionWidgetInterface");

	return Clss;
}


// QtnCreditSectionWidgetInterface QtnGame.Default__QtnCreditSectionWidgetInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnCreditSectionWidgetInterface* IQtnCreditSectionWidgetInterface::GetDefaultObj()
{
	static class IQtnCreditSectionWidgetInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnCreditSectionWidgetInterface*>(IQtnCreditSectionWidgetInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCreditSectionWidgetInterface.OnGenerateSection
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                     GeneratorSource                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 WidgetBaseSource                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnCreditSectionWidgetInterface::OnGenerateSection(class UObject* GeneratorSource, class UUserWidget* WidgetBaseSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditSectionWidgetInterface", "OnGenerateSection");

	Params::IQtnCreditSectionWidgetInterface_OnGenerateSection_Params Parms{};

	Parms.GeneratorSource = GeneratorSource;
	Parms.WidgetBaseSource = WidgetBaseSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnCreditsSectionBase
// (None)

class UClass* UQtnCreditsSectionBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCreditsSectionBase");

	return Clss;
}


// QtnCreditsSectionBase QtnGame.Default__QtnCreditsSectionBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCreditsSectionBase* UQtnCreditsSectionBase::GetDefaultObj()
{
	static class UQtnCreditsSectionBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCreditsSectionBase*>(UQtnCreditsSectionBase::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCreditsSectionBase.GenerateSection
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnCreditsWidget*           SourceCreditsWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCreditsSectionBase::GenerateSection(class UQtnCreditsWidget* SourceCreditsWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditsSectionBase", "GenerateSection");

	Params::UQtnCreditsSectionBase_GenerateSection_Params Parms{};

	Parms.SourceCreditsWidget = SourceCreditsWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCreditsSectionBase.ExecuteSection
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnCreditsWidget*           SourceCreditsWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCreditsSectionBase::ExecuteSection(class UQtnCreditsWidget* SourceCreditsWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditsSectionBase", "ExecuteSection");

	Params::UQtnCreditsSectionBase_ExecuteSection_Params Parms{};

	Parms.SourceCreditsWidget = SourceCreditsWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnCreditsSection_Organization
// (None)

class UClass* UQtnCreditsSection_Organization::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCreditsSection_Organization");

	return Clss;
}


// QtnCreditsSection_Organization QtnGame.Default__QtnCreditsSection_Organization
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCreditsSection_Organization* UQtnCreditsSection_Organization::GetDefaultObj()
{
	static class UQtnCreditsSection_Organization* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCreditsSection_Organization*>(UQtnCreditsSection_Organization::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCreditsSection_ContributorList
// (None)

class UClass* UQtnCreditsSection_ContributorList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCreditsSection_ContributorList");

	return Clss;
}


// QtnCreditsSection_ContributorList QtnGame.Default__QtnCreditsSection_ContributorList
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCreditsSection_ContributorList* UQtnCreditsSection_ContributorList::GetDefaultObj()
{
	static class UQtnCreditsSection_ContributorList* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCreditsSection_ContributorList*>(UQtnCreditsSection_ContributorList::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCreditsSection_CustomWidget
// (None)

class UClass* UQtnCreditsSection_CustomWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCreditsSection_CustomWidget");

	return Clss;
}


// QtnCreditsSection_CustomWidget QtnGame.Default__QtnCreditsSection_CustomWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCreditsSection_CustomWidget* UQtnCreditsSection_CustomWidget::GetDefaultObj()
{
	static class UQtnCreditsSection_CustomWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCreditsSection_CustomWidget*>(UQtnCreditsSection_CustomWidget::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnCreditsSectionWidget
// (None)

class UClass* UQtnCreditsSectionWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCreditsSectionWidget");

	return Clss;
}


// QtnCreditsSectionWidget QtnGame.Default__QtnCreditsSectionWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCreditsSectionWidget* UQtnCreditsSectionWidget::GetDefaultObj()
{
	static class UQtnCreditsSectionWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCreditsSectionWidget*>(UQtnCreditsSectionWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCreditsSectionWidget.OnGenerateFromSectionEvent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnCreditsWidget*           SourceCreditsWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnCreditsSectionBase*      OwningCreditsSection                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCreditsSectionWidget::OnGenerateFromSectionEvent(class UQtnCreditsWidget* SourceCreditsWidget, class UQtnCreditsSectionBase* OwningCreditsSection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditsSectionWidget", "OnGenerateFromSectionEvent");

	Params::UQtnCreditsSectionWidget_OnGenerateFromSectionEvent_Params Parms{};

	Parms.SourceCreditsWidget = SourceCreditsWidget;
	Parms.OwningCreditsSection = OwningCreditsSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnUserWidget
// (None)

class UClass* UQtnUserWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUserWidget");

	return Clss;
}


// QtnUserWidget QtnGame.Default__QtnUserWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUserWidget* UQtnUserWidget::GetDefaultObj()
{
	static class UQtnUserWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUserWidget*>(UQtnUserWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUserWidget.UnregisterAndHideWorldScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnUserWidget::UnregisterAndHideWorldScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "UnregisterAndHideWorldScreen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidget.SetWidgetVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                     Widget                                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WantVisible                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::SetWidgetVisibility(class UWidget* Widget, bool WantVisible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "SetWidgetVisibility");

	Params::UQtnUserWidget_SetWidgetVisibility_Params Parms{};

	Parms.Widget = Widget;
	Parms.WantVisible = WantVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidget.SetWidgetSlateVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                     Widget                                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESlateVisibility        SlateVisibility                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::SetWidgetSlateVisibility(class UWidget* Widget, enum class ESlateVisibility SlateVisibility)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "SetWidgetSlateVisibility");

	Params::UQtnUserWidget_SetWidgetSlateVisibility_Params Parms{};

	Parms.Widget = Widget;
	Parms.SlateVisibility = SlateVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidget.SetCurrentFocusedWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                     IntendedWidget                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::SetCurrentFocusedWidget(class UWidget* IntendedWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "SetCurrentFocusedWidget");

	Params::UQtnUserWidget_SetCurrentFocusedWidget_Params Parms{};

	Parms.IntendedWidget = IntendedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidget.RegisterAndShowWorldScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClassToPush                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::RegisterAndShowWorldScreen(TSubclassOf<class UQtnScreen> ScreenClassToPush, enum class EQtnScreenStackEnum ScreenStackIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "RegisterAndShowWorldScreen");

	Params::UQtnUserWidget_RegisterAndShowWorldScreen_Params Parms{};

	Parms.ScreenClassToPush = ScreenClassToPush;
	Parms.ScreenStackIndex = ScreenStackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidget.OnUIScroll
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              ScrollDelta                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromStick                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIScroll(float ScrollDelta, bool FromStick)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIScroll");

	Params::UQtnUserWidget_OnUIScroll_Params Parms{};

	Parms.ScrollDelta = ScrollDelta;
	Parms.FromStick = FromStick;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUIScreenActionRepeat
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIScreenActionRepeat(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIScreenActionRepeat");

	Params::UQtnUserWidget_OnUIScreenActionRepeat_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUIScreenActionReleased
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIScreenActionReleased(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIScreenActionReleased");

	Params::UQtnUserWidget_OnUIScreenActionReleased_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUIScreenActionPressed
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIScreenActionPressed(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIScreenActionPressed");

	Params::UQtnUserWidget_OnUIScreenActionPressed_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUINumPad
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                              Number                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUINumPad(int32 Number)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUINumPad");

	Params::UQtnUserWidget_OnUINumPad_Params Parms{};

	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUIHotKey
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIHotKeyEnum        HotKey                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIHotKey(enum class EQtnUIHotKeyEnum HotKey)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIHotKey");

	Params::UQtnUserWidget_OnUIHotKey_Params Parms{};

	Parms.HotKey = HotKey;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUIBodyActionRepeat
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIBodyActionRepeat(enum class EQtnUIBodyActionEnum BodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIBodyActionRepeat");

	Params::UQtnUserWidget_OnUIBodyActionRepeat_Params Parms{};

	Parms.BodyAction = BodyAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUIBodyActionReleased
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIBodyActionReleased(enum class EQtnUIBodyActionEnum BodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIBodyActionReleased");

	Params::UQtnUserWidget_OnUIBodyActionReleased_Params Parms{};

	Parms.BodyAction = BodyAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnUIBodyActionPressed
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnUIBodyActionPressed(enum class EQtnUIBodyActionEnum BodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnUIBodyActionPressed");

	Params::UQtnUserWidget_OnUIBodyActionPressed_Params Parms{};

	Parms.BodyAction = BodyAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetUnOccupied
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnQtnWidgetUnOccupied(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetUnOccupied");

	Params::UQtnUserWidget_OnQtnWidgetUnOccupied_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetUnInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetUnInitialized()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetUnInitialized");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetUnHijack
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    HijackedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnQtnWidgetUnHijack(class AQtnPawn* HijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetUnHijack");

	Params::UQtnUserWidget_OnQtnWidgetUnHijack_Params Parms{};

	Parms.HijackedPawn = HijackedPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetTicked
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnQtnWidgetTicked(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetTicked");

	Params::UQtnUserWidget_OnQtnWidgetTicked_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetStopped
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetStopped");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetStarted
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetStarted");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetShown
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetShown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetShown");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetResumed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnScreen*                  PreviousScreen                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnQtnWidgetResumed(class UQtnScreen* PreviousScreen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetResumed");

	Params::UQtnUserWidget_OnQtnWidgetResumed_Params Parms{};

	Parms.PreviousScreen = PreviousScreen;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetReadyForGameplay
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetPaused
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetPaused()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetPaused");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetOccupied
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FirstTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnQtnWidgetOccupied(class AQtnBodyPawn* OccupiedBodyPawn, bool FirstTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetOccupied");

	Params::UQtnUserWidget_OnQtnWidgetOccupied_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.FirstTime = FirstTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetInitialized()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetInitialized");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetHijack
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    HijackedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnQtnWidgetHijack(class AQtnPawn* HijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetHijack");

	Params::UQtnUserWidget_OnQtnWidgetHijack_Params Parms{};

	Parms.HijackedPawn = HijackedPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetHidden
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnUserWidget::OnQtnWidgetHidden()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetHidden");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUserWidget.OnQtnWidgetFocusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                     PreviousFocusedWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                     CurrentFocusedWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnQtnWidgetFocusChanged(class UWidget* PreviousFocusedWidget, class UWidget* CurrentFocusedWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnQtnWidgetFocusChanged");

	Params::UQtnUserWidget_OnQtnWidgetFocusChanged_Params Parms{};

	Parms.PreviousFocusedWidget = PreviousFocusedWidget;
	Parms.CurrentFocusedWidget = CurrentFocusedWidget;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnMouseRightClick
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Pressed                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                     HoveredWidget                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnMouseRightClick(bool Pressed, class UWidget* HoveredWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnMouseRightClick");

	Params::UQtnUserWidget_OnMouseRightClick_Params Parms{};

	Parms.Pressed = Pressed;
	Parms.HoveredWidget = HoveredWidget;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnMouseLeftClick
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Pressed                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                     HoveredWidget                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnMouseLeftClick(bool Pressed, class UWidget* HoveredWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnMouseLeftClick");

	Params::UQtnUserWidget_OnMouseLeftClick_Params Parms{};

	Parms.Pressed = Pressed;
	Parms.HoveredWidget = HoveredWidget;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnInputUsageChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               IsUsingMouseAndKeyboard                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnInputUsageChange(bool IsUsingMouseAndKeyboard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnInputUsageChange");

	Params::UQtnUserWidget_OnInputUsageChange_Params Parms{};

	Parms.IsUsingMouseAndKeyboard = IsUsingMouseAndKeyboard;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnDebugDisplay");

	Params::UQtnUserWidget_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.OnCursorDelta
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   CursorDelta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::OnCursorDelta(float DeltaSeconds, const struct FVector2D& CursorDelta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "OnCursorDelta");

	Params::UQtnUserWidget_OnCursorDelta_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.CursorDelta = CursorDelta;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUserWidget.IsUsingMouseAndKeyboard
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUserWidget::IsUsingMouseAndKeyboard()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "IsUsingMouseAndKeyboard");

	Params::UQtnUserWidget_IsUsingMouseAndKeyboard_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.IsScreenActionPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUserWidget::IsScreenActionPressed(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "IsScreenActionPressed");

	Params::UQtnUserWidget_IsScreenActionPressed_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.IsReadyForGameplay
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUserWidget::IsReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "IsReadyForGameplay");

	Params::UQtnUserWidget_IsReadyForGameplay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetZOrder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnUserWidget::GetZOrder()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetZOrder");

	Params::UQtnUserWidget_GetZOrder_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetWidgetChildByLabel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                     ParentWidget                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ChildLabel                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UQtnUserWidget::GetWidgetChildByLabel(class UWidget* ParentWidget, class FText& ChildLabel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetWidgetChildByLabel");

	Params::UQtnUserWidget_GetWidgetChildByLabel_Params Parms{};

	Parms.ParentWidget = ParentWidget;
	Parms.ChildLabel = ChildLabel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetWidgetChildByClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                     ParentWidget                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UWidget>         WidgetClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RecursiveDepth                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UQtnUserWidget::GetWidgetChildByClass(class UWidget* ParentWidget, TSubclassOf<class UWidget> WidgetClass, int32 RecursiveDepth)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetWidgetChildByClass");

	Params::UQtnUserWidget_GetWidgetChildByClass_Params Parms{};

	Parms.ParentWidget = ParentWidget;
	Parms.WidgetClass = WidgetClass;
	Parms.RecursiveDepth = RecursiveDepth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetWidgetCenterAbsolute
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                     Widget                                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnUserWidget::GetWidgetCenterAbsolute(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetWidgetCenterAbsolute");

	Params::UQtnUserWidget_GetWidgetCenterAbsolute_Params Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetRightStickInput
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnUserWidget::GetRightStickInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetRightStickInput");

	Params::UQtnUserWidget_GetRightStickInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetOwningScreen
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* UQtnUserWidget::GetOwningScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetOwningScreen");

	Params::UQtnUserWidget_GetOwningScreen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetOwningQtnPlayerState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* UQtnUserWidget::GetOwningQtnPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetOwningQtnPlayerState");

	Params::UQtnUserWidget_GetOwningQtnPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetOwningQtnPlayerPawn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* UQtnUserWidget::GetOwningQtnPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetOwningQtnPlayerPawn");

	Params::UQtnUserWidget_GetOwningQtnPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetOwningPlayerUI
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerUI*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerUI* UQtnUserWidget::GetOwningPlayerUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetOwningPlayerUI");

	Params::UQtnUserWidget_GetOwningPlayerUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetOwningPlayerInfo
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerController*        PlayerController                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                PlayerUI                                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerState*             QtnPlayerState                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHosting                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidget::GetOwningPlayerInfo(class AQtnBodyPawn** OccupiedBodyPawn, class AQtnPlayerPawn** PlayerPawn, class AQtnPlayerController** PlayerController, class AQtnPlayerUI** PlayerUI, class AQtnPlayerState** QtnPlayerState, bool* IsHosting)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetOwningPlayerInfo");

	Params::UQtnUserWidget_GetOwningPlayerInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OccupiedBodyPawn != nullptr)
		*OccupiedBodyPawn = Parms.OccupiedBodyPawn;

	if (PlayerPawn != nullptr)
		*PlayerPawn = Parms.PlayerPawn;

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;

	if (PlayerUI != nullptr)
		*PlayerUI = Parms.PlayerUI;

	if (QtnPlayerState != nullptr)
		*QtnPlayerState = Parms.QtnPlayerState;

	if (IsHosting != nullptr)
		*IsHosting = Parms.IsHosting;

}


// Function QtnGame.QtnUserWidget.GetOwningPlayerController
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* UQtnUserWidget::GetOwningPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetOwningPlayerController");

	Params::UQtnUserWidget_GetOwningPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetOccupiedBodyPawn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnUserWidget::GetOccupiedBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetOccupiedBodyPawn");

	Params::UQtnUserWidget_GetOccupiedBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetMousePosition
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnUserWidget::GetMousePosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetMousePosition");

	Params::UQtnUserWidget_GetMousePosition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetMouseDelta
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnUserWidget::GetMouseDelta()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetMouseDelta");

	Params::UQtnUserWidget_GetMouseDelta_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetLeftStickInput
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnUserWidget::GetLeftStickInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetLeftStickInput");

	Params::UQtnUserWidget_GetLeftStickInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetCursorPosition
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnUserWidget::GetCursorPosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetCursorPosition");

	Params::UQtnUserWidget_GetCursorPosition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetCursorDelta
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnUserWidget::GetCursorDelta()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetCursorDelta");

	Params::UQtnUserWidget_GetCursorDelta_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetCurrentlyHoveredWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UQtnUserWidget::GetCurrentlyHoveredWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetCurrentlyHoveredWidget");

	Params::UQtnUserWidget_GetCurrentlyHoveredWidget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetCurrentlyControlledPawn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnUserWidget::GetCurrentlyControlledPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetCurrentlyControlledPawn");

	Params::UQtnUserWidget_GetCurrentlyControlledPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetCurrentFocusedWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UQtnUserWidget::GetCurrentFocusedWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetCurrentFocusedWidget");

	Params::UQtnUserWidget_GetCurrentFocusedWidget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidget.GetCanvasPanelSlot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                     Widget                                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanelSlot*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanelSlot* UQtnUserWidget::GetCanvasPanelSlot(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidget", "GetCanvasPanelSlot");

	Params::UQtnUserWidget_GetCanvasPanelSlot_Params Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCreditsWidget
// (None)

class UClass* UQtnCreditsWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCreditsWidget");

	return Clss;
}


// QtnCreditsWidget QtnGame.Default__QtnCreditsWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCreditsWidget* UQtnCreditsWidget::GetDefaultObj()
{
	static class UQtnCreditsWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCreditsWidget*>(UQtnCreditsWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCreditsWidget.StartCredits
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnCreditsWidget::StartCredits()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditsWidget", "StartCredits");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCreditsWidget.GenerateCredits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               RegenerateCredits                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCreditsWidget::GenerateCredits(bool RegenerateCredits)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditsWidget", "GenerateCredits");

	Params::UQtnCreditsWidget_GenerateCredits_Params Parms{};

	Parms.RegenerateCredits = RegenerateCredits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCreditsWidget.BindToRequiredWidgets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnCreditsWidgetInitializationParametersInitParams                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnCreditsWidget::BindToRequiredWidgets(struct FQtnCreditsWidgetInitializationParameters& InitParams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditsWidget", "BindToRequiredWidgets");

	Params::UQtnCreditsWidget_BindToRequiredWidgets_Params Parms{};

	Parms.InitParams = InitParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnCreditsWidget.AddTimelineWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     WidgetClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnCreditsWidget::AddTimelineWidget(TSubclassOf<class UUserWidget> WidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCreditsWidget", "AddTimelineWidget");

	Params::UQtnCreditsWidget_AddTimelineWidget_Params Parms{};

	Parms.WidgetClass = WidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnCuckooActorInterface
// (None)

class UClass* IQtnCuckooActorInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCuckooActorInterface");

	return Clss;
}


// QtnCuckooActorInterface QtnGame.Default__QtnCuckooActorInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnCuckooActorInterface* IQtnCuckooActorInterface::GetDefaultObj()
{
	static class IQtnCuckooActorInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnCuckooActorInterface*>(IQtnCuckooActorInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCuckooActorInterface.SetTrackedPosition
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnCuckooActorInterface::SetTrackedPosition(const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCuckooActorInterface", "SetTrackedPosition");

	Params::IQtnCuckooActorInterface_SetTrackedPosition_Params Parms{};

	Parms.Position = Position;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnCuckooActorInterface.SetHeadTrackingRanges
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FQtnRangedFloat             PitchRange                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             YawRange                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void IQtnCuckooActorInterface::SetHeadTrackingRanges(const struct FQtnRangedFloat& PitchRange, const struct FQtnRangedFloat& YawRange)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCuckooActorInterface", "SetHeadTrackingRanges");

	Params::IQtnCuckooActorInterface_SetHeadTrackingRanges_Params Parms{};

	Parms.PitchRange = PitchRange;
	Parms.YawRange = YawRange;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnCuckooActorInterface.SetHeadTracking
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               ShouldTrack                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnCuckooActorInterface::SetHeadTracking(bool ShouldTrack)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCuckooActorInterface", "SetHeadTracking");

	Params::IQtnCuckooActorInterface_SetHeadTracking_Params Parms{};

	Parms.ShouldTrack = ShouldTrack;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnCuckooActorInterface.PlaySyncedAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*               AnimSequence                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnCuckooActorInterface::PlaySyncedAnim(class UAnimSequence* AnimSequence, class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCuckooActorInterface", "PlaySyncedAnim");

	Params::IQtnCuckooActorInterface_PlaySyncedAnim_Params Parms{};

	Parms.AnimSequence = AnimSequence;
	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnCuckooActorInterface.AnimNotifyCuckoo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               On                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnCuckooActorInterface::AnimNotifyCuckoo(bool On, int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCuckooActorInterface", "AnimNotifyCuckoo");

	Params::IQtnCuckooActorInterface_AnimNotifyCuckoo_Params Parms{};

	Parms.On = On;
	Parms.Index = Index;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnCullingVolume
// (Actor)

class UClass* AQtnCullingVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCullingVolume");

	return Clss;
}


// QtnCullingVolume QtnGame.Default__QtnCullingVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnCullingVolume* AQtnCullingVolume::GetDefaultObj()
{
	static class AQtnCullingVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnCullingVolume*>(AQtnCullingVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCullingVolume.IsActorInVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Actor                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnCullingVolume::IsActorInVolume(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCullingVolume", "IsActorInVolume");

	Params::AQtnCullingVolume_IsActorInVolume_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCullingVolume.CullingFarActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      LevelKeyword                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnCullingVolume::CullingFarActors(const class FString& LevelKeyword)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCullingVolume", "CullingFarActors");

	Params::AQtnCullingVolume_CullingFarActors_Params Parms{};

	Parms.LevelKeyword = LevelKeyword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDamageNumbersSubsystem
// (None)

class UClass* UQtnDamageNumbersSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDamageNumbersSubsystem");

	return Clss;
}


// QtnDamageNumbersSubsystem QtnGame.Default__QtnDamageNumbersSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDamageNumbersSubsystem* UQtnDamageNumbersSubsystem::GetDefaultObj()
{
	static class UQtnDamageNumbersSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDamageNumbersSubsystem*>(UQtnDamageNumbersSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDamageNumbersSubsystem.SpawnCombatTextFromText
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      TargetToParent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        TextToDisplay                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageNumberOptionalInfoOptionalData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageNumbersSubsystem::SpawnCombatTextFromText(class AActor* TargetToParent, class FText& TextToDisplay, struct FVector& Location, struct FQtnDamageNumberOptionalInfo& OptionalData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumbersSubsystem", "SpawnCombatTextFromText");

	Params::UQtnDamageNumbersSubsystem_SpawnCombatTextFromText_Params Parms{};

	Parms.TargetToParent = TargetToParent;
	Parms.TextToDisplay = TextToDisplay;
	Parms.Location = Location;
	Parms.OptionalData = OptionalData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumbersSubsystem.SpawnCombatTextFromMaterial
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      TargetToParent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          Material                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageNumberOptionalInfoOptionalData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageNumbersSubsystem::SpawnCombatTextFromMaterial(class AActor* TargetToParent, class UMaterialInterface* Material, struct FVector& Location, struct FQtnDamageNumberOptionalInfo& OptionalData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumbersSubsystem", "SpawnCombatTextFromMaterial");

	Params::UQtnDamageNumbersSubsystem_SpawnCombatTextFromMaterial_Params Parms{};

	Parms.TargetToParent = TargetToParent;
	Parms.Material = Material;
	Parms.Location = Location;
	Parms.OptionalData = OptionalData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumbersSubsystem.SpawnCombatTextFromDamage
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      TargetToParent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageNumberOptionalInfoOptionalData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageNumbersSubsystem::SpawnCombatTextFromDamage(class AActor* TargetToParent, struct FQtnDamageInfo& DamageInfo, struct FVector& Location, struct FQtnDamageNumberOptionalInfo& OptionalData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumbersSubsystem", "SpawnCombatTextFromDamage");

	Params::UQtnDamageNumbersSubsystem_SpawnCombatTextFromDamage_Params Parms{};

	Parms.TargetToParent = TargetToParent;
	Parms.DamageInfo = DamageInfo;
	Parms.Location = Location;
	Parms.OptionalData = OptionalData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumbersSubsystem.IsOldDamageNumberSystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageNumbersSubsystem::IsOldDamageNumberSystem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumbersSubsystem", "IsOldDamageNumberSystem");

	Params::UQtnDamageNumbersSubsystem_IsOldDamageNumberSystem_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageNumbersSubsystem.GetQtnDamageNumbersSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDamageNumbersSubsystem*  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDamageNumbersSubsystem* UQtnDamageNumbersSubsystem::GetQtnDamageNumbersSubsystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumbersSubsystem", "GetQtnDamageNumbersSubsystem");

	Params::UQtnDamageNumbersSubsystem_GetQtnDamageNumbersSubsystem_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageNumbersSubsystem.EditorHelper_SetWidgetComponentClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UWidgetComponent>ClassToSet                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageNumbersSubsystem::EditorHelper_SetWidgetComponentClass(TSubclassOf<class UWidgetComponent> ClassToSet)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumbersSubsystem", "EditorHelper_SetWidgetComponentClass");

	Params::UQtnDamageNumbersSubsystem_EditorHelper_SetWidgetComponentClass_Params Parms{};

	Parms.ClassToSet = ClassToSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumbersSubsystem.EditorHelper_SetWidgetClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     ClassToSet                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageNumbersSubsystem::EditorHelper_SetWidgetClass(TSubclassOf<class UUserWidget> ClassToSet)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumbersSubsystem", "EditorHelper_SetWidgetClass");

	Params::UQtnDamageNumbersSubsystem_EditorHelper_SetWidgetClass_Params Parms{};

	Parms.ClassToSet = ClassToSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDamageNumberWidget
// (None)

class UClass* UQtnDamageNumberWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDamageNumberWidget");

	return Clss;
}


// QtnDamageNumberWidget QtnGame.Default__QtnDamageNumberWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDamageNumberWidget* UQtnDamageNumberWidget::GetDefaultObj()
{
	static class UQtnDamageNumberWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDamageNumberWidget*>(UQtnDamageNumberWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDamageNumberWidget.UpdateTransform_Cpp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                              InDeltaTime                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanel*                Canvas                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*            Animation                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                 HorizontalCurve                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                 VerticalCurve                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HorizontalTravel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VerticalTravel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageDifference                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetLocation                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDistanceToCamera                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageNumberWidget::UpdateTransform_Cpp(float InDeltaTime, class UCanvasPanel* Canvas, class UWidgetAnimation* Animation, class UCurveFloat* HorizontalCurve, class UCurveFloat* VerticalCurve, float HorizontalTravel, float VerticalTravel, float DamageDifference, struct FVector& TargetLocation, float MaxDistanceToCamera)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumberWidget", "UpdateTransform_Cpp");

	Params::UQtnDamageNumberWidget_UpdateTransform_Cpp_Params Parms{};

	Parms.InDeltaTime = InDeltaTime;
	Parms.Canvas = Canvas;
	Parms.Animation = Animation;
	Parms.HorizontalCurve = HorizontalCurve;
	Parms.VerticalCurve = VerticalCurve;
	Parms.HorizontalTravel = HorizontalTravel;
	Parms.VerticalTravel = VerticalTravel;
	Parms.DamageDifference = DamageDifference;
	Parms.TargetLocation = TargetLocation;
	Parms.MaxDistanceToCamera = MaxDistanceToCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumberWidget.ReturnToPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDamageNumberWidget::ReturnToPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumberWidget", "ReturnToPool");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumberWidget.OnStartFromTextEvent
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        TextToDisplay                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnDamageNumberOptionalInfoOptionalData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                     WorldLocation                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageNumberWidget::OnStartFromTextEvent(class AActor* Target, class FText& TextToDisplay, struct FQtnDamageNumberOptionalInfo& OptionalData, struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumberWidget", "OnStartFromTextEvent");

	Params::UQtnDamageNumberWidget_OnStartFromTextEvent_Params Parms{};

	Parms.Target = Target;
	Parms.TextToDisplay = TextToDisplay;
	Parms.OptionalData = OptionalData;
	Parms.WorldLocation = WorldLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumberWidget.OnStartFromMaterialEvent
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          Material                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageNumberOptionalInfoOptionalData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                     WorldLocation                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageNumberWidget::OnStartFromMaterialEvent(class AActor* Target, class UMaterialInterface* Material, struct FQtnDamageNumberOptionalInfo& OptionalData, struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumberWidget", "OnStartFromMaterialEvent");

	Params::UQtnDamageNumberWidget_OnStartFromMaterialEvent_Params Parms{};

	Parms.Target = Target;
	Parms.Material = Material;
	Parms.OptionalData = OptionalData;
	Parms.WorldLocation = WorldLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageNumberWidget.OnStartFromDamageInfoEvent
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnDamageNumberOptionalInfoOptionalData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                     WorldLocation                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageNumberWidget::OnStartFromDamageInfoEvent(class AActor* Target, struct FQtnDamageInfo& DamageInfo, struct FQtnDamageNumberOptionalInfo& OptionalData, struct FVector& WorldLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageNumberWidget", "OnStartFromDamageInfoEvent");

	Params::UQtnDamageNumberWidget_OnStartFromDamageInfoEvent_Params Parms{};

	Parms.Target = Target;
	Parms.DamageInfo = DamageInfo;
	Parms.OptionalData = OptionalData;
	Parms.WorldLocation = WorldLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDamageReaction
// (None)

class UClass* UQtnDamageReaction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDamageReaction");

	return Clss;
}


// QtnDamageReaction QtnGame.Default__QtnDamageReaction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDamageReaction* UQtnDamageReaction::GetDefaultObj()
{
	static class UQtnDamageReaction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDamageReaction*>(UQtnDamageReaction::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDamageReaction.OnTickReaction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnTickReaction(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnTickReaction");

	Params::UQtnDamageReaction_OnTickReaction_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReaction.OnReactionMontageDone
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnReactionMontageDone(class UAnimMontage* Montage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnReactionMontageDone");

	Params::UQtnDamageReaction_OnReactionMontageDone_Params Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReaction.OnMovementBlocked
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                  Impact                                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnMovementBlocked(struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnMovementBlocked");

	Params::UQtnDamageReaction_OnMovementBlocked_Params Parms{};

	Parms.Impact = Impact;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDamageReaction.OnInitReaction
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnFullBodyStateHitReaction*HitReactionBodyState                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnInitReaction(class UQtnFullBodyStateHitReaction* HitReactionBodyState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnInitReaction");

	Params::UQtnDamageReaction_OnInitReaction_Params Parms{};

	Parms.HitReactionBodyState = HitReactionBodyState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDamageReaction.OnExitReaction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnExitReaction(bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnExitReaction");

	Params::UQtnDamageReaction_OnExitReaction_Params Parms{};

	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReaction.OnEnterReaction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnEnterReaction(bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnEnterReaction");

	Params::UQtnDamageReaction_OnEnterReaction_Params Parms{};

	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReaction.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnDebugDisplay");

	Params::UQtnDamageReaction_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDamageReaction.OnAnimWindowEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnAnimWindowEnd(class UQtnAnimWindow* AnimWindow, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnAnimWindowEnd");

	Params::UQtnDamageReaction_OnAnimWindowEnd_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.Interrupted = Interrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReaction.OnAnimWindowBegin
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnAnimWindowBegin(class UQtnAnimWindow* AnimWindow, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnAnimWindowBegin");

	Params::UQtnDamageReaction_OnAnimWindowBegin_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.TotalDuration = TotalDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReaction.OnAnimNotify
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimNotify*              AnimNotify                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::OnAnimNotify(class UQtnAnimNotify* AnimNotify)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "OnAnimNotify");

	Params::UQtnDamageReaction_OnAnimNotify_Params Parms{};

	Parms.AnimNotify = AnimNotify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReaction.IsReactionFinished
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReaction::IsReactionFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "IsReactionFinished");

	Params::UQtnDamageReaction_IsReactionFinished_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.HandleOtherDamage
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              OtherDamageInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         OtherReactInfo                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               AllowNewReaction                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::HandleOtherDamage(struct FQtnDamageInfo& OtherDamageInfo, struct FQtnHitReactionInfo& OtherReactInfo, bool* AllowNewReaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "HandleOtherDamage");

	Params::UQtnDamageReaction_HandleOtherDamage_Params Parms{};

	Parms.OtherDamageInfo = OtherDamageInfo;
	Parms.OtherReactInfo = OtherReactInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AllowNewReaction != nullptr)
		*AllowNewReaction = Parms.AllowNewReaction;

}


// Function QtnGame.QtnDamageReaction.GetVictimPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnDamageReaction::GetVictimPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetVictimPawn");

	Params::UQtnDamageReaction_GetVictimPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.GetVictimBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnDamageReaction::GetVictimBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetVictimBody");

	Params::UQtnDamageReaction_GetVictimBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.GetOwningHitReaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnFullBodyStateHitReaction*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnFullBodyStateHitReaction* UQtnDamageReaction::GetOwningHitReaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetOwningHitReaction");

	Params::UQtnDamageReaction_GetOwningHitReaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.GetHitReactInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnHitReactionInfo         ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

struct FQtnHitReactionInfo UQtnDamageReaction::GetHitReactInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetHitReactInfo");

	Params::UQtnDamageReaction_GetHitReactInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.GetDamagingVerb
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* UQtnDamageReaction::GetDamagingVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetDamagingVerb");

	Params::UQtnDamageReaction_GetDamagingVerb_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.GetDamagingCulprit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnDamageReaction::GetDamagingCulprit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetDamagingCulprit");

	Params::UQtnDamageReaction_GetDamagingCulprit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.GetDamageInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnDamageInfo              ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnDamageInfo UQtnDamageReaction::GetDamageInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetDamageInfo");

	Params::UQtnDamageReaction_GetDamageInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.GetButtonMashRatio
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               IsFull                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnDamageReaction::GetButtonMashRatio(bool* IsFull)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "GetButtonMashRatio");

	Params::UQtnDamageReaction_GetButtonMashRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsFull != nullptr)
		*IsFull = Parms.IsFull;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReaction.AlterLocomotion
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                     OriginalMovementIntention                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     AlteredMovementIntention                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SpeedScale                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlendSpace*                 LocoBlendOverride                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReaction::AlterLocomotion(struct FVector& OriginalMovementIntention, struct FVector* AlteredMovementIntention, float* SpeedScale, class UBlendSpace** LocoBlendOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReaction", "AlterLocomotion");

	Params::UQtnDamageReaction_AlterLocomotion_Params Parms{};

	Parms.OriginalMovementIntention = OriginalMovementIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AlteredMovementIntention != nullptr)
		*AlteredMovementIntention = std::move(Parms.AlteredMovementIntention);

	if (SpeedScale != nullptr)
		*SpeedScale = Parms.SpeedScale;

	if (LocoBlendOverride != nullptr)
		*LocoBlendOverride = Parms.LocoBlendOverride;

}


// Class QtnGame.QtnDamageReceptorComponent
// (None)

class UClass* UQtnDamageReceptorComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDamageReceptorComponent");

	return Clss;
}


// QtnDamageReceptorComponent QtnGame.Default__QtnDamageReceptorComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDamageReceptorComponent* UQtnDamageReceptorComponent::GetDefaultObj()
{
	static class UQtnDamageReceptorComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDamageReceptorComponent*>(UQtnDamageReceptorComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDamageReceptorComponent.TickGrabCooldown
// (Final, Native, Static, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    OwningPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              CooldownDuration                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaTime                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InOutCooldownTimer                                               (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::TickGrabCooldown(class AQtnPawn* OwningPawn, float CooldownDuration, float DeltaTime, float& InOutCooldownTimer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "TickGrabCooldown");

	Params::UQtnDamageReceptorComponent_TickGrabCooldown_Params Parms{};

	Parms.OwningPawn = OwningPawn;
	Parms.CooldownDuration = CooldownDuration;
	Parms.DeltaTime = DeltaTime;
	Parms.InOutCooldownTimer = InOutCooldownTimer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.StaticApplyQtnDamage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ActorToDamage                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::StaticApplyQtnDamage(class AActor* ActorToDamage, const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "StaticApplyQtnDamage");

	Params::UQtnDamageReceptorComponent_StaticApplyQtnDamage_Params Parms{};

	Parms.ActorToDamage = ActorToDamage;
	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.ShouldAttractAimAssist
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    AttackingPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromCollateralDamage                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReceptorComponent::ShouldAttractAimAssist(class AQtnPawn* AttackingPawn, bool FromCollateralDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "ShouldAttractAimAssist");

	Params::UQtnDamageReceptorComponent_ShouldAttractAimAssist_Params Parms{};

	Parms.AttackingPawn = AttackingPawn;
	Parms.FromCollateralDamage = FromCollateralDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.SetCanHitReact_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               CanHitReact                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::SetCanHitReact_ServerOnly(bool CanHitReact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "SetCanHitReact_ServerOnly");

	Params::UQtnDamageReceptorComponent_SetCanHitReact_ServerOnly_Params Parms{};

	Parms.CanHitReact = CanHitReact;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.SetCanDie_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               CanDie                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::SetCanDie_ServerOnly(bool CanDie)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "SetCanDie_ServerOnly");

	Params::UQtnDamageReceptorComponent_SetCanDie_ServerOnly_Params Parms{};

	Parms.CanDie = CanDie;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.SetCanBeDamaged_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               CanBeDamaged                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::SetCanBeDamaged_ServerOnly(bool CanBeDamaged)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "SetCanBeDamaged_ServerOnly");

	Params::UQtnDamageReceptorComponent_SetCanBeDamaged_ServerOnly_Params Parms{};

	Parms.CanBeDamaged = CanBeDamaged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.ServerIncomingPlayerDamage
// (Final, Net, NetReliable, Native, Event, Private, NetServer)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::ServerIncomingPlayerDamage(const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "ServerIncomingPlayerDamage");

	Params::UQtnDamageReceptorComponent_ServerIncomingPlayerDamage_Params Parms{};

	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.RemoveStatusEffect_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::RemoveStatusEffect_ServerOnly(TSubclassOf<class UQtnStatusEffect> StatusEffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "RemoveStatusEffect_ServerOnly");

	Params::UQtnDamageReceptorComponent_RemoveStatusEffect_ServerOnly_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.RemoveLocalDamageInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     DamageInhibitor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::RemoveLocalDamageInhibitor(class UObject* DamageInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "RemoveLocalDamageInhibitor");

	Params::UQtnDamageReceptorComponent_RemoveLocalDamageInhibitor_Params Parms{};

	Parms.DamageInhibitor = DamageInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.RemoveDamageInhibitor_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     DamageInhibitor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::RemoveDamageInhibitor_ServerOnly(class UObject* DamageInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "RemoveDamageInhibitor_ServerOnly");

	Params::UQtnDamageReceptorComponent_RemoveDamageInhibitor_ServerOnly_Params Parms{};

	Parms.DamageInhibitor = DamageInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.RemoveDamageImmunity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnDamageType>  DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::RemoveDamageImmunity(TSubclassOf<class UQtnDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "RemoveDamageImmunity");

	Params::UQtnDamageReceptorComponent_RemoveDamageImmunity_Params Parms{};

	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.RemoveAllStatusEffects_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDamageReceptorComponent::RemoveAllStatusEffects_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "RemoveAllStatusEffects_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnDamageReceptorComponent.QtnParryIncomingDamageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class AActor*                      ParryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::QtnParryIncomingDamageEvent__DelegateSignature(class AActor* ParryingActor, struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "QtnParryIncomingDamageEvent__DelegateSignature");

	Params::UQtnDamageReceptorComponent_QtnParryIncomingDamageEvent__DelegateSignature_Params Parms{};

	Parms.ParryingActor = ParryingActor;
	Parms.DamageInfo = DamageInfo;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnDamageReceptorComponent.QtnOnStatusEffectEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnStatusEffect*            StatusEffect                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::QtnOnStatusEffectEvent__DelegateSignature(class UQtnStatusEffect* StatusEffect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "QtnOnStatusEffectEvent__DelegateSignature");

	Params::UQtnDamageReceptorComponent_QtnOnStatusEffectEvent__DelegateSignature_Params Parms{};

	Parms.StatusEffect = StatusEffect;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnDamageReceptorComponent.QtnIncomingTootFartEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::QtnIncomingTootFartEvent__DelegateSignature(struct FQtnDamageInfo& DamageInfo, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "QtnIncomingTootFartEvent__DelegateSignature");

	Params::UQtnDamageReceptorComponent_QtnIncomingTootFartEvent__DelegateSignature_Params Parms{};

	Parms.DamageInfo = DamageInfo;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnDamageReceptorComponent.QtnIncomingDamageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UQtnDamageReceptorComponent* DamagedReceptor                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::QtnIncomingDamageEvent__DelegateSignature(class UQtnDamageReceptorComponent* DamagedReceptor, struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactionInfo, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "QtnIncomingDamageEvent__DelegateSignature");

	Params::UQtnDamageReceptorComponent_QtnIncomingDamageEvent__DelegateSignature_Params Parms{};

	Parms.DamagedReceptor = DamagedReceptor;
	Parms.DamageInfo = DamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnDamageReceptorComponent.QtnBlockIncomingDamageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class AActor*                      blockingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::QtnBlockIncomingDamageEvent__DelegateSignature(class AActor* blockingActor, struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "QtnBlockIncomingDamageEvent__DelegateSignature");

	Params::UQtnDamageReceptorComponent_QtnBlockIncomingDamageEvent__DelegateSignature_Params Parms{};

	Parms.blockingActor = blockingActor;
	Parms.DamageInfo = DamageInfo;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDamageReceptorComponent.PreProcessIncomingDamage
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              IncomingDamageInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         DamageSuggestedHitReact                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              OutgoingDamageInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         ActualHitReact                                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::PreProcessIncomingDamage(struct FQtnDamageInfo& IncomingDamageInfo, struct FQtnHitReactionInfo& DamageSuggestedHitReact, struct FQtnDamageInfo* OutgoingDamageInfo, struct FQtnHitReactionInfo* ActualHitReact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "PreProcessIncomingDamage");

	Params::UQtnDamageReceptorComponent_PreProcessIncomingDamage_Params Parms{};

	Parms.IncomingDamageInfo = IncomingDamageInfo;
	Parms.DamageSuggestedHitReact = DamageSuggestedHitReact;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutgoingDamageInfo != nullptr)
		*OutgoingDamageInfo = std::move(Parms.OutgoingDamageInfo);

	if (ActualHitReact != nullptr)
		*ActualHitReact = std::move(Parms.ActualHitReact);

}


// Function QtnGame.QtnDamageReceptorComponent.ParryWindowStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnRangedFloat             ScaledAngle                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ScaleDistance                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    ParryingVerb                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::ParryWindowStart(struct FQtnRangedFloat& ScaledAngle, float ScaleDistance, class UQtnVerb* ParryingVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "ParryWindowStart");

	Params::UQtnDamageReceptorComponent_ParryWindowStart_Params Parms{};

	Parms.ScaledAngle = ScaledAngle;
	Parms.ScaleDistance = ScaleDistance;
	Parms.ParryingVerb = ParryingVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.ParryWindowEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDamageReceptorComponent::ParryWindowEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "ParryWindowEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.OnRep_StatusEffectInstances
// (Final, Native, Private)
// Parameters:

void UQtnDamageReceptorComponent::OnRep_StatusEffectInstances()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "OnRep_StatusEffectInstances");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "OnDebugDisplay");

	Params::UQtnDamageReceptorComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDamageReceptorComponent.MulticastIncomingPlayerDamage
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::MulticastIncomingPlayerDamage(const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "MulticastIncomingPlayerDamage");

	Params::UQtnDamageReceptorComponent_MulticastIncomingPlayerDamage_Params Parms{};

	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.MulticastIncomingDamage
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::MulticastIncomingDamage(const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "MulticastIncomingDamage");

	Params::UQtnDamageReceptorComponent_MulticastIncomingDamage_Params Parms{};

	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.IsDamageInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReceptorComponent::IsDamageInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "IsDamageInhibited");

	Params::UQtnDamageReceptorComponent_IsDamageInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.HasStatusEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReceptorComponent::HasStatusEffect(TSubclassOf<class UQtnStatusEffect> StatusEffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "HasStatusEffect");

	Params::UQtnDamageReceptorComponent_HasStatusEffect_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.HasDamageImmunity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnDamageType>  DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PermanentlyImmune                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReceptorComponent::HasDamageImmunity(TSubclassOf<class UQtnDamageType> DamageTypeClass, bool* PermanentlyImmune)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "HasDamageImmunity");

	Params::UQtnDamageReceptorComponent_HasDamageImmunity_Params Parms{};

	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PermanentlyImmune != nullptr)
		*PermanentlyImmune = Parms.PermanentlyImmune;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.GetStatusEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnStatusEffect*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnStatusEffect* UQtnDamageReceptorComponent::GetStatusEffect(TSubclassOf<class UQtnStatusEffect> StatusEffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "GetStatusEffect");

	Params::UQtnDamageReceptorComponent_GetStatusEffect_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.GetParryInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      PotentialDamageSource                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    ParryingVerb                                                     (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WouldParrySucceed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::GetParryInfo(class AActor* PotentialDamageSource, class UQtnVerb** ParryingVerb, bool* WouldParrySucceed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "GetParryInfo");

	Params::UQtnDamageReceptorComponent_GetParryInfo_Params Parms{};

	Parms.PotentialDamageSource = PotentialDamageSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ParryingVerb != nullptr)
		*ParryingVerb = Parms.ParryingVerb;

	if (WouldParrySucceed != nullptr)
		*WouldParrySucceed = Parms.WouldParrySucceed;

}


// Function QtnGame.QtnDamageReceptorComponent.GetLastDamagingDamageType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnDamageType*              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDamageType* UQtnDamageReceptorComponent::GetLastDamagingDamageType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "GetLastDamagingDamageType");

	Params::UQtnDamageReceptorComponent_GetLastDamagingDamageType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.GetLastDamagingCulprit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnDamageReceptorComponent::GetLastDamagingCulprit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "GetLastDamagingCulprit");

	Params::UQtnDamageReceptorComponent_GetLastDamagingCulprit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.GetLastDamageInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnDamageInfo              ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnDamageInfo UQtnDamageReceptorComponent::GetLastDamageInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "GetLastDamageInfo");

	Params::UQtnDamageReceptorComponent_GetLastDamageInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.GetBlockInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      PotentialDamageSource                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    blockingVerb                                                     (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WouldBlockSucceed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::GetBlockInfo(class AActor* PotentialDamageSource, class UQtnVerb** blockingVerb, bool* WouldBlockSucceed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "GetBlockInfo");

	Params::UQtnDamageReceptorComponent_GetBlockInfo_Params Parms{};

	Parms.PotentialDamageSource = PotentialDamageSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (blockingVerb != nullptr)
		*blockingVerb = Parms.blockingVerb;

	if (WouldBlockSucceed != nullptr)
		*WouldBlockSucceed = Parms.WouldBlockSucceed;

}


// Function QtnGame.QtnDamageReceptorComponent.GetAllStatusEffects
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnStatusEffect*>    ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnStatusEffect*> UQtnDamageReceptorComponent::GetAllStatusEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "GetAllStatusEffects");

	Params::UQtnDamageReceptorComponent_GetAllStatusEffects_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.CanHitReact
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReceptorComponent::CanHitReact()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "CanHitReact");

	Params::UQtnDamageReceptorComponent_CanHitReact_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.CanDie
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReceptorComponent::CanDie()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "CanDie");

	Params::UQtnDamageReceptorComponent_CanDie_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.CanBeDamaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageReceptorComponent::CanBeDamaged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "CanBeDamaged");

	Params::UQtnDamageReceptorComponent_CanBeDamaged_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.BlockWindowStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnRangedFloat             ScaledAngle                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ScaleDistance                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    blockingVerb                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::BlockWindowStart(struct FQtnRangedFloat& ScaledAngle, float ScaleDistance, class UQtnVerb* blockingVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "BlockWindowStart");

	Params::UQtnDamageReceptorComponent_BlockWindowStart_Params Parms{};

	Parms.ScaledAngle = ScaledAngle;
	Parms.ScaleDistance = ScaleDistance;
	Parms.blockingVerb = blockingVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.BlockWindowEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDamageReceptorComponent::BlockWindowEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "BlockWindowEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.ApplyQtnDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::ApplyQtnDamage(const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "ApplyQtnDamage");

	Params::UQtnDamageReceptorComponent_ApplyQtnDamage_Params Parms{};

	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.AddStatusEffect_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    StatusInstigator                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnStatusEffect*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnStatusEffect* UQtnDamageReceptorComponent::AddStatusEffect_ServerOnly(TSubclassOf<class UQtnStatusEffect> StatusEffectClass, class AQtnPawn* StatusInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "AddStatusEffect_ServerOnly");

	Params::UQtnDamageReceptorComponent_AddStatusEffect_ServerOnly_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;
	Parms.StatusInstigator = StatusInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorComponent.AddLocalDamageInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     DamageInhibitor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::AddLocalDamageInhibitor(class UObject* DamageInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "AddLocalDamageInhibitor");

	Params::UQtnDamageReceptorComponent_AddLocalDamageInhibitor_Params Parms{};

	Parms.DamageInhibitor = DamageInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.AddDamageInhibitor_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     DamageInhibitor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::AddDamageInhibitor_ServerOnly(class UObject* DamageInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "AddDamageInhibitor_ServerOnly");

	Params::UQtnDamageReceptorComponent_AddDamageInhibitor_ServerOnly_Params Parms{};

	Parms.DamageInhibitor = DamageInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDamageReceptorComponent.AddDamageImmunity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnDamageType>  DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDamageReceptorComponent::AddDamageImmunity(TSubclassOf<class UQtnDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorComponent", "AddDamageImmunity");

	Params::UQtnDamageReceptorComponent_AddDamageImmunity_Params Parms{};

	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDamageReceptorManager
// (None)

class UClass* UQtnDamageReceptorManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDamageReceptorManager");

	return Clss;
}


// QtnDamageReceptorManager QtnGame.Default__QtnDamageReceptorManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDamageReceptorManager* UQtnDamageReceptorManager::GetDefaultObj()
{
	static class UQtnDamageReceptorManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDamageReceptorManager*>(UQtnDamageReceptorManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDamageReceptorManager.GetDamageReceptorManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDamageReceptorManager*   ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDamageReceptorManager* UQtnDamageReceptorManager::GetDamageReceptorManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorManager", "GetDamageReceptorManager");

	Params::UQtnDamageReceptorManager_GetDamageReceptorManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorManager.GetDamageReceptorComponents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnDamageReceptorComponent*>ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnDamageReceptorComponent*> UQtnDamageReceptorManager::GetDamageReceptorComponents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorManager", "GetDamageReceptorComponents");

	Params::UQtnDamageReceptorManager_GetDamageReceptorComponents_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorManager.GetAllQtnPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPawn*> UQtnDamageReceptorManager::GetAllQtnPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorManager", "GetAllQtnPawns");

	Params::UQtnDamageReceptorManager_GetAllQtnPawns_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageReceptorManager.GetAllActorsWithDamageReceptors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UQtnDamageReceptorManager::GetAllActorsWithDamageReceptors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageReceptorManager", "GetAllActorsWithDamageReceptors");

	Params::UQtnDamageReceptorManager_GetAllActorsWithDamageReceptors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnDamageType
// (None)

class UClass* UQtnDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDamageType");

	return Clss;
}


// QtnDamageType QtnGame.Default__QtnDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDamageType* UQtnDamageType::GetDefaultObj()
{
	static class UQtnDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDamageType*>(UQtnDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDamageType.ShouldIgnoreBadEffects
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Victim                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              IncomingDamageInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDamageType::ShouldIgnoreBadEffects(class AQtnPawn* Culprit, class AActor* Victim, struct FQtnDamageInfo& IncomingDamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageType", "ShouldIgnoreBadEffects");

	Params::UQtnDamageType_ShouldIgnoreBadEffects_Params Parms{};

	Parms.Culprit = Culprit;
	Parms.Victim = Victim;
	Parms.IncomingDamageInfo = IncomingDamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageType.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnDamageType::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageType", "GetIconForUI");

	Params::UQtnDamageType_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageType.GetDefaultHitReaction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ActorToDamage                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              IncomingDamageInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         SuggestedHitReact                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UQtnDamageType::GetDefaultHitReaction(class AActor* ActorToDamage, struct FQtnDamageInfo& IncomingDamageInfo, struct FQtnHitReactionInfo* SuggestedHitReact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageType", "GetDefaultHitReaction");

	Params::UQtnDamageType_GetDefaultHitReaction_Params Parms{};

	Parms.ActorToDamage = ActorToDamage;
	Parms.IncomingDamageInfo = IncomingDamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SuggestedHitReact != nullptr)
		*SuggestedHitReact = std::move(Parms.SuggestedHitReact);

}


// Function QtnGame.QtnDamageType.GetDamageArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnDamageType>  DamageClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDamageType*              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDamageType* UQtnDamageType::GetDamageArchetype(TSubclassOf<class UQtnDamageType> DamageClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageType", "GetDamageArchetype");

	Params::UQtnDamageType_GetDamageArchetype_Params Parms{};

	Parms.DamageClass = DamageClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDamageType.ApplyIncomingDamage
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AActor*                      ActorToDamage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              IncomingDamageInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              OutgoingDamageInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         SuggestedHitReact                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UQtnDamageType::ApplyIncomingDamage(class AActor* ActorToDamage, struct FQtnDamageInfo& IncomingDamageInfo, struct FQtnDamageInfo* OutgoingDamageInfo, struct FQtnHitReactionInfo* SuggestedHitReact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageType", "ApplyIncomingDamage");

	Params::UQtnDamageType_ApplyIncomingDamage_Params Parms{};

	Parms.ActorToDamage = ActorToDamage;
	Parms.IncomingDamageInfo = IncomingDamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutgoingDamageInfo != nullptr)
		*OutgoingDamageInfo = std::move(Parms.OutgoingDamageInfo);

	if (SuggestedHitReact != nullptr)
		*SuggestedHitReact = std::move(Parms.SuggestedHitReact);

}


// Function QtnGame.QtnDamageType.ApplyIncomingAttributeEffects
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class AActor*                      ActorToDamage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              IncomingDamageInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              OutgoingDamageInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDamageType::ApplyIncomingAttributeEffects(class AActor* ActorToDamage, struct FQtnDamageInfo& IncomingDamageInfo, struct FQtnDamageInfo* OutgoingDamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDamageType", "ApplyIncomingAttributeEffects");

	Params::UQtnDamageType_ApplyIncomingAttributeEffects_Params Parms{};

	Parms.ActorToDamage = ActorToDamage;
	Parms.IncomingDamageInfo = IncomingDamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutgoingDamageInfo != nullptr)
		*OutgoingDamageInfo = std::move(Parms.OutgoingDamageInfo);

}


// Class QtnGame.QtnDangerManager
// (None)

class UClass* UQtnDangerManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDangerManager");

	return Clss;
}


// QtnDangerManager QtnGame.Default__QtnDangerManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDangerManager* UQtnDangerManager::GetDefaultObj()
{
	static class UQtnDangerManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDangerManager*>(UQtnDangerManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDangerManager.SpawnDangerSphere_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             Radii                                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              LifeSpan                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDangerParameters        DangerParameters                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AQtnDangerVolume*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnDangerVolume* UQtnDangerManager::SpawnDangerSphere_ServerOnly(class AQtnPawn* Culprit, struct FVector& Origin, struct FQtnRangedFloat& Radii, float LifeSpan, const struct FQtnDangerParameters& DangerParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDangerManager", "SpawnDangerSphere_ServerOnly");

	Params::UQtnDangerManager_SpawnDangerSphere_ServerOnly_Params Parms{};

	Parms.Culprit = Culprit;
	Parms.Origin = Origin;
	Parms.Radii = Radii;
	Parms.LifeSpan = LifeSpan;
	Parms.DangerParameters = DangerParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDangerManager.SpawnDangerCapsule_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             Radii                                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              LifeSpan                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDangerParameters        DangerParameters                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AQtnDangerVolume*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnDangerVolume* UQtnDangerManager::SpawnDangerCapsule_ServerOnly(class AQtnPawn* Culprit, struct FVector& Start, struct FVector& End, struct FQtnRangedFloat& Radii, float LifeSpan, const struct FQtnDangerParameters& DangerParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDangerManager", "SpawnDangerCapsule_ServerOnly");

	Params::UQtnDangerManager_SpawnDangerCapsule_ServerOnly_Params Parms{};

	Parms.Culprit = Culprit;
	Parms.Start = Start;
	Parms.End = End;
	Parms.Radii = Radii;
	Parms.LifeSpan = LifeSpan;
	Parms.DangerParameters = DangerParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnDangerVolume
// (Actor)

class UClass* AQtnDangerVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDangerVolume");

	return Clss;
}


// QtnDangerVolume QtnGame.Default__QtnDangerVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnDangerVolume* AQtnDangerVolume::GetDefaultObj()
{
	static class AQtnDangerVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnDangerVolume*>(AQtnDangerVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDangerVolume.UpdateSphere_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Origin                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             Radii                                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnDangerVolume::UpdateSphere_ServerOnly(struct FVector& Origin, struct FQtnRangedFloat& Radii)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDangerVolume", "UpdateSphere_ServerOnly");

	Params::AQtnDangerVolume_UpdateSphere_ServerOnly_Params Parms{};

	Parms.Origin = Origin;
	Parms.Radii = Radii;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDangerVolume.UpdateCapsule_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             Radii                                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnDangerVolume::UpdateCapsule_ServerOnly(struct FVector& Start, struct FVector& End, struct FQtnRangedFloat& Radii)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDangerVolume", "UpdateCapsule_ServerOnly");

	Params::AQtnDangerVolume_UpdateCapsule_ServerOnly_Params Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.Radii = Radii;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDangerVolume.SetDangerParameters_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FQtnDangerParameters        DangerParameters                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnDangerVolume::SetDangerParameters_ServerOnly(const struct FQtnDangerParameters& DangerParameters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDangerVolume", "SetDangerParameters_ServerOnly");

	Params::AQtnDangerVolume_SetDangerParameters_ServerOnly_Params Parms{};

	Parms.DangerParameters = DangerParameters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDebugDisplayComponent
// (None)

class UClass* UQtnDebugDisplayComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDebugDisplayComponent");

	return Clss;
}


// QtnDebugDisplayComponent QtnGame.Default__QtnDebugDisplayComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDebugDisplayComponent* UQtnDebugDisplayComponent::GetDefaultObj()
{
	static class UQtnDebugDisplayComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDebugDisplayComponent*>(UQtnDebugDisplayComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDebugDisplayComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugDisplayComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugDisplayComponent", "OnDebugDisplay");

	Params::UQtnDebugDisplayComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnDebugInterface
// (None)

class UClass* IQtnDebugInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDebugInterface");

	return Clss;
}


// QtnDebugInterface QtnGame.Default__QtnDebugInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnDebugInterface* IQtnDebugInterface::GetDefaultObj()
{
	static class IQtnDebugInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnDebugInterface*>(IQtnDebugInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnScreen
// (None)

class UClass* UQtnScreen::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScreen");

	return Clss;
}


// QtnScreen QtnGame.Default__QtnScreen
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScreen* UQtnScreen::GetDefaultObj()
{
	static class UQtnScreen* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScreen*>(UQtnScreen::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScreen.UpdateVirtualCursorForScreen
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:

void UQtnScreen::UpdateVirtualCursorForScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "UpdateVirtualCursorForScreen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.UnRegisterUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     UserWidgetClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::UnRegisterUserWidget(TSubclassOf<class UUserWidget> UserWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "UnRegisterUserWidget");

	Params::UQtnScreen_UnRegisterUserWidget_Params Parms{};

	Parms.UserWidgetClass = UserWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.UnRegisterSubScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::UnRegisterSubScreen(TSubclassOf<class UQtnScreen> ScreenClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "UnRegisterSubScreen");

	Params::UQtnScreen_UnRegisterSubScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.ToggleUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     UserWidgetClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnScreen::ToggleUserWidget(TSubclassOf<class UUserWidget> UserWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "ToggleUserWidget");

	Params::UQtnScreen_ToggleUserWidget_Params Parms{};

	Parms.UserWidgetClass = UserWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.ToggleScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnScreen::ToggleScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "ToggleScreen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.ToggleAllUserWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               SubScreensToo                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::ToggleAllUserWidgets(bool SubScreensToo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "ToggleAllUserWidgets");

	Params::UQtnScreen_ToggleAllUserWidgets_Params Parms{};

	Parms.SubScreensToo = SubScreensToo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.ShowUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     UserWidgetClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnScreen::ShowUserWidget(TSubclassOf<class UUserWidget> UserWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "ShowUserWidget");

	Params::UQtnScreen_ShowUserWidget_Params Parms{};

	Parms.UserWidgetClass = UserWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.ShowScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnScreen::ShowScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "ShowScreen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.ShowAllUserWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               SubScreensToo                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::ShowAllUserWidgets(bool SubScreensToo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "ShowAllUserWidgets");

	Params::UQtnScreen_ShowAllUserWidgets_Params Parms{};

	Parms.SubScreensToo = SubScreensToo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.RegisterUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     UserWidgetClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnScreen::RegisterUserWidget(TSubclassOf<class UUserWidget> UserWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "RegisterUserWidget");

	Params::UQtnScreen_RegisterUserWidget_Params Parms{};

	Parms.UserWidgetClass = UserWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.RegisterSubScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* UQtnScreen::RegisterSubScreen(TSubclassOf<class UQtnScreen> ScreenClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "RegisterSubScreen");

	Params::UQtnScreen_RegisterSubScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.OnUIScroll
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              ScrollDelta                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FromStick                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIScroll(float ScrollDelta, bool FromStick)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIScroll");

	Params::UQtnScreen_OnUIScroll_Params Parms{};

	Parms.ScrollDelta = ScrollDelta;
	Parms.FromStick = FromStick;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUIScreenActionRepeat
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIScreenActionRepeat(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIScreenActionRepeat");

	Params::UQtnScreen_OnUIScreenActionRepeat_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUIScreenActionReleased
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIScreenActionReleased(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIScreenActionReleased");

	Params::UQtnScreen_OnUIScreenActionReleased_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUIScreenActionPressed
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIScreenActionPressed(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIScreenActionPressed");

	Params::UQtnScreen_OnUIScreenActionPressed_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUINumPad
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                              Number                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUINumPad(int32 Number)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUINumPad");

	Params::UQtnScreen_OnUINumPad_Params Parms{};

	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUIHotKey
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIHotKeyEnum        HotKey                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIHotKey(enum class EQtnUIHotKeyEnum HotKey)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIHotKey");

	Params::UQtnScreen_OnUIHotKey_Params Parms{};

	Parms.HotKey = HotKey;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUIBodyActionRepeat
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIBodyActionRepeat(enum class EQtnUIBodyActionEnum BodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIBodyActionRepeat");

	Params::UQtnScreen_OnUIBodyActionRepeat_Params Parms{};

	Parms.BodyAction = BodyAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUIBodyActionReleased
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIBodyActionReleased(enum class EQtnUIBodyActionEnum BodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIBodyActionReleased");

	Params::UQtnScreen_OnUIBodyActionReleased_Params Parms{};

	Parms.BodyAction = BodyAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnUIBodyActionPressed
// (Event, Protected, BlueprintEvent)
// Parameters:
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnUIBodyActionPressed(enum class EQtnUIBodyActionEnum BodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnUIBodyActionPressed");

	Params::UQtnScreen_OnUIBodyActionPressed_Params Parms{};

	Parms.BodyAction = BodyAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnScreenUnOccupied
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnScreenUnOccupied(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenUnOccupied");

	Params::UQtnScreen_OnScreenUnOccupied_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnScreenUnInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreen::OnScreenUnInitialized()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenUnInitialized");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreen.OnScreenUnHijack
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    HijackedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnScreenUnHijack(class AQtnPawn* HijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenUnHijack");

	Params::UQtnScreen_OnScreenUnHijack_Params Parms{};

	Parms.HijackedPawn = HijackedPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnScreenTicked
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnScreenTicked(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenTicked");

	Params::UQtnScreen_OnScreenTicked_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnScreenStopped
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreen::OnScreenStopped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenStopped");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreen.OnScreenStarted
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreen::OnScreenStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenStarted");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreen.OnScreenResumed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnScreen*                  PreviousScreen                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnScreenResumed(class UQtnScreen* PreviousScreen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenResumed");

	Params::UQtnScreen_OnScreenResumed_Params Parms{};

	Parms.PreviousScreen = PreviousScreen;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnScreenReadyForGameplay
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreen::OnScreenReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreen.OnScreenPaused
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreen::OnScreenPaused()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenPaused");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreen.OnScreenOccupied
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FirstTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnScreenOccupied(class AQtnBodyPawn* OccupiedBodyPawn, bool FirstTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenOccupied");

	Params::UQtnScreen_OnScreenOccupied_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.FirstTime = FirstTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnScreenInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreen::OnScreenInitialized()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenInitialized");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreen.OnScreenHijack
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    HijackedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnScreenHijack(class AQtnPawn* HijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnScreenHijack");

	Params::UQtnScreen_OnScreenHijack_Params Parms{};

	Parms.HijackedPawn = HijackedPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnInputUsageChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               IsUsingMouseAndKeyboard                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnInputUsageChange(bool IsUsingMouseAndKeyboard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnInputUsageChange");

	Params::UQtnScreen_OnInputUsageChange_Params Parms{};

	Parms.IsUsingMouseAndKeyboard = IsUsingMouseAndKeyboard;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "OnDebugDisplay");

	Params::UQtnScreen_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreen.IsUsingVisibleMouseCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnScreen::IsUsingVisibleMouseCursor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "IsUsingVisibleMouseCursor");

	Params::UQtnScreen_IsUsingVisibleMouseCursor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.IsUsingMouseAndKeyboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnScreen::IsUsingMouseAndKeyboard()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "IsUsingMouseAndKeyboard");

	Params::UQtnScreen_IsUsingMouseAndKeyboard_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.IsScreenActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnScreen::IsScreenActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "IsScreenActive");

	Params::UQtnScreen_IsScreenActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.IsScreenActionPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnScreen::IsScreenActionPressed(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "IsScreenActionPressed");

	Params::UQtnScreen_IsScreenActionPressed_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.IsReadyForGameplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnScreen::IsReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "IsReadyForGameplay");

	Params::UQtnScreen_IsReadyForGameplay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.HideUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     UserWidgetClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnScreen::HideUserWidget(TSubclassOf<class UUserWidget> UserWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "HideUserWidget");

	Params::UQtnScreen_HideUserWidget_Params Parms{};

	Parms.UserWidgetClass = UserWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.HideScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               UnRegister                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::HideScreen(bool UnRegister)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "HideScreen");

	Params::UQtnScreen_HideScreen_Params Parms{};

	Parms.UnRegister = UnRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.HideAllUserWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               SubScreensToo                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::HideAllUserWidgets(bool SubScreensToo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "HideAllUserWidgets");

	Params::UQtnScreen_HideAllUserWidgets_Params Parms{};

	Parms.SubScreensToo = SubScreensToo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreen.GetUseVirtualCursorOnGamepad
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnScreen::GetUseVirtualCursorOnGamepad()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetUseVirtualCursorOnGamepad");

	Params::UQtnScreen_GetUseVirtualCursorOnGamepad_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetUserWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UUserWidget>     UserWidgetClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnScreen::GetUserWidget(TSubclassOf<class UUserWidget> UserWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetUserWidget");

	Params::UQtnScreen_GetUserWidget_Params Parms{};

	Parms.UserWidgetClass = UserWidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetSubWidgetByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UUserWidget>     ParentUserWidgetClass                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        WidgetName                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UQtnScreen::GetSubWidgetByName(TSubclassOf<class UUserWidget> ParentUserWidgetClass, class FName& WidgetName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetSubWidgetByName");

	Params::UQtnScreen_GetSubWidgetByName_Params Parms{};

	Parms.ParentUserWidgetClass = ParentUserWidgetClass;
	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetSubScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckForInheritedClasses                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* UQtnScreen::GetSubScreen(TSubclassOf<class UQtnScreen> ScreenClass, bool CheckForInheritedClasses)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetSubScreen");

	Params::UQtnScreen_GetSubScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;
	Parms.CheckForInheritedClasses = CheckForInheritedClasses;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetScreenThatOwnsThisWidget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*                 UserWidget                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckSubScreens                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* UQtnScreen::GetScreenThatOwnsThisWidget(class UUserWidget* UserWidget, enum class EQtnScreenStackEnum ScreenStackIndex, bool CheckSubScreens)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetScreenThatOwnsThisWidget");

	Params::UQtnScreen_GetScreenThatOwnsThisWidget_Params Parms{};

	Parms.UserWidget = UserWidget;
	Parms.ScreenStackIndex = ScreenStackIndex;
	Parms.CheckSubScreens = CheckSubScreens;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetScreenState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnScreenState         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnScreenState UQtnScreen::GetScreenState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetScreenState");

	Params::UQtnScreen_GetScreenState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetScreenStackIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnScreenStackEnum     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnScreenStackEnum UQtnScreen::GetScreenStackIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetScreenStackIndex");

	Params::UQtnScreen_GetScreenStackIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetRightStickInput
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreen::GetRightStickInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetRightStickInput");

	Params::UQtnScreen_GetRightStickInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetParentScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* UQtnScreen::GetParentScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetParentScreen");

	Params::UQtnScreen_GetParentScreen_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetOwningPlayerUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerUI*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerUI* UQtnScreen::GetOwningPlayerUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetOwningPlayerUI");

	Params::UQtnScreen_GetOwningPlayerUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetOwningPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* UQtnScreen::GetOwningPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetOwningPlayerState");

	Params::UQtnScreen_GetOwningPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetOwningPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* UQtnScreen::GetOwningPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetOwningPlayerPawn");

	Params::UQtnScreen_GetOwningPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetOwningPlayerInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerController*        PlayerController                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                PlayerUI                                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerState*             QtnPlayerState                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHosting                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreen::GetOwningPlayerInfo(class AQtnBodyPawn** OccupiedBodyPawn, class AQtnPlayerPawn** PlayerPawn, class AQtnPlayerController** PlayerController, class AQtnPlayerUI** PlayerUI, class AQtnPlayerState** QtnPlayerState, bool* IsHosting)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetOwningPlayerInfo");

	Params::UQtnScreen_GetOwningPlayerInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OccupiedBodyPawn != nullptr)
		*OccupiedBodyPawn = Parms.OccupiedBodyPawn;

	if (PlayerPawn != nullptr)
		*PlayerPawn = Parms.PlayerPawn;

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;

	if (PlayerUI != nullptr)
		*PlayerUI = Parms.PlayerUI;

	if (QtnPlayerState != nullptr)
		*QtnPlayerState = Parms.QtnPlayerState;

	if (IsHosting != nullptr)
		*IsHosting = Parms.IsHosting;

}


// Function QtnGame.QtnScreen.GetOwningPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* UQtnScreen::GetOwningPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetOwningPlayerController");

	Params::UQtnScreen_GetOwningPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetOccupiedBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnScreen::GetOccupiedBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetOccupiedBodyPawn");

	Params::UQtnScreen_GetOccupiedBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetMousePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreen::GetMousePosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetMousePosition");

	Params::UQtnScreen_GetMousePosition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetMouseDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreen::GetMouseDelta()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetMouseDelta");

	Params::UQtnScreen_GetMouseDelta_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetMainWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnScreen::GetMainWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetMainWidget");

	Params::UQtnScreen_GetMainWidget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetLeftStickInput
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreen::GetLeftStickInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetLeftStickInput");

	Params::UQtnScreen_GetLeftStickInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetCursorPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreen::GetCursorPosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetCursorPosition");

	Params::UQtnScreen_GetCursorPosition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetCursorDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreen::GetCursorDelta()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetCursorDelta");

	Params::UQtnScreen_GetCursorDelta_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetCurrentlyControlledPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnScreen::GetCurrentlyControlledPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetCurrentlyControlledPawn");

	Params::UQtnScreen_GetCurrentlyControlledPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreen.GetCurrentlyControlledBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnScreen::GetCurrentlyControlledBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreen", "GetCurrentlyControlledBody");

	Params::UQtnScreen_GetCurrentlyControlledBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnDebugScreen
// (None)

class UClass* UQtnDebugScreen::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDebugScreen");

	return Clss;
}


// QtnDebugScreen QtnGame.Default__QtnDebugScreen
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDebugScreen* UQtnDebugScreen::GetDefaultObj()
{
	static class UQtnDebugScreen* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDebugScreen*>(UQtnDebugScreen::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDebugScreen.RemoveDebugElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     TargetObject                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugScreen::RemoveDebugElement(class UObject* TargetObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugScreen", "RemoveDebugElement");

	Params::UQtnDebugScreen_RemoveDebugElement_Params Parms{};

	Parms.TargetObject = TargetObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugScreen.ClearDebugElements
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDebugScreen::ClearDebugElements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugScreen", "ClearDebugElements");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugScreen.AddDebugElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     TargetObject                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugScreen::AddDebugElement(class UObject* TargetObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugScreen", "AddDebugElement");

	Params::UQtnDebugScreen_AddDebugElement_Params Parms{};

	Parms.TargetObject = TargetObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDebugWrapper
// (None)

class UClass* UQtnDebugWrapper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDebugWrapper");

	return Clss;
}


// QtnDebugWrapper QtnGame.Default__QtnDebugWrapper
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDebugWrapper* UQtnDebugWrapper::GetDefaultObj()
{
	static class UQtnDebugWrapper* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDebugWrapper*>(UQtnDebugWrapper::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDebugWrapper.WriteLineWithColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                      DebugLine                                                        (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                DebugColor                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::WriteLineWithColor(const class FString& DebugLine, const struct FLinearColor& DebugColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "WriteLineWithColor");

	Params::UQtnDebugWrapper_WriteLineWithColor_Params Parms{};

	Parms.DebugLine = DebugLine;
	Parms.DebugColor = DebugColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.WriteLine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      DebugLine                                                        (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::WriteLine(const class FString& DebugLine)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "WriteLine");

	Params::UQtnDebugWrapper_WriteLine_Params Parms{};

	Parms.DebugLine = DebugLine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.UnIndent
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDebugWrapper::UnIndent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "UnIndent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.PushColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                      DrawColor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::PushColor(const struct FColor& DrawColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "PushColor");

	Params::UQtnDebugWrapper_PushColor_Params Parms{};

	Parms.DrawColor = DrawColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.PopColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDebugWrapper::PopColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "PopColor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.IsDisplayOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        DisplayName                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDebugWrapper::IsDisplayOn(class FName DisplayName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "IsDisplayOn");

	Params::UQtnDebugWrapper_IsDisplayOn_Params Parms{};

	Parms.DisplayName = DisplayName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDebugWrapper.Indent
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDebugWrapper::Indent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "Indent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.GetTextSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                      Label                                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   TextSize                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   TextScale                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::GetTextSize(const class FString& Label, struct FVector2D* TextSize, const struct FVector2D& TextScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "GetTextSize");

	Params::UQtnDebugWrapper_GetTextSize_Params Parms{};

	Parms.Label = Label;
	Parms.TextScale = TextScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TextSize != nullptr)
		*TextSize = std::move(Parms.TextSize);

}


// Function QtnGame.QtnDebugWrapper.ForceNewColumn
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDebugWrapper::ForceNewColumn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "ForceNewColumn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawVerticalGauge
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                      Label                                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     WorldOrigin                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   GaugeSize                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FillRatio                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                      Notches                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FLinearColor                GaugeColor                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawVerticalGauge(const class FString& Label, struct FVector& WorldOrigin, const struct FVector2D& GaugeSize, float FillRatio, TArray<float>& Notches, const struct FLinearColor& GaugeColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawVerticalGauge");

	Params::UQtnDebugWrapper_DrawVerticalGauge_Params Parms{};

	Parms.Label = Label;
	Parms.WorldOrigin = WorldOrigin;
	Parms.GaugeSize = GaugeSize;
	Parms.FillRatio = FillRatio;
	Parms.Notches = Notches;
	Parms.GaugeColor = GaugeColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawTextInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     WorldLocation                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Label                                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawTextInWorld(struct FVector& WorldLocation, const class FString& Label)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawTextInWorld");

	Params::UQtnDebugWrapper_DrawTextInWorld_Params Parms{};

	Parms.WorldLocation = WorldLocation;
	Parms.Label = Label;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawTextAtScreenLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                   ScreenLocation                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Label                                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   TextScale                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawTextAtScreenLocation(const struct FVector2D& ScreenLocation, const class FString& Label, const struct FVector2D& TextScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawTextAtScreenLocation");

	Params::UQtnDebugWrapper_DrawTextAtScreenLocation_Params Parms{};

	Parms.ScreenLocation = ScreenLocation;
	Parms.Label = Label;
	Parms.TextScale = TextScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawSphereInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Center                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawSphereInWorld(struct FVector& Center, float Radius, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawSphereInWorld");

	Params::UQtnDebugWrapper_DrawSphereInWorld_Params Parms{};

	Parms.Center = Center;
	Parms.Radius = Radius;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawPointInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Position                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Size                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawPointInWorld(struct FVector& Position, float Size, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawPointInWorld");

	Params::UQtnDebugWrapper_DrawPointInWorld_Params Parms{};

	Parms.Position = Position;
	Parms.Size = Size;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawMeshSocketsInWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*              PMeshComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Size                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawMeshSocketsInWorld(class UMeshComponent* PMeshComponent, float Size, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawMeshSocketsInWorld");

	Params::UQtnDebugWrapper_DrawMeshSocketsInWorld_Params Parms{};

	Parms.PMeshComponent = PMeshComponent;
	Parms.Size = Size;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawLineInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawLineInWorld(struct FVector& Start, struct FVector& End, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawLineInWorld");

	Params::UQtnDebugWrapper_DrawLineInWorld_Params Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawCylinderInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     StartLocation                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndLocation                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawCylinderInWorld(struct FVector& StartLocation, struct FVector& EndLocation, float Radius, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawCylinderInWorld");

	Params::UQtnDebugWrapper_DrawCylinderInWorld_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.EndLocation = EndLocation;
	Parms.Radius = Radius;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawCapsuleInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Center                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfHeight                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                       Rotation                                                         (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawCapsuleInWorld(struct FVector& Center, float HalfHeight, float Radius, const struct FQuat& Rotation, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawCapsuleInWorld");

	Params::UQtnDebugWrapper_DrawCapsuleInWorld_Params Parms{};

	Parms.Center = Center;
	Parms.HalfHeight = HalfHeight;
	Parms.Radius = Radius;
	Parms.Rotation = Rotation;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawBoxInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Center                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Extent                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuat                       Rotation                                                         (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               Solid                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawBoxInWorld(struct FVector& Center, const struct FVector& Extent, const struct FQuat& Rotation, bool Solid, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawBoxInWorld");

	Params::UQtnDebugWrapper_DrawBoxInWorld_Params Parms{};

	Parms.Center = Center;
	Parms.Extent = Extent;
	Parms.Rotation = Rotation;
	Parms.Solid = Solid;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.DrawArrowInWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     WorldOrigin                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     WorldDestination                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeTime                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::DrawArrowInWorld(struct FVector& WorldOrigin, struct FVector& WorldDestination, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "DrawArrowInWorld");

	Params::UQtnDebugWrapper_DrawArrowInWorld_Params Parms{};

	Parms.WorldOrigin = WorldOrigin;
	Parms.WorldDestination = WorldDestination;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDebugWrapper.ConvertWorldToScreen
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     WorldLocation                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ScreenPosition                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsBehind                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::ConvertWorldToScreen(struct FVector& WorldLocation, struct FVector2D* ScreenPosition, bool* IsBehind)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "ConvertWorldToScreen");

	Params::UQtnDebugWrapper_ConvertWorldToScreen_Params Parms{};

	Parms.WorldLocation = WorldLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ScreenPosition != nullptr)
		*ScreenPosition = std::move(Parms.ScreenPosition);

	if (IsBehind != nullptr)
		*IsBehind = Parms.IsBehind;

}


// Function QtnGame.QtnDebugWrapper.ConvertScreenToWorld
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ScreenPosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     WorldLocation                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     WorldDirection                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::ConvertScreenToWorld(struct FVector2D& ScreenPosition, struct FVector* WorldLocation, struct FVector* WorldDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "ConvertScreenToWorld");

	Params::UQtnDebugWrapper_ConvertScreenToWorld_Params Parms{};

	Parms.ScreenPosition = ScreenPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (WorldLocation != nullptr)
		*WorldLocation = std::move(Parms.WorldLocation);

	if (WorldDirection != nullptr)
		*WorldDirection = std::move(Parms.WorldDirection);

}


// Function QtnGame.QtnDebugWrapper.AppendPrefixToNextWriteLine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      PrefixToAppend                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDebugWrapper::AppendPrefixToNextWriteLine(const class FString& PrefixToAppend)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDebugWrapper", "AppendPrefixToNextWriteLine");

	Params::UQtnDebugWrapper_AppendPrefixToNextWriteLine_Params Parms{};

	Parms.PrefixToAppend = PrefixToAppend;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDecalComponent
// (SceneComponent)

class UClass* UQtnDecalComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDecalComponent");

	return Clss;
}


// QtnDecalComponent QtnGame.Default__QtnDecalComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDecalComponent* UQtnDecalComponent::GetDefaultObj()
{
	static class UQtnDecalComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDecalComponent*>(UQtnDecalComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDestroyPartySessionCallbackProxy
// (None)

class UClass* UQtnDestroyPartySessionCallbackProxy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDestroyPartySessionCallbackProxy");

	return Clss;
}


// QtnDestroyPartySessionCallbackProxy QtnGame.Default__QtnDestroyPartySessionCallbackProxy
// (Public, ClassDefaultObject, ArchetypeObject, StrongRefOnFrame)

class UQtnDestroyPartySessionCallbackProxy* UQtnDestroyPartySessionCallbackProxy::GetDefaultObj()
{
	static class UQtnDestroyPartySessionCallbackProxy* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDestroyPartySessionCallbackProxy*>(UQtnDestroyPartySessionCallbackProxy::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDestroyPartySessionCallbackProxy.QtnDestroyPartySession
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*           PlayerController                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDestroyPartySessionCallbackProxy*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDestroyPartySessionCallbackProxy* UQtnDestroyPartySessionCallbackProxy::QtnDestroyPartySession(class UObject* WorldContextObject, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDestroyPartySessionCallbackProxy", "QtnDestroyPartySession");

	Params::UQtnDestroyPartySessionCallbackProxy_QtnDestroyPartySession_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnDevCheatsComponent
// (None)

class UClass* UQtnDevCheatsComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDevCheatsComponent");

	return Clss;
}


// QtnDevCheatsComponent QtnGame.Default__QtnDevCheatsComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDevCheatsComponent* UQtnDevCheatsComponent::GetDefaultObj()
{
	static class UQtnDevCheatsComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDevCheatsComponent*>(UQtnDevCheatsComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDevCheatsComponent.ServerUploadTelemetryLog
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerUploadTelemetryLog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerUploadTelemetryLog");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerUpdateDebuggingAI
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               IsDebuggingAI                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerUpdateDebuggingAI(bool IsDebuggingAI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerUpdateDebuggingAI");

	Params::UQtnDevCheatsComponent_ServerUpdateDebuggingAI_Params Parms{};

	Parms.IsDebuggingAI = IsDebuggingAI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerToggleTelemetryCheatProtection
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerToggleTelemetryCheatProtection()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerToggleTelemetryCheatProtection");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerStopTelemetry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerStopTelemetry()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerStopTelemetry");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerStartTelemetry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerStartTelemetry()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerStartTelemetry");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerSetEnemyCheat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnBodyPawn*                PTargetBodyPawn                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnVerb>        VerbClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerSetEnemyCheat(class AQtnBodyPawn* PTargetBodyPawn, TSubclassOf<class UQtnVerb> VerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerSetEnemyCheat");

	Params::UQtnDevCheatsComponent_ServerSetEnemyCheat_Params Parms{};

	Parms.PTargetBodyPawn = PTargetBodyPawn;
	Parms.VerbClass = VerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerSendCheatMsg
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FString                      CheatMsg                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerSendCheatMsg(class FString& CheatMsg)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerSendCheatMsg");

	Params::UQtnDevCheatsComponent_ServerSendCheatMsg_Params Parms{};

	Parms.CheatMsg = CheatMsg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerResurrect
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnPawn*                    PTargetPawn                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerResurrect(class AQtnPawn* PTargetPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerResurrect");

	Params::UQtnDevCheatsComponent_ServerResurrect_Params Parms{};

	Parms.PTargetPawn = PTargetPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnUnsetSpeakerTypeOverride
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AActor*                      PSpeaker                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnUnsetSpeakerTypeOverride(class AActor* PSpeaker)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnUnsetSpeakerTypeOverride");

	Params::UQtnDevCheatsComponent_ServerQtnUnsetSpeakerTypeOverride_Params Parms{};

	Parms.PSpeaker = PSpeaker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnToggleSuppression
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnPawn*                    PTargetedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnToggleSuppression(class AQtnPawn* PTargetedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnToggleSuppression");

	Params::UQtnDevCheatsComponent_ServerQtnToggleSuppression_Params Parms{};

	Parms.PTargetedPawn = PTargetedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnToggleCombatInhibitor
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnToggleCombatInhibitor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnToggleCombatInhibitor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnToggleBossThreat
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnToggleBossThreat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnToggleBossThreat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnToggleAllyBots
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnToggleAllyBots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnToggleAllyBots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnToggleAIJobs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnToggleAIJobs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnToggleAIJobs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnToggleAICognition
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnToggleAICognition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnToggleAICognition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnTimeScaleHalf
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnTimeScaleHalf()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnTimeScaleHalf");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnTimeScaleDouble
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnTimeScaleDouble()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnTimeScaleDouble");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnTimeResume
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnTimeResume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnTimeResume");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSwitchTeams
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnPawn*                    PTargetedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSwitchTeams(class AQtnPawn* PTargetedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSwitchTeams");

	Params::UQtnDevCheatsComponent_ServerQtnSwitchTeams_Params Parms{};

	Parms.PTargetedPawn = PTargetedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSummonTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      PTargetedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSummonTarget(class AActor* PTargetedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSummonTarget");

	Params::UQtnDevCheatsComponent_ServerQtnSummonTarget_Params Parms{};

	Parms.PTargetedActor = PTargetedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSummonAllPlayers
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnSummonAllPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSummonAllPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSubtractFitcoin
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnBodyPawn*                TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuantityToSubtract                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSubtractFitcoin(class AQtnBodyPawn* TargetPawn, int32 QuantityToSubtract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSubtractFitcoin");

	Params::UQtnDevCheatsComponent_ServerQtnSubtractFitcoin_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.QuantityToSubtract = QuantityToSubtract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSubtractDarkMatter
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnBodyPawn*                TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuantityToSubtract                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSubtractDarkMatter(class AQtnBodyPawn* TargetPawn, int32 QuantityToSubtract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSubtractDarkMatter");

	Params::UQtnDevCheatsComponent_ServerQtnSubtractDarkMatter_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.QuantityToSubtract = QuantityToSubtract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnStepMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnStepMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnStepMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSpawnNPCCommon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TSubclassOf<class AQtnBodyPawn>    BodyClassToSpawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumToSpawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSpawnNPCCommon(TSubclassOf<class AQtnBodyPawn> BodyClassToSpawn, int32 NumToSpawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSpawnNPCCommon");

	Params::UQtnDevCheatsComponent_ServerQtnSpawnNPCCommon_Params Parms{};

	Parms.BodyClassToSpawn = BodyClassToSpawn;
	Parms.NumToSpawn = NumToSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSpawnDangerSphere
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSpawnDangerSphere(float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSpawnDangerSphere");

	Params::UQtnDevCheatsComponent_ServerQtnSpawnDangerSphere_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSpawnDangerCapsule
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                              Length                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSpawnDangerCapsule(float Length, float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSpawnDangerCapsule");

	Params::UQtnDevCheatsComponent_ServerQtnSpawnDangerCapsule_Params Parms{};

	Parms.Length = Length;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSlapTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      PSlapVictim                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DamageAmount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSlapTarget(class AActor* PSlapVictim, int32 DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSlapTarget");

	Params::UQtnDevCheatsComponent_ServerQtnSlapTarget_Params Parms{};

	Parms.PSlapVictim = PSlapVictim;
	Parms.DamageAmount = DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSetWalkSpeed
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnPawn*                    PTargetedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              WalkSpeed                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSetWalkSpeed(class AQtnPawn* PTargetedPawn, float WalkSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSetWalkSpeed");

	Params::UQtnDevCheatsComponent_ServerQtnSetWalkSpeed_Params Parms{};

	Parms.PTargetedPawn = PTargetedPawn;
	Parms.WalkSpeed = WalkSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSetTimeScale
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                              TimeScale                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSetTimeScale(float TimeScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSetTimeScale");

	Params::UQtnDevCheatsComponent_ServerQtnSetTimeScale_Params Parms{};

	Parms.TimeScale = TimeScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSetTargetScale
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      PTargetedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TargetScale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSetTargetScale(class AActor* PTargetedActor, float TargetScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSetTargetScale");

	Params::UQtnDevCheatsComponent_ServerQtnSetTargetScale_Params Parms{};

	Parms.PTargetedActor = PTargetedActor;
	Parms.TargetScale = TargetScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSetSpeakerTypeOverride
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AActor*                      PSpeaker                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                SpeakerType                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSetSpeakerTypeOverride(class AActor* PSpeaker, const struct FGameplayTag& SpeakerType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSetSpeakerTypeOverride");

	Params::UQtnDevCheatsComponent_ServerQtnSetSpeakerTypeOverride_Params Parms{};

	Parms.PSpeaker = PSpeaker;
	Parms.SpeakerType = SpeakerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSetOnFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      PVictim                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSetOnFire(class AActor* PVictim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSetOnFire");

	Params::UQtnDevCheatsComponent_ServerQtnSetOnFire_Params Parms{};

	Parms.PVictim = PVictim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSetHoverHeight
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnPawn*                    PTargetedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HoverHeight                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSetHoverHeight(class AQtnPawn* PTargetedPawn, float HoverHeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSetHoverHeight");

	Params::UQtnDevCheatsComponent_ServerQtnSetHoverHeight_Params Parms{};

	Parms.PTargetedPawn = PTargetedPawn;
	Parms.HoverHeight = HoverHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnSeamlessTravel
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FName                        MapName                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnSeamlessTravel(class FName MapName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnSeamlessTravel");

	Params::UQtnDevCheatsComponent_ServerQtnSeamlessTravel_Params Parms{};

	Parms.MapName = MapName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnRunProgress_Reset
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnRunProgress_Reset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnRunProgress_Reset");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnRunProgress_ReadyForGameplay
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnRunProgress_ReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnRunProgress_ReadyForGameplay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnRunProgress_EnterWorld
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnRunProgress_EnterWorld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnRunProgress_EnterWorld");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnRunProgress_Checkpoint
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnRunProgress_Checkpoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnRunProgress_Checkpoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnRequestVerb
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnPawn*                    PTargetedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              VerbIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnRequestVerb(class AQtnPawn* PTargetedPawn, int32 VerbIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnRequestVerb");

	Params::UQtnDevCheatsComponent_ServerQtnRequestVerb_Params Parms{};

	Parms.PTargetedPawn = PTargetedPawn;
	Parms.VerbIndex = VerbIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnPlaySound
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class USoundBase*                  SoundAsset                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnPlaySound(class USoundBase* SoundAsset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnPlaySound");

	Params::UQtnDevCheatsComponent_ServerQtnPlaySound_Params Parms{};

	Parms.SoundAsset = SoundAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnPlayScriptedVOWithCallout
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FGameplayTag                ScriptedIdGameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PScriptedVOSpeaker                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnPlayScriptedVOWithCallout(const struct FGameplayTag& ScriptedIdGameplayTag, class AActor* PScriptedVOSpeaker, bool PreferToPlayOnBody, int32 PrescribedVariant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnPlayScriptedVOWithCallout");

	Params::UQtnDevCheatsComponent_ServerQtnPlayScriptedVOWithCallout_Params Parms{};

	Parms.ScriptedIdGameplayTag = ScriptedIdGameplayTag;
	Parms.PScriptedVOSpeaker = PScriptedVOSpeaker;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnPlayScriptedVO
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FGameplayTag                ScriptedIdGameplayTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PScriptedVOSpeaker                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnPlayScriptedVO(const struct FGameplayTag& ScriptedIdGameplayTag, class AActor* PScriptedVOSpeaker, bool PreferToPlayOnBody, int32 PrescribedVariant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnPlayScriptedVO");

	Params::UQtnDevCheatsComponent_ServerQtnPlayScriptedVO_Params Parms{};

	Parms.ScriptedIdGameplayTag = ScriptedIdGameplayTag;
	Parms.PScriptedVOSpeaker = PScriptedVOSpeaker;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnPlayersOnly
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnPlayersOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnPlayersOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnPlantNPCs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnPlantNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnPlantNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnNukeNPCs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnNukeNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnNukeNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnMarkAllNPCsForCleanup
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnMarkAllNPCsForCleanup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnMarkAllNPCsForCleanup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnLaunch
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AQtnPawn*                    Victim                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     LaunchForce                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnLaunch(class AQtnPawn* Victim, const struct FVector& LaunchForce)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnLaunch");

	Params::UQtnDevCheatsComponent_ServerQtnLaunch_Params Parms{};

	Parms.Victim = Victim;
	Parms.LaunchForce = LaunchForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnKnockback
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnPawn*                    Victim                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HorizontalDistance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ApexHeight                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnKnockback(class AQtnPawn* Victim, float HorizontalDistance, float ApexHeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnKnockback");

	Params::UQtnDevCheatsComponent_ServerQtnKnockback_Params Parms{};

	Parms.Victim = Victim;
	Parms.HorizontalDistance = HorizontalDistance;
	Parms.ApexHeight = ApexHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnGodPlayers
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnGodPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnGodPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnGodNPCs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnGodNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnGodNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnGetOverHere
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnBodyPawn*                PTargetBody                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnGetOverHere(class AQtnBodyPawn* PTargetBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnGetOverHere");

	Params::UQtnDevCheatsComponent_ServerQtnGetOverHere_Params Parms{};

	Parms.PTargetBody = PTargetBody;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnFart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              DamageAmount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnFart(int32 DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnFart");

	Params::UQtnDevCheatsComponent_ServerQtnFart_Params Parms{};

	Parms.DamageAmount = DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnDestroyNPCs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<class AQtnBodyPawn*>        OffScreenNPCs                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnDestroyNPCs(TArray<class AQtnBodyPawn*>& OffScreenNPCs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnDestroyNPCs");

	Params::UQtnDevCheatsComponent_ServerQtnDestroyNPCs_Params Parms{};

	Parms.OffScreenNPCs = OffScreenNPCs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnDestroyAllPawnsMarkedForCleanup
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnDestroyAllPawnsMarkedForCleanup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnDestroyAllPawnsMarkedForCleanup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnDestroyAllNPCs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnDestroyAllNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnDestroyAllNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnDestroyAllDeadPawns
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnDestroyAllDeadPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnDestroyAllDeadPawns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnDestroyActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      PActor                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnDestroyActor(class AActor* PActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnDestroyActor");

	Params::UQtnDevCheatsComponent_ServerQtnDestroyActor_Params Parms{};

	Parms.PActor = PActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnDance
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnBodyPawn*                PVictim                                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnDance(class AQtnBodyPawn* PVictim, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnDance");

	Params::UQtnDevCheatsComponent_ServerQtnDance_Params Parms{};

	Parms.PVictim = PVictim;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnBuddhaPlayers
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnBuddhaPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnBuddhaPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnBuddhaNPCs
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnBuddhaNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnBuddhaNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnBoo
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnBoo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnBoo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAITimeDilation
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// float                              TimeDilation                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnAITimeDilation(float TimeDilation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAITimeDilation");

	Params::UQtnDevCheatsComponent_ServerQtnAITimeDilation_Params Parms{};

	Parms.TimeDilation = TimeDilation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAIPacifist
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnAIPacifist()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAIPacifist");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAINumb
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnAINumb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAINumb");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAINinjaMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnAINinjaMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAINinjaMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAIDeaf
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnAIDeaf()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAIDeaf");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAIBlind
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnDevCheatsComponent::ServerQtnAIBlind()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAIBlind");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAddToiletPaper
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnBodyPawn*                TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuantityToAdd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnAddToiletPaper(class AQtnBodyPawn* TargetPawn, int32 QuantityToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAddToiletPaper");

	Params::UQtnDevCheatsComponent_ServerQtnAddToiletPaper_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.QuantityToAdd = QuantityToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAddFitcoin
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnBodyPawn*                TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuantityToAdd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnAddFitcoin(class AQtnBodyPawn* TargetPawn, int32 QuantityToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAddFitcoin");

	Params::UQtnDevCheatsComponent_ServerQtnAddFitcoin_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.QuantityToAdd = QuantityToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAddEnemyUpgrade
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FName                        UpgradeIdentity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnAddEnemyUpgrade(class FName UpgradeIdentity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAddEnemyUpgrade");

	Params::UQtnDevCheatsComponent_ServerQtnAddEnemyUpgrade_Params Parms{};

	Parms.UpgradeIdentity = UpgradeIdentity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerQtnAddDarkMatter
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AQtnBodyPawn*                TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuantityToAdd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerQtnAddDarkMatter(class AQtnBodyPawn* TargetPawn, int32 QuantityToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerQtnAddDarkMatter");

	Params::UQtnDevCheatsComponent_ServerQtnAddDarkMatter_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.QuantityToAdd = QuantityToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerPlaceFlag
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// struct FVector                     Location                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Message                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerPlaceFlag(struct FVector& Location, class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerPlaceFlag");

	Params::UQtnDevCheatsComponent_ServerPlaceFlag_Params Parms{};

	Parms.Location = Location;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerKillPawn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnPawn*                    PVictim                                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::ServerKillPawn(class AQtnPawn* PVictim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerKillPawn");

	Params::UQtnDevCheatsComponent_ServerKillPawn_Params Parms{};

	Parms.PVictim = PVictim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.ServerClearAllFlags
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnDevCheatsComponent::ServerClearAllFlags()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "ServerClearAllFlags");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnUnsetSpeakerTypeOverride
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnUnsetSpeakerTypeOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnUnsetSpeakerTypeOverride");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnUnlocks_UnlockAll
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnUnlocks_UnlockAll()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnUnlocks_UnlockAll");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnUnlocks_Unlock
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        UnlocksDataTableRowName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnUnlocks_Unlock(class FName UnlocksDataTableRowName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnUnlocks_Unlock");

	Params::UQtnDevCheatsComponent_QtnUnlocks_Unlock_Params Parms{};

	Parms.UnlocksDataTableRowName = UnlocksDataTableRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnUnlocks_Reset
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnUnlocks_Reset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnUnlocks_Reset");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleSuppression
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleSuppression()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleSuppression");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleRobovoice
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleRobovoice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleRobovoice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleOutline
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleOutline()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleOutline");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleNameplates
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleNameplates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleNameplates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleMotionBlur
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleMotionBlur()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleMotionBlur");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleLocalActiveCutscene
// (Final, Exec, Native, Public)
// Parameters:
// bool                               DoWorldCleanup                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnToggleLocalActiveCutscene(bool DoWorldCleanup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleLocalActiveCutscene");

	Params::UQtnDevCheatsComponent_QtnToggleLocalActiveCutscene_Params Parms{};

	Parms.DoWorldCleanup = DoWorldCleanup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleHijack
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleHijack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleHijack");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleGhost
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleGhost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleGhost");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleFootageCaptureMode
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleFootageCaptureMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleFootageCaptureMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleFly
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleFly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleFly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleDamageNumberSystem
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleDamageNumberSystem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleDamageNumberSystem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleCombatInhibitor
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleCombatInhibitor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleCombatInhibitor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleBossThreat
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleBossThreat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleBossThreat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleBodyVisibility
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleBodyVisibility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleBodyVisibility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleAllyBots
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleAllyBots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleAllyBots");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleAIJobs
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleAIJobs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleAIJobs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnToggleAICognition
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnToggleAICognition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnToggleAICognition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnTelemetry_ToggleCheatProtection
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnTelemetry_ToggleCheatProtection()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnTelemetry_ToggleCheatProtection");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnTelemetry_TakeLevelScreenshot
// (Final, Exec, Native, Public)
// Parameters:
// int32                              ImageSize                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              XMid                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              YMid                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Range                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnTelemetry_TakeLevelScreenshot(int32 ImageSize, float XMid, float YMid, float Range)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnTelemetry_TakeLevelScreenshot");

	Params::UQtnDevCheatsComponent_QtnTelemetry_TakeLevelScreenshot_Params Parms{};

	Parms.ImageSize = ImageSize;
	Parms.XMid = XMid;
	Parms.YMid = YMid;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnTelemetry_ServerUploadLog
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnTelemetry_ServerUploadLog()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnTelemetry_ServerUploadLog");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnTelemetry_ServerStop
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnTelemetry_ServerStop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnTelemetry_ServerStop");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnTelemetry_ServerStart
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnTelemetry_ServerStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnTelemetry_ServerStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSwitchTeams
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnSwitchTeams()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSwitchTeams");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSwitchMatchmakingMode
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnSwitchMatchmakingMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSwitchMatchmakingMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSummonTarget
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnSummonTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSummonTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSummonAllPlayers
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnSummonAllPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSummonAllPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSubtractFitcoin
// (Final, Exec, Native, Public)
// Parameters:
// int32                              QuantityToSubtract                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSubtractFitcoin(int32 QuantityToSubtract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSubtractFitcoin");

	Params::UQtnDevCheatsComponent_QtnSubtractFitcoin_Params Parms{};

	Parms.QuantityToSubtract = QuantityToSubtract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSubtractDarkMatter
// (Final, Exec, Native, Public)
// Parameters:
// int32                              QuantityToSubtract                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSubtractDarkMatter(int32 QuantityToSubtract)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSubtractDarkMatter");

	Params::UQtnDevCheatsComponent_QtnSubtractDarkMatter_Params Parms{};

	Parms.QuantityToSubtract = QuantityToSubtract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnStopVO
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnStopVO()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnStopVO");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSpawnNPC
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NumToSpawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSpawnNPC(int32 NumToSpawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSpawnNPC");

	Params::UQtnDevCheatsComponent_QtnSpawnNPC_Params Parms{};

	Parms.NumToSpawn = NumToSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSpawnDangerSphere
// (Final, Exec, Native, Public)
// Parameters:
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSpawnDangerSphere(float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSpawnDangerSphere");

	Params::UQtnDevCheatsComponent_QtnSpawnDangerSphere_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSpawnDangerCapsule
// (Final, Exec, Native, Public)
// Parameters:
// float                              Length                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSpawnDangerCapsule(float Length, float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSpawnDangerCapsule");

	Params::UQtnDevCheatsComponent_QtnSpawnDangerCapsule_Params Parms{};

	Parms.Length = Length;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSlapTarget
// (Final, Exec, Native, Public)
// Parameters:
// int32                              DamageAmount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSlapTarget(int32 DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSlapTarget");

	Params::UQtnDevCheatsComponent_QtnSlapTarget_Params Parms{};

	Parms.DamageAmount = DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnShowInviteUI
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnShowInviteUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnShowInviteUI");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetWalkSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                              WalkSpeed                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetWalkSpeed(float WalkSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetWalkSpeed");

	Params::UQtnDevCheatsComponent_QtnSetWalkSpeed_Params Parms{};

	Parms.WalkSpeed = WalkSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetTimeScale
// (Final, Exec, Native, Public)
// Parameters:
// float                              TimeScale                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetTimeScale(float TimeScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetTimeScale");

	Params::UQtnDevCheatsComponent_QtnSetTimeScale_Params Parms{};

	Parms.TimeScale = TimeScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetTextureQuality
// (Final, Exec, Native, Public)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetTextureQuality(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetTextureQuality");

	Params::UQtnDevCheatsComponent_QtnSetTextureQuality_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetTargetScale
// (Final, Exec, Native, Public)
// Parameters:
// float                              TargetScale                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetTargetScale(float TargetScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetTargetScale");

	Params::UQtnDevCheatsComponent_QtnSetTargetScale_Params Parms{};

	Parms.TargetScale = TargetScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetSpeakerTypeOverride
// (Final, Exec, Native, Public)
// Parameters:
// class FString                      SpeakerType                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetSpeakerTypeOverride(const class FString& SpeakerType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetSpeakerTypeOverride");

	Params::UQtnDevCheatsComponent_QtnSetSpeakerTypeOverride_Params Parms{};

	Parms.SpeakerType = SpeakerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetShadowQuality
// (Final, Exec, Native, Public)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetShadowQuality(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetShadowQuality");

	Params::UQtnDevCheatsComponent_QtnSetShadowQuality_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetOnFire
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnSetOnFire()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetOnFire");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetLocalizedAudioLanguage
// (Final, Exec, Native, Public)
// Parameters:
// struct FGameplayTag                Language                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetLocalizedAudioLanguage(const struct FGameplayTag& Language)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetLocalizedAudioLanguage");

	Params::UQtnDevCheatsComponent_QtnSetLocalizedAudioLanguage_Params Parms{};

	Parms.Language = Language;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetHoverHeight
// (Final, Exec, Native, Public)
// Parameters:
// float                              HoverHeight                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetHoverHeight(float HoverHeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetHoverHeight");

	Params::UQtnDevCheatsComponent_QtnSetHoverHeight_Params Parms{};

	Parms.HoverHeight = HoverHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetFogQuality
// (Final, Exec, Native, Public)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetFogQuality(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetFogQuality");

	Params::UQtnDevCheatsComponent_QtnSetFogQuality_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetAntialiasingQuality
// (Final, Exec, Native, Public)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetAntialiasingQuality(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetAntialiasingQuality");

	Params::UQtnDevCheatsComponent_QtnSetAntialiasingQuality_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSetAnimFramerate
// (Final, Exec, Native, Public)
// Parameters:
// int32                              FramesPerSecond                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSetAnimFramerate(int32 FramesPerSecond)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSetAnimFramerate");

	Params::UQtnDevCheatsComponent_QtnSetAnimFramerate_Params Parms{};

	Parms.FramesPerSecond = FramesPerSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSeamlessTravel
// (Final, Exec, Native, Public)
// Parameters:
// class FName                        MapName                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnSeamlessTravel(class FName MapName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSeamlessTravel");

	Params::UQtnDevCheatsComponent_QtnSeamlessTravel_Params Parms{};

	Parms.MapName = MapName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSaveProgressData
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnSaveProgressData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSaveProgressData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnSaveOptionsData
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnSaveOptionsData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnSaveOptionsData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRunUpgradeRarityTest
// (Final, Exec, Native, Public)
// Parameters:
// int32                              NumberOfRollsInTest                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnRunUpgradeRarityTest(int32 NumberOfRollsInTest)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRunUpgradeRarityTest");

	Params::UQtnDevCheatsComponent_QtnRunUpgradeRarityTest_Params Parms{};

	Parms.NumberOfRollsInTest = NumberOfRollsInTest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRunProgress_Reset
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnRunProgress_Reset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRunProgress_Reset");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRunProgress_ReadyForGameplay
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnRunProgress_ReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRunProgress_ReadyForGameplay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRunProgress_EnterWorld
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnRunProgress_EnterWorld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRunProgress_EnterWorld");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRunProgress_Checkpoint
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnRunProgress_Checkpoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRunProgress_Checkpoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRunLootStatsTestOnDebugTarget
// (Final, Exec, Native, Public)
// Parameters:
// int32                              NumTimesToRoll                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnRunLootStatsTestOnDebugTarget(int32 NumTimesToRoll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRunLootStatsTestOnDebugTarget");

	Params::UQtnDevCheatsComponent_QtnRunLootStatsTestOnDebugTarget_Params Parms{};

	Parms.NumTimesToRoll = NumTimesToRoll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRunEnemyUpgradeRollTest
// (Final, Exec, Native, Public)
// Parameters:
// int32                              NumberOfRollsInTest                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnRunEnemyUpgradeRollTest(int32 NumberOfRollsInTest)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRunEnemyUpgradeRollTest");

	Params::UQtnDevCheatsComponent_QtnRunEnemyUpgradeRollTest_Params Parms{};

	Parms.NumberOfRollsInTest = NumberOfRollsInTest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnResurrect
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnResurrect()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnResurrect");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnResetProgressData
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnResetProgressData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnResetProgressData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnResetOptionsData
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnResetOptionsData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnResetOptionsData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnResetNarrativeThreads
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnResetNarrativeThreads()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnResetNarrativeThreads");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnResetAllTutorials
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnResetAllTutorials()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnResetAllTutorials");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnResetAchievements
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnResetAchievements()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnResetAchievements");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRequestVerb
// (Final, Exec, Native, Public)
// Parameters:
// int32                              VerbIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnRequestVerb(int32 VerbIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRequestVerb");

	Params::UQtnDevCheatsComponent_QtnRequestVerb_Params Parms{};

	Parms.VerbIndex = VerbIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnRemoveAllInputContexts
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnRemoveAllInputContexts()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnRemoveAllInputContexts");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnPlayScriptedVOWithCallout
// (Final, Exec, Native, Public)
// Parameters:
// class FString                      ScriptedId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnPlayScriptedVOWithCallout(const class FString& ScriptedId, bool PreferToPlayOnBody, int32 PrescribedVariant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnPlayScriptedVOWithCallout");

	Params::UQtnDevCheatsComponent_QtnPlayScriptedVOWithCallout_Params Parms{};

	Parms.ScriptedId = ScriptedId;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnPlayScriptedVO
// (Final, Exec, Native, Public)
// Parameters:
// class FString                      ScriptedId                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnPlayScriptedVO(const class FString& ScriptedId, bool PreferToPlayOnBody, int32 PrescribedVariant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnPlayScriptedVO");

	Params::UQtnDevCheatsComponent_QtnPlayScriptedVO_Params Parms{};

	Parms.ScriptedId = ScriptedId;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnPlayersOnly
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnPlayersOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnPlayersOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnPlantNPCs
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnPlantNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnPlantNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnOpenAllLootContainers
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnOpenAllLootContainers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnOpenAllLootContainers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnNukeNPCs
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnNukeNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnNukeNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnMarkAllNPCsForCleanup
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnMarkAllNPCsForCleanup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnMarkAllNPCsForCleanup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnLoadProgressData
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnLoadProgressData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnLoadProgressData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnLoadOptionsData
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnLoadOptionsData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnLoadOptionsData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnListEnemyUpgrades
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnListEnemyUpgrades()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnListEnemyUpgrades");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnLaunch
// (Final, Exec, Native, Public)
// Parameters:
// float                              X                                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Y                                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Z                                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnLaunch(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnLaunch");

	Params::UQtnDevCheatsComponent_QtnLaunch_Params Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnKnockback
// (Final, Exec, Native, Public)
// Parameters:
// float                              HorizontalDistance                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ApexHeight                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnKnockback(float HorizontalDistance, float ApexHeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnKnockback");

	Params::UQtnDevCheatsComponent_QtnKnockback_Params Parms{};

	Parms.HorizontalDistance = HorizontalDistance;
	Parms.ApexHeight = ApexHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnKillPawn
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnKillPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnKillPawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnGrantAchievement
// (Final, Exec, Native, Public)
// Parameters:
// class FName                        AchievementID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnGrantAchievement(class FName AchievementID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnGrantAchievement");

	Params::UQtnDevCheatsComponent_QtnGrantAchievement_Params Parms{};

	Parms.AchievementID = AchievementID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnGodPlayers
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnGodPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnGodPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnGodNPCs
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnGodNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnGodNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnGetOverHere
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnGetOverHere()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnGetOverHere");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnGenerateAINoise
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnGenerateAINoise()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnGenerateAINoise");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnFlagNote
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                      Message                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnFlagNote(class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnFlagNote");

	Params::UQtnDevCheatsComponent_QtnFlagNote_Params Parms{};

	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnFlag
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnFlag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnFlag");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnFart
// (Final, Exec, Native, Public)
// Parameters:
// int32                              DamageAmount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnFart(int32 DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnFart");

	Params::UQtnDevCheatsComponent_QtnFart_Params Parms{};

	Parms.DamageAmount = DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnEquipRandomCosmetic
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnEquipRandomCosmetic()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnEquipRandomCosmetic");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnEnemyCheatVampireBat
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnEnemyCheatVampireBat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnEnemyCheatVampireBat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnEnemyCheatLaserSword
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnEnemyCheatLaserSword()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnEnemyCheatLaserSword");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDumpFXPoolingStats
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDumpFXPoolingStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDumpFXPoolingStats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDumpCharacterStats
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDumpCharacterStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDumpCharacterStats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDumpActorPoolingStats
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDumpActorPoolingStats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDumpActorPoolingStats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDestroyDebugTarget
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDestroyDebugTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDestroyDebugTarget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDestroyAllPawnsMarkedForCleanup
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDestroyAllPawnsMarkedForCleanup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDestroyAllPawnsMarkedForCleanup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDestroyAllOffscreenNPCs
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDestroyAllOffscreenNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDestroyAllOffscreenNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDestroyAllNPCs
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDestroyAllNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDestroyAllNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDestroyAllNontargetedNPCs
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDestroyAllNontargetedNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDestroyAllNontargetedNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDestroyAllDeadPawns
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnDestroyAllDeadPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDestroyAllDeadPawns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnDance
// (Final, Exec, Native, Public)
// Parameters:
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnDance(float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnDance");

	Params::UQtnDevCheatsComponent_QtnDance_Params Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnClearFlags
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnClearFlags()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnClearFlags");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnCleanUpLootItems
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnCleanUpLootItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnCleanUpLootItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnBuddhaPlayers
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnBuddhaPlayers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnBuddhaPlayers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnBuddhaNPCs
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnBuddhaNPCs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnBuddhaNPCs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnBoo
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnBoo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnBoo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAITimeDilation
// (Final, Exec, Native, Public)
// Parameters:
// float                              TimeDilation                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnAITimeDilation(float TimeDilation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAITimeDilation");

	Params::UQtnDevCheatsComponent_QtnAITimeDilation_Params Parms{};

	Parms.TimeDilation = TimeDilation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAIPacifist
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnAIPacifist()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAIPacifist");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAINumb
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnAINumb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAINumb");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAINinjaMode
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDevCheatsComponent::QtnAINinjaMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAINinjaMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAIDeaf
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnAIDeaf()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAIDeaf");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAIBlind
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::QtnAIBlind()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAIBlind");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAddToiletPaper
// (Final, Exec, Native, Public)
// Parameters:
// int32                              QuantityToAdd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnAddToiletPaper(int32 QuantityToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAddToiletPaper");

	Params::UQtnDevCheatsComponent_QtnAddToiletPaper_Params Parms{};

	Parms.QuantityToAdd = QuantityToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAddFitcoin
// (Final, Exec, Native, Public)
// Parameters:
// int32                              QuantityToAdd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnAddFitcoin(int32 QuantityToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAddFitcoin");

	Params::UQtnDevCheatsComponent_QtnAddFitcoin_Params Parms{};

	Parms.QuantityToAdd = QuantityToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAddEnemyUpgrade
// (Final, Exec, Native, Public)
// Parameters:
// class FName                        UpgradeIdentity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnAddEnemyUpgrade(class FName UpgradeIdentity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAddEnemyUpgrade");

	Params::UQtnDevCheatsComponent_QtnAddEnemyUpgrade_Params Parms{};

	Parms.UpgradeIdentity = UpgradeIdentity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnAddDarkMatter
// (Final, Exec, Native, Public)
// Parameters:
// int32                              QuantityToAdd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnAddDarkMatter(int32 QuantityToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnAddDarkMatter");

	Params::UQtnDevCheatsComponent_QtnAddDarkMatter_Params Parms{};

	Parms.QuantityToAdd = QuantityToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.QtnActorVisibility
// (Final, Exec, Native, Public)
// Parameters:
// class FString                      Params                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::QtnActorVisibility(const class FString& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "QtnActorVisibility");

	Params::UQtnDevCheatsComponent_QtnActorVisibility_Params Parms{};

	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.OnSpawnNPC_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                SpawnedNPC                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::OnSpawnNPC_ServerOnly(class AQtnBodyPawn* SpawnedNPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "OnSpawnNPC_ServerOnly");

	Params::UQtnDevCheatsComponent_OnSpawnNPC_ServerOnly_Params Parms{};

	Parms.SpawnedNPC = SpawnedNPC;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDevCheatsComponent.OnQtnToggleFootageCaptureModeEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsInFootageCaptureMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::OnQtnToggleFootageCaptureModeEvent(bool IsInFootageCaptureMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "OnQtnToggleFootageCaptureModeEvent");

	Params::UQtnDevCheatsComponent_OnQtnToggleFootageCaptureModeEvent_Params Parms{};

	Parms.IsInFootageCaptureMode = IsInFootageCaptureMode;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDevCheatsComponent.NinjaMode
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::NinjaMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "NinjaMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.MulticastSendCheatMsg
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class FString                      CheatMsg                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::MulticastSendCheatMsg(class FString& CheatMsg)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "MulticastSendCheatMsg");

	Params::UQtnDevCheatsComponent_MulticastSendCheatMsg_Params Parms{};

	Parms.CheatMsg = CheatMsg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.MulticastQtnSetWalkSpeed
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AQtnPawn*                    PTargetedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              WalkSpeed                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::MulticastQtnSetWalkSpeed(class AQtnPawn* PTargetedPawn, float WalkSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "MulticastQtnSetWalkSpeed");

	Params::UQtnDevCheatsComponent_MulticastQtnSetWalkSpeed_Params Parms{};

	Parms.PTargetedPawn = PTargetedPawn;
	Parms.WalkSpeed = WalkSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.MulticastQtnSetTargetScale
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor*                      PTargetedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TargetScale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::MulticastQtnSetTargetScale(class AActor* PTargetedActor, float TargetScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "MulticastQtnSetTargetScale");

	Params::UQtnDevCheatsComponent_MulticastQtnSetTargetScale_Params Parms{};

	Parms.PTargetedActor = PTargetedActor;
	Parms.TargetScale = TargetScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.MulticastQtnPlaySound
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class USoundBase*                  SoundAsset                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::MulticastQtnPlaySound(class USoundBase* SoundAsset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "MulticastQtnPlaySound");

	Params::UQtnDevCheatsComponent_MulticastQtnPlaySound_Params Parms{};

	Parms.SoundAsset = SoundAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.MulticastQtnKnockback
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AQtnPawn*                    Victim                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HorizontalDistance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ApexHeight                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::MulticastQtnKnockback(class AQtnPawn* Victim, float HorizontalDistance, float ApexHeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "MulticastQtnKnockback");

	Params::UQtnDevCheatsComponent_MulticastQtnKnockback_Params Parms{};

	Parms.Victim = Victim;
	Parms.HorizontalDistance = HorizontalDistance;
	Parms.ApexHeight = ApexHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.God
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::God()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "God");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.DoCheatNotify
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      Msg                                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDevCheatsComponent::DoCheatNotify(const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "DoCheatNotify");

	Params::UQtnDevCheatsComponent_DoCheatNotify_Params Parms{};

	Parms.Msg = Msg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDevCheatsComponent.Buddha
// (Final, Exec, Native, Public)
// Parameters:

void UQtnDevCheatsComponent::Buddha()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDevCheatsComponent", "Buddha");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDevNote
// (Actor)

class UClass* AQtnDevNote::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDevNote");

	return Clss;
}


// QtnDevNote QtnGame.Default__QtnDevNote
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnDevNote* AQtnDevNote::GetDefaultObj()
{
	static class AQtnDevNote* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnDevNote*>(AQtnDevNote::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPage
// (None)

class UClass* UQtnDisplayDebugPage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPage");

	return Clss;
}


// QtnDisplayDebugPage QtnGame.Default__QtnDisplayDebugPage
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPage* UQtnDisplayDebugPage::GetDefaultObj()
{
	static class UQtnDisplayDebugPage* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPage*>(UQtnDisplayDebugPage::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDisplayDebugPage.GetPageHelpText
// (Native, Public)
// Parameters:
// class AQtnPlayerPawn*              POwningPlayerPawn                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PDebugTargetActor                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnDisplayDebugPage::GetPageHelpText(class AQtnPlayerPawn* POwningPlayerPawn, class AActor* PDebugTargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDisplayDebugPage", "GetPageHelpText");

	Params::UQtnDisplayDebugPage_GetPageHelpText_Params Parms{};

	Parms.POwningPlayerPawn = POwningPlayerPawn;
	Parms.PDebugTargetActor = PDebugTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnDisplayDebugPageActorBase
// (None)

class UClass* UQtnDisplayDebugPageActorBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageActorBase");

	return Clss;
}


// QtnDisplayDebugPageActorBase QtnGame.Default__QtnDisplayDebugPageActorBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageActorBase* UQtnDisplayDebugPageActorBase::GetDefaultObj()
{
	static class UQtnDisplayDebugPageActorBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageActorBase*>(UQtnDisplayDebugPageActorBase::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageActors
// (None)

class UClass* UQtnDisplayDebugPageActors::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageActors");

	return Clss;
}


// QtnDisplayDebugPageActors QtnGame.Default__QtnDisplayDebugPageActors
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageActors* UQtnDisplayDebugPageActors::GetDefaultObj()
{
	static class UQtnDisplayDebugPageActors* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageActors*>(UQtnDisplayDebugPageActors::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAI
// (None)

class UClass* UQtnDisplayDebugPageAI::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAI");

	return Clss;
}


// QtnDisplayDebugPageAI QtnGame.Default__QtnDisplayDebugPageAI
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAI* UQtnDisplayDebugPageAI::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAI* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAI*>(UQtnDisplayDebugPageAI::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAICombat
// (None)

class UClass* UQtnDisplayDebugPageAICombat::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAICombat");

	return Clss;
}


// QtnDisplayDebugPageAICombat QtnGame.Default__QtnDisplayDebugPageAICombat
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAICombat* UQtnDisplayDebugPageAICombat::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAICombat* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAICombat*>(UQtnDisplayDebugPageAICombat::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAINoise
// (None)

class UClass* UQtnDisplayDebugPageAINoise::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAINoise");

	return Clss;
}


// QtnDisplayDebugPageAINoise QtnGame.Default__QtnDisplayDebugPageAINoise
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAINoise* UQtnDisplayDebugPageAINoise::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAINoise* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAINoise*>(UQtnDisplayDebugPageAINoise::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAIOverview
// (None)

class UClass* UQtnDisplayDebugPageAIOverview::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAIOverview");

	return Clss;
}


// QtnDisplayDebugPageAIOverview QtnGame.Default__QtnDisplayDebugPageAIOverview
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAIOverview* UQtnDisplayDebugPageAIOverview::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAIOverview* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAIOverview*>(UQtnDisplayDebugPageAIOverview::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAIPatrols
// (None)

class UClass* UQtnDisplayDebugPageAIPatrols::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAIPatrols");

	return Clss;
}


// QtnDisplayDebugPageAIPatrols QtnGame.Default__QtnDisplayDebugPageAIPatrols
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAIPatrols* UQtnDisplayDebugPageAIPatrols::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAIPatrols* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAIPatrols*>(UQtnDisplayDebugPageAIPatrols::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAISense
// (None)

class UClass* UQtnDisplayDebugPageAISense::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAISense");

	return Clss;
}


// QtnDisplayDebugPageAISense QtnGame.Default__QtnDisplayDebugPageAISense
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAISense* UQtnDisplayDebugPageAISense::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAISense* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAISense*>(UQtnDisplayDebugPageAISense::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAISystems
// (None)

class UClass* UQtnDisplayDebugPageAISystems::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAISystems");

	return Clss;
}


// QtnDisplayDebugPageAISystems QtnGame.Default__QtnDisplayDebugPageAISystems
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAISystems* UQtnDisplayDebugPageAISystems::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAISystems* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAISystems*>(UQtnDisplayDebugPageAISystems::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageAITickets
// (None)

class UClass* UQtnDisplayDebugPageAITickets::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageAITickets");

	return Clss;
}


// QtnDisplayDebugPageAITickets QtnGame.Default__QtnDisplayDebugPageAITickets
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageAITickets* UQtnDisplayDebugPageAITickets::GetDefaultObj()
{
	static class UQtnDisplayDebugPageAITickets* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageAITickets*>(UQtnDisplayDebugPageAITickets::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageBodyState
// (None)

class UClass* UQtnDisplayDebugPageBodyState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageBodyState");

	return Clss;
}


// QtnDisplayDebugPageBodyState QtnGame.Default__QtnDisplayDebugPageBodyState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageBodyState* UQtnDisplayDebugPageBodyState::GetDefaultObj()
{
	static class UQtnDisplayDebugPageBodyState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageBodyState*>(UQtnDisplayDebugPageBodyState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageCamera
// (None)

class UClass* UQtnDisplayDebugPageCamera::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageCamera");

	return Clss;
}


// QtnDisplayDebugPageCamera QtnGame.Default__QtnDisplayDebugPageCamera
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageCamera* UQtnDisplayDebugPageCamera::GetDefaultObj()
{
	static class UQtnDisplayDebugPageCamera* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageCamera*>(UQtnDisplayDebugPageCamera::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageCosmetics
// (None)

class UClass* UQtnDisplayDebugPageCosmetics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageCosmetics");

	return Clss;
}


// QtnDisplayDebugPageCosmetics QtnGame.Default__QtnDisplayDebugPageCosmetics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageCosmetics* UQtnDisplayDebugPageCosmetics::GetDefaultObj()
{
	static class UQtnDisplayDebugPageCosmetics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageCosmetics*>(UQtnDisplayDebugPageCosmetics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageGameInstance
// (None)

class UClass* UQtnDisplayDebugPageGameInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageGameInstance");

	return Clss;
}


// QtnDisplayDebugPageGameInstance QtnGame.Default__QtnDisplayDebugPageGameInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageGameInstance* UQtnDisplayDebugPageGameInstance::GetDefaultObj()
{
	static class UQtnDisplayDebugPageGameInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageGameInstance*>(UQtnDisplayDebugPageGameInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageGlobal
// (None)

class UClass* UQtnDisplayDebugPageGlobal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageGlobal");

	return Clss;
}


// QtnDisplayDebugPageGlobal QtnGame.Default__QtnDisplayDebugPageGlobal
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageGlobal* UQtnDisplayDebugPageGlobal::GetDefaultObj()
{
	static class UQtnDisplayDebugPageGlobal* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageGlobal*>(UQtnDisplayDebugPageGlobal::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageInventory
// (None)

class UClass* UQtnDisplayDebugPageInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageInventory");

	return Clss;
}


// QtnDisplayDebugPageInventory QtnGame.Default__QtnDisplayDebugPageInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageInventory* UQtnDisplayDebugPageInventory::GetDefaultObj()
{
	static class UQtnDisplayDebugPageInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageInventory*>(UQtnDisplayDebugPageInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageMissionProgress
// (None)

class UClass* UQtnDisplayDebugPageMissionProgress::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageMissionProgress");

	return Clss;
}


// QtnDisplayDebugPageMissionProgress QtnGame.Default__QtnDisplayDebugPageMissionProgress
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageMissionProgress* UQtnDisplayDebugPageMissionProgress::GetDefaultObj()
{
	static class UQtnDisplayDebugPageMissionProgress* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageMissionProgress*>(UQtnDisplayDebugPageMissionProgress::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageNavMovement
// (None)

class UClass* UQtnDisplayDebugPageNavMovement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageNavMovement");

	return Clss;
}


// QtnDisplayDebugPageNavMovement QtnGame.Default__QtnDisplayDebugPageNavMovement
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageNavMovement* UQtnDisplayDebugPageNavMovement::GetDefaultObj()
{
	static class UQtnDisplayDebugPageNavMovement* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageNavMovement*>(UQtnDisplayDebugPageNavMovement::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPagePlayer
// (None)

class UClass* UQtnDisplayDebugPagePlayer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPagePlayer");

	return Clss;
}


// QtnDisplayDebugPagePlayer QtnGame.Default__QtnDisplayDebugPagePlayer
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPagePlayer* UQtnDisplayDebugPagePlayer::GetDefaultObj()
{
	static class UQtnDisplayDebugPagePlayer* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPagePlayer*>(UQtnDisplayDebugPagePlayer::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageRPGQuest
// (None)

class UClass* UQtnDisplayDebugPageRPGQuest::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageRPGQuest");

	return Clss;
}


// QtnDisplayDebugPageRPGQuest QtnGame.Default__QtnDisplayDebugPageRPGQuest
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageRPGQuest* UQtnDisplayDebugPageRPGQuest::GetDefaultObj()
{
	static class UQtnDisplayDebugPageRPGQuest* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageRPGQuest*>(UQtnDisplayDebugPageRPGQuest::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageRPGStats
// (None)

class UClass* UQtnDisplayDebugPageRPGStats::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageRPGStats");

	return Clss;
}


// QtnDisplayDebugPageRPGStats QtnGame.Default__QtnDisplayDebugPageRPGStats
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageRPGStats* UQtnDisplayDebugPageRPGStats::GetDefaultObj()
{
	static class UQtnDisplayDebugPageRPGStats* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageRPGStats*>(UQtnDisplayDebugPageRPGStats::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageSaveLoad
// (None)

class UClass* UQtnDisplayDebugPageSaveLoad::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageSaveLoad");

	return Clss;
}


// QtnDisplayDebugPageSaveLoad QtnGame.Default__QtnDisplayDebugPageSaveLoad
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageSaveLoad* UQtnDisplayDebugPageSaveLoad::GetDefaultObj()
{
	static class UQtnDisplayDebugPageSaveLoad* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageSaveLoad*>(UQtnDisplayDebugPageSaveLoad::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageSkirmishes
// (None)

class UClass* UQtnDisplayDebugPageSkirmishes::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageSkirmishes");

	return Clss;
}


// QtnDisplayDebugPageSkirmishes QtnGame.Default__QtnDisplayDebugPageSkirmishes
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageSkirmishes* UQtnDisplayDebugPageSkirmishes::GetDefaultObj()
{
	static class UQtnDisplayDebugPageSkirmishes* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageSkirmishes*>(UQtnDisplayDebugPageSkirmishes::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageSpokes
// (None)

class UClass* UQtnDisplayDebugPageSpokes::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageSpokes");

	return Clss;
}


// QtnDisplayDebugPageSpokes QtnGame.Default__QtnDisplayDebugPageSpokes
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageSpokes* UQtnDisplayDebugPageSpokes::GetDefaultObj()
{
	static class UQtnDisplayDebugPageSpokes* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageSpokes*>(UQtnDisplayDebugPageSpokes::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDisplayDebugPageUI
// (None)

class UClass* UQtnDisplayDebugPageUI::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisplayDebugPageUI");

	return Clss;
}


// QtnDisplayDebugPageUI QtnGame.Default__QtnDisplayDebugPageUI
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisplayDebugPageUI* UQtnDisplayDebugPageUI::GetDefaultObj()
{
	static class UQtnDisplayDebugPageUI* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisplayDebugPageUI*>(UQtnDisplayDebugPageUI::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDLCInfo
// (None)

class UClass* UQtnDLCInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDLCInfo");

	return Clss;
}


// QtnDLCInfo QtnGame.Default__QtnDLCInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDLCInfo* UQtnDLCInfo::GetDefaultObj()
{
	static class UQtnDLCInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDLCInfo*>(UQtnDLCInfo::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDLCInfo.GetImageForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnDLCInfo::GetImageForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCInfo", "GetImageForUI");

	Params::UQtnDLCInfo_GetImageForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDLCInfo.GetDLCInfoArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UQtnDLCInfo>     DlcInfoClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDLCInfo*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDLCInfo* UQtnDLCInfo::GetDLCInfoArchetype(TSubclassOf<class UQtnDLCInfo> DlcInfoClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCInfo", "GetDLCInfoArchetype");

	Params::UQtnDLCInfo_GetDLCInfoArchetype_Params Parms{};

	Parms.DlcInfoClass = DlcInfoClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnDLCManager
// (None)

class UClass* UQtnDLCManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDLCManager");

	return Clss;
}


// QtnDLCManager QtnGame.Default__QtnDLCManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDLCManager* UQtnDLCManager::GetDefaultObj()
{
	static class UQtnDLCManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDLCManager*>(UQtnDLCManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDLCManager.ShouldShowDLCStoreLink
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              AvailableDLC                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PurchasedDLC                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDLCManager::ShouldShowDLCStoreLink(int32* AvailableDLC, int32* PurchasedDLC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCManager", "ShouldShowDLCStoreLink");

	Params::UQtnDLCManager_ShouldShowDLCStoreLink_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AvailableDLC != nullptr)
		*AvailableDLC = Parms.AvailableDLC;

	if (PurchasedDLC != nullptr)
		*PurchasedDLC = Parms.PurchasedDLC;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDLCManager.RemoveSimulatedDLCPurchase_DEVONLY
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnDLCInfo>     DlcInfo                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDLCManager::RemoveSimulatedDLCPurchase_DEVONLY(TSubclassOf<class UQtnDLCInfo> DlcInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCManager", "RemoveSimulatedDLCPurchase_DEVONLY");

	Params::UQtnDLCManager_RemoveSimulatedDLCPurchase_DEVONLY_Params Parms{};

	Parms.DlcInfo = DlcInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDLCManager.RefreshPurchasedDLC
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnDLCManager::RefreshPurchasedDLC()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCManager", "RefreshPurchasedDLC");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDLCManager.OpenDLCStorePage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnDLCInfo>     DlcInfo                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDLCManager::OpenDLCStorePage(TSubclassOf<class UQtnDLCInfo> DlcInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCManager", "OpenDLCStorePage");

	Params::UQtnDLCManager_OpenDLCStorePage_Params Parms{};

	Parms.DlcInfo = DlcInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDLCManager.HasPurchasedDLC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnDLCInfo>     DlcInfo                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnDLCManager::HasPurchasedDLC(TSubclassOf<class UQtnDLCInfo> DlcInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCManager", "HasPurchasedDLC");

	Params::UQtnDLCManager_HasPurchasedDLC_Params Parms{};

	Parms.DlcInfo = DlcInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDLCManager.AddSimulatedDLCPurchase_DEVONLY
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnDLCInfo>     DlcInfo                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDLCManager::AddSimulatedDLCPurchase_DEVONLY(TSubclassOf<class UQtnDLCInfo> DlcInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDLCManager", "AddSimulatedDLCPurchase_DEVONLY");

	Params::UQtnDLCManager_AddSimulatedDLCPurchase_DEVONLY_Params Parms{};

	Parms.DlcInfo = DlcInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnReplicatedActor
// (Actor)

class UClass* AQtnReplicatedActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnReplicatedActor");

	return Clss;
}


// QtnReplicatedActor QtnGame.Default__QtnReplicatedActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnReplicatedActor* AQtnReplicatedActor::GetDefaultObj()
{
	static class AQtnReplicatedActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnReplicatedActor*>(AQtnReplicatedActor::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnReplicatedActor.OnQtnReadyForGameplay
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnReplicatedActor::OnQtnReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnReplicatedActor", "OnQtnReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnReplicatedActor.HandleSimPause
// (Final, Native, Public)
// Parameters:
// bool                               Paused                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnReplicatedActor::HandleSimPause(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnReplicatedActor", "HandleSimPause");

	Params::AQtnReplicatedActor_HandleSimPause_Params Parms{};

	Parms.Paused = Paused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnReplicatedActor.HandleGameStateReadyForGameplay
// (Final, Native, Public)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                LocalPlayerUI                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOccupiedBodyPawn                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnReplicatedActor::HandleGameStateReadyForGameplay(class AQtnPlayerController* LocalPlayerController, class AQtnPlayerUI* LocalPlayerUI, class AQtnBodyPawn* LocalOccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnReplicatedActor", "HandleGameStateReadyForGameplay");

	Params::AQtnReplicatedActor_HandleGameStateReadyForGameplay_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.LocalPlayerUI = LocalPlayerUI;
	Parms.LocalOccupiedBodyPawn = LocalOccupiedBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDoor
// (Actor)

class UClass* AQtnDoor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDoor");

	return Clss;
}


// QtnDoor QtnGame.Default__QtnDoor
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnDoor* AQtnDoor::GetDefaultObj()
{
	static class AQtnDoor* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnDoor*>(AQtnDoor::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDoor.SetLogicalDoorState_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnDoorState           LogicalDoorState                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    UsingPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnDoor::SetLogicalDoorState_ServerOnly(enum class EQtnDoorState LogicalDoorState, class AQtnPawn* UsingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDoor", "SetLogicalDoorState_ServerOnly");

	Params::AQtnDoor_SetLogicalDoorState_ServerOnly_Params Parms{};

	Parms.LogicalDoorState = LogicalDoorState;
	Parms.UsingPawn = UsingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDoor.OnRep_LogicalDoorState
// (Final, Native, Protected)
// Parameters:

void AQtnDoor::OnRep_LogicalDoorState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDoor", "OnRep_LogicalDoorState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDoor.OnLogicalDoorStateChange
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EQtnDoorState           PreviousLogicalState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnDoorState           NewLogicalState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    UsingPawn                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnDoor::OnLogicalDoorStateChange(enum class EQtnDoorState PreviousLogicalState, enum class EQtnDoorState NewLogicalState, class AQtnPawn* UsingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDoor", "OnLogicalDoorStateChange");

	Params::AQtnDoor_OnLogicalDoorStateChange_Params Parms{};

	Parms.PreviousLogicalState = PreviousLogicalState;
	Parms.NewLogicalState = NewLogicalState;
	Parms.UsingPawn = UsingPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnDoor.IsDoorClosed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnDoor::IsDoorClosed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDoor", "IsDoorClosed");

	Params::AQtnDoor_IsDoorClosed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDoor.HandleFrontFrob
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnFrobbableComponent*      ThisFrobbable                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                FrobbingPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnDoor::HandleFrontFrob(class UQtnFrobbableComponent* ThisFrobbable, class AQtnBodyPawn* FrobbingPawn, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDoor", "HandleFrontFrob");

	Params::AQtnDoor_HandleFrontFrob_Params Parms{};

	Parms.ThisFrobbable = ThisFrobbable;
	Parms.FrobbingPawn = FrobbingPawn;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDoor.HandleBackFrob
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UQtnFrobbableComponent*      ThisFrobbable                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                FrobbingPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnDoor::HandleBackFrob(class UQtnFrobbableComponent* ThisFrobbable, class AQtnBodyPawn* FrobbingPawn, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDoor", "HandleBackFrob");

	Params::AQtnDoor_HandleBackFrob_Params Parms{};

	Parms.ThisFrobbable = ThisFrobbable;
	Parms.FrobbingPawn = FrobbingPawn;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnDoor.DetermineDirectionOfOpening
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    UsingPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnDoorState           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnDoorState AQtnDoor::DetermineDirectionOfOpening(class AQtnPawn* UsingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDoor", "DetermineDirectionOfOpening");

	Params::AQtnDoor_DetermineDirectionOfOpening_Params Parms{};

	Parms.UsingPawn = UsingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnMovementComponent
// (None)

class UClass* UQtnMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMovementComponent");

	return Clss;
}


// QtnMovementComponent QtnGame.Default__QtnMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMovementComponent* UQtnMovementComponent::GetDefaultObj()
{
	static class UQtnMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMovementComponent*>(UQtnMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMovementComponent.SetReplicatedMaxSpeedMultiplier_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     MaxSpeedCauser                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxSpeedMultiplier                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::SetReplicatedMaxSpeedMultiplier_ServerOnly(class UObject* MaxSpeedCauser, float MaxSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "SetReplicatedMaxSpeedMultiplier_ServerOnly");

	Params::UQtnMovementComponent_SetReplicatedMaxSpeedMultiplier_ServerOnly_Params Parms{};

	Parms.MaxSpeedCauser = MaxSpeedCauser;
	Parms.MaxSpeedMultiplier = MaxSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.SetLocalMaxSpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     MaxSpeedCauser                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxSpeedMultiplier                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::SetLocalMaxSpeedMultiplier(class UObject* MaxSpeedCauser, float MaxSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "SetLocalMaxSpeedMultiplier");

	Params::UQtnMovementComponent_SetLocalMaxSpeedMultiplier_Params Parms{};

	Parms.MaxSpeedCauser = MaxSpeedCauser;
	Parms.MaxSpeedMultiplier = MaxSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.SetHoverHeight_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              HoverHeight                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::SetHoverHeight_ServerOnly(float HoverHeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "SetHoverHeight_ServerOnly");

	Params::UQtnMovementComponent_SetHoverHeight_ServerOnly_Params Parms{};

	Parms.HoverHeight = HoverHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.SetFallSpeedMultiplier_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     FallSpeedCauser                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FallSpeedMultiplier                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::SetFallSpeedMultiplier_ServerOnly(class UObject* FallSpeedCauser, float FallSpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "SetFallSpeedMultiplier_ServerOnly");

	Params::UQtnMovementComponent_SetFallSpeedMultiplier_ServerOnly_Params Parms{};

	Parms.FallSpeedCauser = FallSpeedCauser;
	Parms.FallSpeedMultiplier = FallSpeedMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.RemoveSlipperyCauser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SlipperyCauser                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::RemoveSlipperyCauser(class UObject* SlipperyCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "RemoveSlipperyCauser");

	Params::UQtnMovementComponent_RemoveSlipperyCauser_Params Parms{};

	Parms.SlipperyCauser = SlipperyCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.RemoveReplicatedMaxSpeedMultiplier_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     MaxSpeedCauser                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::RemoveReplicatedMaxSpeedMultiplier_ServerOnly(class UObject* MaxSpeedCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "RemoveReplicatedMaxSpeedMultiplier_ServerOnly");

	Params::UQtnMovementComponent_RemoveReplicatedMaxSpeedMultiplier_ServerOnly_Params Parms{};

	Parms.MaxSpeedCauser = MaxSpeedCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.RemoveLocalMaxSpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     MaxSpeedCauser                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::RemoveLocalMaxSpeedMultiplier(class UObject* MaxSpeedCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "RemoveLocalMaxSpeedMultiplier");

	Params::UQtnMovementComponent_RemoveLocalMaxSpeedMultiplier_Params Parms{};

	Parms.MaxSpeedCauser = MaxSpeedCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.RemoveLedgeInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     LedgeInhibitor                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::RemoveLedgeInhibitor(class UObject* LedgeInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "RemoveLedgeInhibitor");

	Params::UQtnMovementComponent_RemoveLedgeInhibitor_Params Parms{};

	Parms.LedgeInhibitor = LedgeInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.RemoveFallSpeedMultiplier_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     FallSpeedCauser                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::RemoveFallSpeedMultiplier_ServerOnly(class UObject* FallSpeedCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "RemoveFallSpeedMultiplier_ServerOnly");

	Params::UQtnMovementComponent_RemoveFallSpeedMultiplier_ServerOnly_Params Parms{};

	Parms.FallSpeedCauser = FallSpeedCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnMovementComponent.QtnOnBlockedByLedge__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPawn*                    blockedPawn                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::QtnOnBlockedByLedge__DelegateSignature(class AQtnPawn* blockedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "QtnOnBlockedByLedge__DelegateSignature");

	Params::UQtnMovementComponent_QtnOnBlockedByLedge__DelegateSignature_Params Parms{};

	Parms.blockedPawn = blockedPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMovementComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "OnDebugDisplay");

	Params::UQtnMovementComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMovementComponent.IsOnIce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMovementComponent::IsOnIce()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "IsOnIce");

	Params::UQtnMovementComponent_IsOnIce_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMovementComponent.IsBeingSlowedDownByTerrain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMovementComponent::IsBeingSlowedDownByTerrain()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "IsBeingSlowedDownByTerrain");

	Params::UQtnMovementComponent_IsBeingSlowedDownByTerrain_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMovementComponent.GetMaxSpeedMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnMovementComponent::GetMaxSpeedMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "GetMaxSpeedMultiplier");

	Params::UQtnMovementComponent_GetMaxSpeedMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMovementComponent.GetHoverHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnMovementComponent::GetHoverHeight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "GetHoverHeight");

	Params::UQtnMovementComponent_GetHoverHeight_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMovementComponent.GetElapsedTimeOnGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnMovementComponent::GetElapsedTimeOnGround()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "GetElapsedTimeOnGround");

	Params::UQtnMovementComponent_GetElapsedTimeOnGround_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMovementComponent.EnableNavWalkingMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnMovementComponent::EnableNavWalkingMovement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "EnableNavWalkingMovement");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.DisableNavWalkingMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnMovementComponent::DisableNavWalkingMovement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "DisableNavWalkingMovement");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.AddSlipperyCauser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SlipperyCauser                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::AddSlipperyCauser(class UObject* SlipperyCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "AddSlipperyCauser");

	Params::UQtnMovementComponent_AddSlipperyCauser_Params Parms{};

	Parms.SlipperyCauser = SlipperyCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMovementComponent.AddLedgeInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     LedgeInhibitor                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMovementComponent::AddLedgeInhibitor(class UObject* LedgeInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMovementComponent", "AddLedgeInhibitor");

	Params::UQtnMovementComponent_AddLedgeInhibitor_Params Parms{};

	Parms.LedgeInhibitor = LedgeInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDroneMovementComponent
// (None)

class UClass* UQtnDroneMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDroneMovementComponent");

	return Clss;
}


// QtnDroneMovementComponent QtnGame.Default__QtnDroneMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDroneMovementComponent* UQtnDroneMovementComponent::GetDefaultObj()
{
	static class UQtnDroneMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDroneMovementComponent*>(UQtnDroneMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnDronePawn
// (Actor, Pawn)

class UClass* AQtnDronePawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDronePawn");

	return Clss;
}


// QtnDronePawn QtnGame.Default__QtnDronePawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnDronePawn* AQtnDronePawn::GetDefaultObj()
{
	static class AQtnDronePawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnDronePawn*>(AQtnDronePawn::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnEditorHelperComponent
// (None)

class UClass* UQtnEditorHelperComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEditorHelperComponent");

	return Clss;
}


// QtnEditorHelperComponent QtnGame.Default__QtnEditorHelperComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEditorHelperComponent* UQtnEditorHelperComponent::GetDefaultObj()
{
	static class UQtnEditorHelperComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEditorHelperComponent*>(UQtnEditorHelperComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnEditorHelperComponent.GetVisualizationColor
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AActor*                      RelevantActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForLines                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UQtnEditorHelperComponent::GetVisualizationColor(class AActor* RelevantActor, bool ForLines)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorHelperComponent", "GetVisualizationColor");

	Params::UQtnEditorHelperComponent_GetVisualizationColor_Params Parms{};

	Parms.RelevantActor = RelevantActor;
	Parms.ForLines = ForLines;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEditorHelperComponent.GatherRelevantActors
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>              RelevantActors                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnEditorHelperComponent::GatherRelevantActors(TArray<class AActor*>* RelevantActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorHelperComponent", "GatherRelevantActors");

	Params::UQtnEditorHelperComponent_GatherRelevantActors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RelevantActors != nullptr)
		*RelevantActors = std::move(Parms.RelevantActors);

}


// Function QtnGame.QtnEditorHelperComponent.GatherErrors
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class FString>              ErrorMsgs                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnEditorHelperComponent::GatherErrors(TArray<class FString>* ErrorMsgs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorHelperComponent", "GatherErrors");

	Params::UQtnEditorHelperComponent_GatherErrors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ErrorMsgs != nullptr)
		*ErrorMsgs = std::move(Parms.ErrorMsgs);

}


// Function QtnGame.QtnEditorHelperComponent.BuildTextForLabel
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnEditorHelperComponent::BuildTextForLabel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorHelperComponent", "BuildTextForLabel");

	Params::UQtnEditorHelperComponent_BuildTextForLabel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnEditorUtilities
// (None)

class UClass* UQtnEditorUtilities::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEditorUtilities");

	return Clss;
}


// QtnEditorUtilities QtnGame.Default__QtnEditorUtilities
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEditorUtilities* UQtnEditorUtilities::GetDefaultObj()
{
	static class UQtnEditorUtilities* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEditorUtilities*>(UQtnEditorUtilities::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnEditorUtilities.StaticGetPIEArc
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnEditorUtilities::StaticGetPIEArc()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorUtilities", "StaticGetPIEArc");

	Params::UQtnEditorUtilities_StaticGetPIEArc_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEditorUtilities.SaveRenderTargetAsTexture2DEditorOnly
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UTextureRenderTarget2D*      RenderTarget                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      InName                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ETextureCompressionSettingsCompressionSettings                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ETextureMipGenSettings  MipSettings                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ETextureGroup           InTextureGroup                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSRGB                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnEditorUtilities::SaveRenderTargetAsTexture2DEditorOnly(class UTextureRenderTarget2D* RenderTarget, const class FString& InName, enum class ETextureCompressionSettings CompressionSettings, enum class ETextureMipGenSettings MipSettings, enum class ETextureGroup InTextureGroup, bool bSRGB)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorUtilities", "SaveRenderTargetAsTexture2DEditorOnly");

	Params::UQtnEditorUtilities_SaveRenderTargetAsTexture2DEditorOnly_Params Parms{};

	Parms.RenderTarget = RenderTarget;
	Parms.InName = InName;
	Parms.CompressionSettings = CompressionSettings;
	Parms.MipSettings = MipSettings;
	Parms.InTextureGroup = InTextureGroup;
	Parms.bSRGB = bSRGB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEditorUtilities.DoEditorToastPassFail
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class FString                      Message                                                          (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEditorUtilities::DoEditorToastPassFail(const class FString& Message, bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorUtilities", "DoEditorToastPassFail");

	Params::UQtnEditorUtilities_DoEditorToastPassFail_Params Parms{};

	Parms.Message = Message;
	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEditorUtilities.DoEditorToast
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class FString                      Message                                                          (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEditorUtilities::DoEditorToast(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEditorUtilities", "DoEditorToast");

	Params::UQtnEditorUtilities_DoEditorToast_Params Parms{};

	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnEnemyUpgradeHandlerSubsystem
// (None)

class UClass* UQtnEnemyUpgradeHandlerSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEnemyUpgradeHandlerSubsystem");

	return Clss;
}


// QtnEnemyUpgradeHandlerSubsystem QtnGame.Default__QtnEnemyUpgradeHandlerSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEnemyUpgradeHandlerSubsystem* UQtnEnemyUpgradeHandlerSubsystem::GetDefaultObj()
{
	static class UQtnEnemyUpgradeHandlerSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEnemyUpgradeHandlerSubsystem*>(UQtnEnemyUpgradeHandlerSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.SelectMapEnemyUpgrades
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                  UpgradeTable                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ResetPrevious                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEnemyUpgradeHandlerSubsystem::SelectMapEnemyUpgrades(class UDataTable* UpgradeTable, int32 Count, bool ResetPrevious)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "SelectMapEnemyUpgrades");

	Params::UQtnEnemyUpgradeHandlerSubsystem_SelectMapEnemyUpgrades_Params Parms{};

	Parms.UpgradeTable = UpgradeTable;
	Parms.Count = Count;
	Parms.ResetPrevious = ResetPrevious;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.RollNewEnemyUpgradeDoNotApply
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                  UpgradeTable                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnUpgrade>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnUpgrade> UQtnEnemyUpgradeHandlerSubsystem::RollNewEnemyUpgradeDoNotApply(class UDataTable* UpgradeTable)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "RollNewEnemyUpgradeDoNotApply");

	Params::UQtnEnemyUpgradeHandlerSubsystem_RollNewEnemyUpgradeDoNotApply_Params Parms{};

	Parms.UpgradeTable = UpgradeTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.RollNewEnemyUpgrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                  UpgradeTable                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AnnounceUpgrade                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEnemyUpgradeHandlerSubsystem::RollNewEnemyUpgrade(class UDataTable* UpgradeTable, bool AnnounceUpgrade)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "RollNewEnemyUpgrade");

	Params::UQtnEnemyUpgradeHandlerSubsystem_RollNewEnemyUpgrade_Params Parms{};

	Parms.UpgradeTable = UpgradeTable;
	Parms.AnnounceUpgrade = AnnounceUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.RollEnemyUpgradeLevelData
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnUpgrade>     SelectedUpgrade                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnRolledUpgradeData UQtnEnemyUpgradeHandlerSubsystem::RollEnemyUpgradeLevelData(TSubclassOf<class UQtnUpgrade> SelectedUpgrade)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "RollEnemyUpgradeLevelData");

	Params::UQtnEnemyUpgradeHandlerSubsystem_RollEnemyUpgradeLevelData_Params Parms{};

	Parms.SelectedUpgrade = SelectedUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.ResetEnemyUpgradeProgress
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnEnemyUpgradeHandlerSubsystem::ResetEnemyUpgradeProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "ResetEnemyUpgradeProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.RemoveEnemyUpgrade
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnUpgrade>     EnemyUpgradeToRemove                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEnemyUpgradeHandlerSubsystem::RemoveEnemyUpgrade(TSubclassOf<class UQtnUpgrade> EnemyUpgradeToRemove)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "RemoveEnemyUpgrade");

	Params::UQtnEnemyUpgradeHandlerSubsystem_RemoveEnemyUpgrade_Params Parms{};

	Parms.EnemyUpgradeToRemove = EnemyUpgradeToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.ProcessSpawnedEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetEnemy                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEnemyUpgradeHandlerSubsystem::ProcessSpawnedEnemy(class AQtnBodyPawn* TargetEnemy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "ProcessSpawnedEnemy");

	Params::UQtnEnemyUpgradeHandlerSubsystem_ProcessSpawnedEnemy_Params Parms{};

	Parms.TargetEnemy = TargetEnemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.GetEnemyUpgradeHandlerSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnEnemyUpgradeHandlerSubsystem*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnEnemyUpgradeHandlerSubsystem* UQtnEnemyUpgradeHandlerSubsystem::GetEnemyUpgradeHandlerSubsystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "GetEnemyUpgradeHandlerSubsystem");

	Params::UQtnEnemyUpgradeHandlerSubsystem_GetEnemyUpgradeHandlerSubsystem_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.EnemyUpgradeIsInList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnUpgrade>     UpgradeClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnEnemyUpgradeHandlerSubsystem::EnemyUpgradeIsInList(TSubclassOf<class UQtnUpgrade> UpgradeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "EnemyUpgradeIsInList");

	Params::UQtnEnemyUpgradeHandlerSubsystem_EnemyUpgradeIsInList_Params Parms{};

	Parms.UpgradeClass = UpgradeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEnemyUpgradeHandlerSubsystem.AddEnemyUpgrade
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnUpgrade>     EnemyUpgradeToAdd                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AddEnemyUpgradeValues                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEnemyUpgradeHandlerSubsystem::AddEnemyUpgrade(TSubclassOf<class UQtnUpgrade> EnemyUpgradeToAdd, bool AddEnemyUpgradeValues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEnemyUpgradeHandlerSubsystem", "AddEnemyUpgrade");

	Params::UQtnEnemyUpgradeHandlerSubsystem_AddEnemyUpgrade_Params Parms{};

	Parms.EnemyUpgradeToAdd = EnemyUpgradeToAdd;
	Parms.AddEnemyUpgradeValues = AddEnemyUpgradeValues;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnEngine
// (None)

class UClass* UQtnEngine::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEngine");

	return Clss;
}


// QtnEngine QtnGame.Default__QtnEngine
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEngine* UQtnEngine::GetDefaultObj()
{
	static class UQtnEngine* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEngine*>(UQtnEngine::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnEnvQueryTestFormationSpread
// (None)

class UClass* UQtnEnvQueryTestFormationSpread::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEnvQueryTestFormationSpread");

	return Clss;
}


// QtnEnvQueryTestFormationSpread QtnGame.Default__QtnEnvQueryTestFormationSpread
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEnvQueryTestFormationSpread* UQtnEnvQueryTestFormationSpread::GetDefaultObj()
{
	static class UQtnEnvQueryTestFormationSpread* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEnvQueryTestFormationSpread*>(UQtnEnvQueryTestFormationSpread::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnItemComponent
// (None)

class UClass* UQtnItemComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnItemComponent");

	return Clss;
}


// QtnItemComponent QtnGame.Default__QtnItemComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnItemComponent* UQtnItemComponent::GetDefaultObj()
{
	static class UQtnItemComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnItemComponent*>(UQtnItemComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnEquippableComponent
// (None)

class UClass* UQtnEquippableComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEquippableComponent");

	return Clss;
}


// QtnEquippableComponent QtnGame.Default__QtnEquippableComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEquippableComponent* UQtnEquippableComponent::GetDefaultObj()
{
	static class UQtnEquippableComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEquippableComponent*>(UQtnEquippableComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnEquippableComponent.ServerSetEquipped
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               IsEquipped                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEquippableComponent::ServerSetEquipped(bool IsEquipped)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEquippableComponent", "ServerSetEquipped");

	Params::UQtnEquippableComponent_ServerSetEquipped_Params Parms{};

	Parms.IsEquipped = IsEquipped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEquippableComponent.OnUnEquip
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEquippableComponent::OnUnEquip(class AQtnBodyPawn* bodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEquippableComponent", "OnUnEquip");

	Params::UQtnEquippableComponent_OnUnEquip_Params Parms{};

	Parms.bodyPawn = bodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnEquippableComponent.OnRep_isEquipped
// (Final, Native, Private)
// Parameters:

void UQtnEquippableComponent::OnRep_isEquipped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEquippableComponent", "OnRep_isEquipped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEquippableComponent.OnEquip
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEquippableComponent::OnEquip(class AQtnBodyPawn* bodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEquippableComponent", "OnEquip");

	Params::UQtnEquippableComponent_OnEquip_Params Parms{};

	Parms.bodyPawn = bodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnEquippableComponent.IsRanged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnEquippableComponent::IsRanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEquippableComponent", "IsRanged");

	Params::UQtnEquippableComponent_IsRanged_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEquippableComponent.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnEquippableComponent::IsEquipped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEquippableComponent", "IsEquipped");

	Params::UQtnEquippableComponent_IsEquipped_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnEventContextProviderInterface
// (None)

class UClass* IQtnEventContextProviderInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEventContextProviderInterface");

	return Clss;
}


// QtnEventContextProviderInterface QtnGame.Default__QtnEventContextProviderInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnEventContextProviderInterface* IQtnEventContextProviderInterface::GetDefaultObj()
{
	static class IQtnEventContextProviderInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnEventContextProviderInterface*>(IQtnEventContextProviderInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnEventContextProviderInterface.AddEventContext
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IQtnEventContextProviderInterface::AddEventContext(struct FQtnEventMessage& EventMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventContextProviderInterface", "AddEventContext");

	Params::IQtnEventContextProviderInterface_AddEventContext_Params Parms{};

	Parms.EventMessage = EventMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnEventHandlerLog
// (None)

class UClass* UQtnEventHandlerLog::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEventHandlerLog");

	return Clss;
}


// QtnEventHandlerLog QtnGame.Default__QtnEventHandlerLog
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEventHandlerLog* UQtnEventHandlerLog::GetDefaultObj()
{
	static class UQtnEventHandlerLog* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEventHandlerLog*>(UQtnEventHandlerLog::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnEventHandlerMissionStats
// (None)

class UClass* UQtnEventHandlerMissionStats::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEventHandlerMissionStats");

	return Clss;
}


// QtnEventHandlerMissionStats QtnGame.Default__QtnEventHandlerMissionStats
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEventHandlerMissionStats* UQtnEventHandlerMissionStats::GetDefaultObj()
{
	static class UQtnEventHandlerMissionStats* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEventHandlerMissionStats*>(UQtnEventHandlerMissionStats::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnEventHandlerMissionStats.SetMissionStats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnMissionStats            NewMissionStats                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnEventHandlerMissionStats::SetMissionStats(struct FQtnMissionStats& NewMissionStats)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventHandlerMissionStats", "SetMissionStats");

	Params::UQtnEventHandlerMissionStats_SetMissionStats_Params Parms{};

	Parms.NewMissionStats = NewMissionStats;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventHandlerMissionStats.GetStatForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl            PlayerId                                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnMissionStatsType    StatType                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnEventHandlerMissionStats::GetStatForPlayer(struct FUniqueNetIdRepl& PlayerId, enum class EQtnMissionStatsType StatType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventHandlerMissionStats", "GetStatForPlayer");

	Params::UQtnEventHandlerMissionStats_GetStatForPlayer_Params Parms{};

	Parms.PlayerId = PlayerId;
	Parms.StatType = StatType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventHandlerMissionStats.GetMissionStatsForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl            PlayerId                                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnMissionStats            ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnMissionStats UQtnEventHandlerMissionStats::GetMissionStatsForPlayer(struct FUniqueNetIdRepl& PlayerId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventHandlerMissionStats", "GetMissionStatsForPlayer");

	Params::UQtnEventHandlerMissionStats_GetMissionStatsForPlayer_Params Parms{};

	Parms.PlayerId = PlayerId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventHandlerMissionStats.GetFillStatTypesForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl            PlayerId                                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<enum class EQtnMissionStatsType>InBestStats                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<enum class EQtnMissionStatsType>OutFillStats                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnEventHandlerMissionStats::GetFillStatTypesForPlayer(struct FUniqueNetIdRepl& PlayerId, TArray<enum class EQtnMissionStatsType>& InBestStats, TArray<enum class EQtnMissionStatsType>* OutFillStats)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventHandlerMissionStats", "GetFillStatTypesForPlayer");

	Params::UQtnEventHandlerMissionStats_GetFillStatTypesForPlayer_Params Parms{};

	Parms.PlayerId = PlayerId;
	Parms.InBestStats = InBestStats;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutFillStats != nullptr)
		*OutFillStats = std::move(Parms.OutFillStats);

}


// Function QtnGame.QtnEventHandlerMissionStats.GetEventHandlerMissionStatsInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnEventHandlerMissionStats*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnEventHandlerMissionStats* UQtnEventHandlerMissionStats::GetEventHandlerMissionStatsInstance(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventHandlerMissionStats", "GetEventHandlerMissionStatsInstance");

	Params::UQtnEventHandlerMissionStats_GetEventHandlerMissionStatsInstance_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventHandlerMissionStats.GetBestStatTypesForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl            PlayerId                                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumMaxStats                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<enum class EQtnMissionStatsType>OutBestStats                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnEventHandlerMissionStats::GetBestStatTypesForPlayer(struct FUniqueNetIdRepl& PlayerId, int32 NumMaxStats, TArray<enum class EQtnMissionStatsType>* OutBestStats)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventHandlerMissionStats", "GetBestStatTypesForPlayer");

	Params::UQtnEventHandlerMissionStats_GetBestStatTypesForPlayer_Params Parms{};

	Parms.PlayerId = PlayerId;
	Parms.NumMaxStats = NumMaxStats;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutBestStats != nullptr)
		*OutBestStats = std::move(Parms.OutBestStats);

}


// Class QtnGame.QtnEventHandlerTelemetry
// (None)

class UClass* UQtnEventHandlerTelemetry::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEventHandlerTelemetry");

	return Clss;
}


// QtnEventHandlerTelemetry QtnGame.Default__QtnEventHandlerTelemetry
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEventHandlerTelemetry* UQtnEventHandlerTelemetry::GetDefaultObj()
{
	static class UQtnEventHandlerTelemetry* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEventHandlerTelemetry*>(UQtnEventHandlerTelemetry::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnEventManager
// (None)

class UClass* UQtnEventManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEventManager");

	return Clss;
}


// QtnEventManager QtnGame.Default__QtnEventManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEventManager* UQtnEventManager::GetDefaultObj()
{
	static class UQtnEventManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEventManager*>(UQtnEventManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnEventManager.StaticSetEventContextVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ContextValue                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextVector(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, struct FVector& ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextVector");

	Params::UQtnEventManager_StaticSetEventContextVector_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticSetEventContextObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     ContextValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextObject(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, class UObject* ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextObject");

	Params::UQtnEventManager_StaticSetEventContextObject_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticSetEventContextName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ContextValue                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextName(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, class FName& ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextName");

	Params::UQtnEventManager_StaticSetEventContextName_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticSetEventContextInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ContextValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextInt(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, int32 ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextInt");

	Params::UQtnEventManager_StaticSetEventContextInt_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticSetEventContextGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextValue                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextGameplayTag(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, struct FGameplayTag& ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextGameplayTag");

	Params::UQtnEventManager_StaticSetEventContextGameplayTag_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticSetEventContextFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ContextValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextFloat(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, float ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextFloat");

	Params::UQtnEventManager_StaticSetEventContextFloat_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticSetEventContextClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ContextValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextClass(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, class UClass* ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextClass");

	Params::UQtnEventManager_StaticSetEventContextClass_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticSetEventContextBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ContextValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticSetEventContextBool(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, bool ContextValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticSetEventContextBool");

	Params::UQtnEventManager_StaticSetEventContextBool_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.ContextValue = ContextValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnEventManager.StaticMakeEventMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                EventType                                                        (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     EventWriter                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnEventMessage            ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnEventMessage UQtnEventManager::StaticMakeEventMessage(const struct FGameplayTag& EventType, class UObject* EventWriter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticMakeEventMessage");

	Params::UQtnEventManager_StaticMakeEventMessage_Params Parms{};

	Parms.EventType = EventType;
	Parms.EventWriter = EventWriter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventWriter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UQtnEventManager::StaticGetEventWriter(struct FQtnEventMessage& EventMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventWriter");

	Params::UQtnEventManager_StaticGetEventWriter_Params Parms{};

	Parms.EventMessage = EventMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnEventManager::StaticGetEventType(struct FQtnEventMessage& EventMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventType");

	Params::UQtnEventManager_StaticGetEventType_Params Parms{};

	Parms.EventMessage = EventMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextVector
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     DefaultValue                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnEventManager::StaticGetEventContextVector(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, struct FVector& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextVector");

	Params::UQtnEventManager_StaticGetEventContextVector_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UQtnEventManager::StaticGetEventContextObject(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, class UObject* DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextObject");

	Params::UQtnEventManager_StaticGetEventContextObject_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        DefaultValue                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UQtnEventManager::StaticGetEventContextName(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, class FName& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextName");

	Params::UQtnEventManager_StaticGetEventContextName_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnEventManager::StaticGetEventContextInt(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, int32 DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextInt");

	Params::UQtnEventManager_StaticGetEventContextInt_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                DefaultValue                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnEventManager::StaticGetEventContextGameplayTag(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, struct FGameplayTag& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextGameplayTag");

	Params::UQtnEventManager_StaticGetEventContextGameplayTag_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnEventManager::StaticGetEventContextFloat(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, float DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextFloat");

	Params::UQtnEventManager_StaticGetEventContextFloat_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UQtnEventManager::StaticGetEventContextClass(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, class UClass* DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextClass");

	Params::UQtnEventManager_StaticGetEventContextClass_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticGetEventContextBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ContextKey                                                       (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnEventManager::StaticGetEventContextBool(struct FQtnEventMessage& EventMessage, const struct FGameplayTag& ContextKey, bool DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticGetEventContextBool");

	Params::UQtnEventManager_StaticGetEventContextBool_Params Parms{};

	Parms.EventMessage = EventMessage;
	Parms.ContextKey = ContextKey;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnEventManager.StaticDispatchEventMessage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnEventManager::StaticDispatchEventMessage(class UObject* WorldContextObject, struct FQtnEventMessage& EventMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnEventManager", "StaticDispatchEventMessage");

	Params::UQtnEventManager_StaticDispatchEventMessage_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventMessage = EventMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnEventMatching
// (None)

class UClass* UQtnEventMatching::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnEventMatching");

	return Clss;
}


// QtnEventMatching QtnGame.Default__QtnEventMatching
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnEventMatching* UQtnEventMatching::GetDefaultObj()
{
	static class UQtnEventMatching* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnEventMatching*>(UQtnEventMatching::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnExponentialHeightFog
// (Actor)

class UClass* AQtnExponentialHeightFog::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnExponentialHeightFog");

	return Clss;
}


// QtnExponentialHeightFog QtnGame.Default__QtnExponentialHeightFog
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnExponentialHeightFog* AQtnExponentialHeightFog::GetDefaultObj()
{
	static class AQtnExponentialHeightFog* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnExponentialHeightFog*>(AQtnExponentialHeightFog::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFaceBlindnessFX
// (None)

class UClass* UQtnFaceBlindnessFX::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFaceBlindnessFX");

	return Clss;
}


// QtnFaceBlindnessFX QtnGame.Default__QtnFaceBlindnessFX
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFaceBlindnessFX* UQtnFaceBlindnessFX::GetDefaultObj()
{
	static class UQtnFaceBlindnessFX* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFaceBlindnessFX*>(UQtnFaceBlindnessFX::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFacialAnimComponent
// (None)

class UClass* UQtnFacialAnimComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFacialAnimComponent");

	return Clss;
}


// QtnFacialAnimComponent QtnGame.Default__QtnFacialAnimComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFacialAnimComponent* UQtnFacialAnimComponent::GetDefaultObj()
{
	static class UQtnFacialAnimComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFacialAnimComponent*>(UQtnFacialAnimComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFacialAnimComponent.UpdateEyeTone
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              NonBodySkinTone                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::UpdateEyeTone(float NonBodySkinTone)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "UpdateEyeTone");

	Params::UQtnFacialAnimComponent_UpdateEyeTone_Params Parms{};

	Parms.NonBodySkinTone = NonBodySkinTone;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnFacialAnimComponent.StartLipSync
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::StartLipSync()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "StartLipSync");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.SetUpFace
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::SetUpFace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "SetUpFace");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.SetPupilPosition
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// struct FEyePosition                EyePos                                                           (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::SetPupilPosition(const struct FEyePosition& EyePos)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "SetPupilPosition");

	Params::UQtnFacialAnimComponent_SetPupilPosition_Params Parms{};

	Parms.EyePos = EyePos;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.SetMouthMap
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TMap<int32, class UMaterialInterface*>MouthMap                                                         (Parm, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::SetMouthMap(TMap<int32, class UMaterialInterface*> MouthMap)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "SetMouthMap");

	Params::UQtnFacialAnimComponent_SetMouthMap_Params Parms{};

	Parms.MouthMap = MouthMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.SetIsCinematic
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               IsCinematic                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::SetIsCinematic(bool IsCinematic)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "SetIsCinematic");

	Params::UQtnFacialAnimComponent_SetIsCinematic_Params Parms{};

	Parms.IsCinematic = IsCinematic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.SetFacialExpression
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bStarting                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          InEyeMat                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          InMouthMat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEyePosition                InEyePos                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               bPersistBrows                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::SetFacialExpression(bool bStarting, class UMaterialInterface* InEyeMat, class UMaterialInterface* InMouthMat, const struct FEyePosition& InEyePos, bool bPersistBrows)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "SetFacialExpression");

	Params::UQtnFacialAnimComponent_SetFacialExpression_Params Parms{};

	Parms.bStarting = bStarting;
	Parms.InEyeMat = InEyeMat;
	Parms.InMouthMat = InMouthMat;
	Parms.InEyePos = InEyePos;
	Parms.bPersistBrows = bPersistBrows;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.SetClosedMouthOverride
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                              ClosedMouthOverride                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::SetClosedMouthOverride(int32 ClosedMouthOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "SetClosedMouthOverride");

	Params::UQtnFacialAnimComponent_SetClosedMouthOverride_Params Parms{};

	Parms.ClosedMouthOverride = ClosedMouthOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.ResetMesh
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:

void UQtnFacialAnimComponent::ResetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "ResetMesh");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnFacialAnimComponent.PostBlinkFacialUpdate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::PostBlinkFacialUpdate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "PostBlinkFacialUpdate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.GetSpeakerName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnFacialAnimComponent::GetSpeakerName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "GetSpeakerName");

	Params::UQtnFacialAnimComponent_GetSpeakerName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFacialAnimComponent.GetAndCacheVOComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UQtnVOComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVOComponent* UQtnFacialAnimComponent::GetAndCacheVOComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "GetAndCacheVOComponent");

	Params::UQtnFacialAnimComponent_GetAndCacheVOComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFacialAnimComponent.ForceBlink
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::ForceBlink()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "ForceBlink");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.FinishLipSync
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::FinishLipSync()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "FinishLipSync");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.CloseMouth
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::CloseMouth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "CloseMouth");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.CheckMouthAnim
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::CheckMouthAnim()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "CheckMouthAnim");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.BlinkToggle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bBlink                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::BlinkToggle(bool bBlink)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "BlinkToggle");

	Params::UQtnFacialAnimComponent_BlinkToggle_Params Parms{};

	Parms.bBlink = bBlink;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.AdjustLook
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              DeltaTime                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::AdjustLook(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "AdjustLook");

	Params::UQtnFacialAnimComponent_AdjustLook_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.AddEyePosition
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FEyePosition                EyePosition                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnFacialAnimComponent::AddEyePosition(const struct FEyePosition& EyePosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "AddEyePosition");

	Params::UQtnFacialAnimComponent_AddEyePosition_Params Parms{};

	Parms.EyePosition = EyePosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFacialAnimComponent.ActiveWhenGetNear
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFacialAnimComponent::ActiveWhenGetNear()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFacialAnimComponent", "ActiveWhenGetNear");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFileTransferManager
// (None)

class UClass* UQtnFileTransferManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFileTransferManager");

	return Clss;
}


// QtnFileTransferManager QtnGame.Default__QtnFileTransferManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFileTransferManager* UQtnFileTransferManager::GetDefaultObj()
{
	static class UQtnFileTransferManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFileTransferManager*>(UQtnFileTransferManager::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFootstepFXComponentNative
// (None)

class UClass* UQtnFootstepFXComponentNative::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFootstepFXComponentNative");

	return Clss;
}


// QtnFootstepFXComponentNative QtnGame.Default__QtnFootstepFXComponentNative
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFootstepFXComponentNative* UQtnFootstepFXComponentNative::GetDefaultObj()
{
	static class UQtnFootstepFXComponentNative* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFootstepFXComponentNative*>(UQtnFootstepFXComponentNative::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFootstepFXComponentNative.SpawnFootstep
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      POwner                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     InImpactLocation                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     InImpactNormal                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        InSurface                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OutImpactLocation                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OutImpactNormal                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        OutSurface                                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OutOnSnow                                                        (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraComponent*           PTrailEmitter                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsDisabled                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          PSnowDecal                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          PMudDecal                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFootstepFXComponentNative::SpawnFootstep(class AActor* POwner, struct FVector& InImpactLocation, struct FVector& InImpactNormal, enum class EPhysicalSurface InSurface, struct FVector& OutImpactLocation, struct FVector& OutImpactNormal, enum class EPhysicalSurface& OutSurface, bool& OutOnSnow, class UNiagaraComponent* PTrailEmitter, bool IsDisabled, class UMaterialInterface* PSnowDecal, class UMaterialInterface* PMudDecal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFootstepFXComponentNative", "SpawnFootstep");

	Params::UQtnFootstepFXComponentNative_SpawnFootstep_Params Parms{};

	Parms.POwner = POwner;
	Parms.InImpactLocation = InImpactLocation;
	Parms.InImpactNormal = InImpactNormal;
	Parms.InSurface = InSurface;
	Parms.OutImpactLocation = OutImpactLocation;
	Parms.OutImpactNormal = OutImpactNormal;
	Parms.OutSurface = OutSurface;
	Parms.OutOnSnow = OutOnSnow;
	Parms.PTrailEmitter = PTrailEmitter;
	Parms.IsDisabled = IsDisabled;
	Parms.PSnowDecal = PSnowDecal;
	Parms.PMudDecal = PMudDecal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFootstepFXComponentNative.FirstTimeOnMud
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void UQtnFootstepFXComponentNative::FirstTimeOnMud()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFootstepFXComponentNative", "FirstTimeOnMud");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFriendshipComponent
// (None)

class UClass* UQtnFriendshipComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFriendshipComponent");

	return Clss;
}


// QtnFriendshipComponent QtnGame.Default__QtnFriendshipComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFriendshipComponent* UQtnFriendshipComponent::GetDefaultObj()
{
	static class UQtnFriendshipComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFriendshipComponent*>(UQtnFriendshipComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorComponent
// (None)

class UClass* UQtnFrobAccumulatorComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorComponent");

	return Clss;
}


// QtnFrobAccumulatorComponent QtnGame.Default__QtnFrobAccumulatorComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorComponent* UQtnFrobAccumulatorComponent::GetDefaultObj()
{
	static class UQtnFrobAccumulatorComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorComponent*>(UQtnFrobAccumulatorComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFrobAccumulatorComponent.RemoveFillInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::RemoveFillInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "RemoveFillInhibitor");

	Params::UQtnFrobAccumulatorComponent_RemoveFillInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobAccumulatorComponent.RemoveDrainInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::RemoveDrainInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "RemoveDrainInhibitor");

	Params::UQtnFrobAccumulatorComponent_RemoveDrainInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobAccumulatorComponent.OnRep_IsLocked
// (Final, Native, Private)
// Parameters:

void UQtnFrobAccumulatorComponent::OnRep_IsLocked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "OnRep_IsLocked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobAccumulatorComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "OnDebugDisplay");

	Params::UQtnFrobAccumulatorComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnFrobAccumulatorComponent.IsFilledByTaps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnFrobAccumulatorComponent::IsFilledByTaps()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "IsFilledByTaps");

	Params::UQtnFrobAccumulatorComponent_IsFilledByTaps_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobAccumulatorComponent.IsAccumulatorLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnFrobAccumulatorComponent::IsAccumulatorLocked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "IsAccumulatorLocked");

	Params::UQtnFrobAccumulatorComponent_IsAccumulatorLocked_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobAccumulatorComponent.InhibitFillNow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::InhibitFillNow(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "InhibitFillNow");

	Params::UQtnFrobAccumulatorComponent_InhibitFillNow_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobAccumulatorComponent.InhibitDrainNow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::InhibitDrainNow(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "InhibitDrainNow");

	Params::UQtnFrobAccumulatorComponent_InhibitDrainNow_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobAccumulatorComponent.GetTotalFrobStrength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFrobAccumulatorComponent::GetTotalFrobStrength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "GetTotalFrobStrength");

	Params::UQtnFrobAccumulatorComponent_GetTotalFrobStrength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobAccumulatorComponent.GetLastFrobbingPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnFrobAccumulatorComponent::GetLastFrobbingPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "GetLastFrobbingPawn");

	Params::UQtnFrobAccumulatorComponent_GetLastFrobbingPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobAccumulatorComponent.GetFillRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFrobAccumulatorComponent::GetFillRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "GetFillRatio");

	Params::UQtnFrobAccumulatorComponent_GetFillRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobAccumulatorComponent.BumpFillRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              FillRatioBump                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::BumpFillRatio(float FillRatioBump)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "BumpFillRatio");

	Params::UQtnFrobAccumulatorComponent_BumpFillRatio_Params Parms{};

	Parms.FillRatioBump = FillRatioBump;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobAccumulatorComponent.AddFillInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxAllowedFill                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::AddFillInhibitor(class UObject* Inhibitor, float MaxAllowedFill)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "AddFillInhibitor");

	Params::UQtnFrobAccumulatorComponent_AddFillInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.MaxAllowedFill = MaxAllowedFill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobAccumulatorComponent.AddDrainInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinAllowedFill                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobAccumulatorComponent::AddDrainInhibitor(class UObject* Inhibitor, float MinAllowedFill)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobAccumulatorComponent", "AddDrainInhibitor");

	Params::UQtnFrobAccumulatorComponent_AddDrainInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.MinAllowedFill = MinAllowedFill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFSM
// (None)

class UClass* UQtnFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFSM");

	return Clss;
}


// QtnFSM QtnGame.Default__QtnFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFSM* UQtnFSM::GetDefaultObj()
{
	static class UQtnFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFSM*>(UQtnFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorFSM
// (None)

class UClass* UQtnFrobAccumulatorFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorFSM");

	return Clss;
}


// QtnFrobAccumulatorFSM QtnGame.Default__QtnFrobAccumulatorFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorFSM* UQtnFrobAccumulatorFSM::GetDefaultObj()
{
	static class UQtnFrobAccumulatorFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorFSM*>(UQtnFrobAccumulatorFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorState
// (None)

class UClass* UQtnFrobAccumulatorState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorState");

	return Clss;
}


// QtnFrobAccumulatorState QtnGame.Default__QtnFrobAccumulatorState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorState* UQtnFrobAccumulatorState::GetDefaultObj()
{
	static class UQtnFrobAccumulatorState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorState*>(UQtnFrobAccumulatorState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorStateDraining
// (None)

class UClass* UQtnFrobAccumulatorStateDraining::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorStateDraining");

	return Clss;
}


// QtnFrobAccumulatorStateDraining QtnGame.Default__QtnFrobAccumulatorStateDraining
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorStateDraining* UQtnFrobAccumulatorStateDraining::GetDefaultObj()
{
	static class UQtnFrobAccumulatorStateDraining* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorStateDraining*>(UQtnFrobAccumulatorStateDraining::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorStateEmpty
// (None)

class UClass* UQtnFrobAccumulatorStateEmpty::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorStateEmpty");

	return Clss;
}


// QtnFrobAccumulatorStateEmpty QtnGame.Default__QtnFrobAccumulatorStateEmpty
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorStateEmpty* UQtnFrobAccumulatorStateEmpty::GetDefaultObj()
{
	static class UQtnFrobAccumulatorStateEmpty* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorStateEmpty*>(UQtnFrobAccumulatorStateEmpty::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorStateFilling
// (None)

class UClass* UQtnFrobAccumulatorStateFilling::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorStateFilling");

	return Clss;
}


// QtnFrobAccumulatorStateFilling QtnGame.Default__QtnFrobAccumulatorStateFilling
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorStateFilling* UQtnFrobAccumulatorStateFilling::GetDefaultObj()
{
	static class UQtnFrobAccumulatorStateFilling* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorStateFilling*>(UQtnFrobAccumulatorStateFilling::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorStateFull
// (None)

class UClass* UQtnFrobAccumulatorStateFull::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorStateFull");

	return Clss;
}


// QtnFrobAccumulatorStateFull QtnGame.Default__QtnFrobAccumulatorStateFull
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorStateFull* UQtnFrobAccumulatorStateFull::GetDefaultObj()
{
	static class UQtnFrobAccumulatorStateFull* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorStateFull*>(UQtnFrobAccumulatorStateFull::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobAccumulatorStateSuspended
// (None)

class UClass* UQtnFrobAccumulatorStateSuspended::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobAccumulatorStateSuspended");

	return Clss;
}


// QtnFrobAccumulatorStateSuspended QtnGame.Default__QtnFrobAccumulatorStateSuspended
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobAccumulatorStateSuspended* UQtnFrobAccumulatorStateSuspended::GetDefaultObj()
{
	static class UQtnFrobAccumulatorStateSuspended* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobAccumulatorStateSuspended*>(UQtnFrobAccumulatorStateSuspended::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobbableComponent
// (SceneComponent)

class UClass* UQtnFrobbableComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobbableComponent");

	return Clss;
}


// QtnFrobbableComponent QtnGame.Default__QtnFrobbableComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobbableComponent* UQtnFrobbableComponent::GetDefaultObj()
{
	static class UQtnFrobbableComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobbableComponent*>(UQtnFrobbableComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFrobbableComponent.RemoveFrobInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     PInhibitor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobbableComponent::RemoveFrobInhibitor(class UObject* PInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "RemoveFrobInhibitor");

	Params::UQtnFrobbableComponent_RemoveFrobInhibitor_Params Parms{};

	Parms.PInhibitor = PInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobbableComponent.RemoveFrobGate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnFrobGate>    FrobGateClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobbableComponent::RemoveFrobGate(TSubclassOf<class UQtnFrobGate> FrobGateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "RemoveFrobGate");

	Params::UQtnFrobbableComponent_RemoveFrobGate_Params Parms{};

	Parms.FrobGateClass = FrobGateClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobbableComponent.OnRep_FrobbingPawn
// (Final, Native, Private)
// Parameters:

void UQtnFrobbableComponent::OnRep_FrobbingPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "OnRep_FrobbingPawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobbableComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobbableComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "OnDebugDisplay");

	Params::UQtnFrobbableComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnFrobbableComponent.MulticastRefreshFrobbingPawn
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AQtnBodyPawn*                PFrobbingPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobbableComponent::MulticastRefreshFrobbingPawn(class AQtnBodyPawn* PFrobbingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "MulticastRefreshFrobbingPawn");

	Params::UQtnFrobbableComponent_MulticastRefreshFrobbingPawn_Params Parms{};

	Parms.PFrobbingPawn = PFrobbingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobbableComponent.GetCurrentFrobbingPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnFrobbableComponent::GetCurrentFrobbingPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "GetCurrentFrobbingPawn");

	Params::UQtnFrobbableComponent_GetCurrentFrobbingPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobbableComponent.CanBeTargetedBP
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    PTargetingPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnFrobbableComponent::CanBeTargetedBP(class AQtnPawn* PTargetingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "CanBeTargetedBP");

	Params::UQtnFrobbableComponent_CanBeTargetedBP_Params Parms{};

	Parms.PTargetingPawn = PTargetingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobbableComponent.AddFrobInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     PInhibitor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobbableComponent::AddFrobInhibitor(class UObject* PInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "AddFrobInhibitor");

	Params::UQtnFrobbableComponent_AddFrobInhibitor_Params Parms{};

	Parms.PInhibitor = PInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFrobbableComponent.AddFrobGate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnFrobGate>    FrobGateClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFrobbableComponent::AddFrobGate(TSubclassOf<class UQtnFrobGate> FrobGateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobbableComponent", "AddFrobGate");

	Params::UQtnFrobbableComponent_AddFrobGate_Params Parms{};

	Parms.FrobGateClass = FrobGateClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFrobGate
// (None)

class UClass* UQtnFrobGate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobGate");

	return Clss;
}


// QtnFrobGate QtnGame.Default__QtnFrobGate
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFrobGate* UQtnFrobGate::GetDefaultObj()
{
	static class UQtnFrobGate* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFrobGate*>(UQtnFrobGate::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFrobGateInterface
// (None)

class UClass* IQtnFrobGateInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFrobGateInterface");

	return Clss;
}


// QtnFrobGateInterface QtnGame.Default__QtnFrobGateInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnFrobGateInterface* IQtnFrobGateInterface::GetDefaultObj()
{
	static class IQtnFrobGateInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnFrobGateInterface*>(IQtnFrobGateInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFrobGateInterface.IsFrobAllowed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnFrobbableComponent*      FrobbableComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnFrobGateInterface::IsFrobAllowed(class AQtnBodyPawn* bodyPawn, class UQtnFrobbableComponent* FrobbableComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobGateInterface", "IsFrobAllowed");

	Params::IQtnFrobGateInterface_IsFrobAllowed_Params Parms{};

	Parms.bodyPawn = bodyPawn;
	Parms.FrobbableComponent = FrobbableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFrobGateInterface.GetRejectionMessage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnFrobbableComponent*      FrobbableComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IQtnFrobGateInterface::GetRejectionMessage(class AQtnBodyPawn* bodyPawn, class UQtnFrobbableComponent* FrobbableComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFrobGateInterface", "GetRejectionMessage");

	Params::IQtnFrobGateInterface_GetRejectionMessage_Params Parms{};

	Parms.bodyPawn = bodyPawn;
	Parms.FrobbableComponent = FrobbableComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnFullBodyFSM
// (None)

class UClass* UQtnFullBodyFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyFSM");

	return Clss;
}


// QtnFullBodyFSM QtnGame.Default__QtnFullBodyFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyFSM* UQtnFullBodyFSM::GetDefaultObj()
{
	static class UQtnFullBodyFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyFSM*>(UQtnFullBodyFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFullBodyState
// (None)

class UClass* UQtnFullBodyState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyState");

	return Clss;
}


// QtnFullBodyState QtnGame.Default__QtnFullBodyState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyState* UQtnFullBodyState::GetDefaultObj()
{
	static class UQtnFullBodyState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyState*>(UQtnFullBodyState::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFullBodyState.RequestHitReactionState
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactInfo                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnFullBodyState::RequestHitReactionState(struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyState", "RequestHitReactionState");

	Params::UQtnFullBodyState_RequestHitReactionState_Params Parms{};

	Parms.DamageInfo = DamageInfo;
	Parms.HitReactInfo = HitReactInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFullBodyState.OnMovementBlocked
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                  Impact                                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnFullBodyState::OnMovementBlocked(struct FHitResult& Impact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyState", "OnMovementBlocked");

	Params::UQtnFullBodyState_OnMovementBlocked_Params Parms{};

	Parms.Impact = Impact;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnFullBodyState.HandleDamageReceived
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactInfo                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnFullBodyState::HandleDamageReceived(struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyState", "HandleDamageReceived");

	Params::UQtnFullBodyState_HandleDamageReceived_Params Parms{};

	Parms.DamageInfo = DamageInfo;
	Parms.HitReactInfo = HitReactInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFullBodyState.CheckForVerbInput
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnFullBodyState::CheckForVerbInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyState", "CheckForVerbInput");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFullBodyStateAction
// (None)

class UClass* UQtnFullBodyStateAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateAction");

	return Clss;
}


// QtnFullBodyStateAction QtnGame.Default__QtnFullBodyStateAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateAction* UQtnFullBodyStateAction::GetDefaultObj()
{
	static class UQtnFullBodyStateAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateAction*>(UQtnFullBodyStateAction::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFullBodyStateDead
// (None)

class UClass* UQtnFullBodyStateDead::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateDead");

	return Clss;
}


// QtnFullBodyStateDead QtnGame.Default__QtnFullBodyStateDead
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateDead* UQtnFullBodyStateDead::GetDefaultObj()
{
	static class UQtnFullBodyStateDead* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateDead*>(UQtnFullBodyStateDead::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFullBodyStateDead.SetCanBeRevived
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               CanBeRevived                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFullBodyStateDead::SetCanBeRevived(bool CanBeRevived)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateDead", "SetCanBeRevived");

	Params::UQtnFullBodyStateDead_SetCanBeRevived_Params Parms{};

	Parms.CanBeRevived = CanBeRevived;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFullBodyStateDead.PlayDeathMontage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnPawnMontage             DeathMontage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               OverrideCrawl                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateDead::PlayDeathMontage(struct FQtnPawnMontage& DeathMontage, bool OverrideCrawl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateDead", "PlayDeathMontage");

	Params::UQtnFullBodyStateDead_PlayDeathMontage_Params Parms{};

	Parms.DeathMontage = DeathMontage;
	Parms.OverrideCrawl = OverrideCrawl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateDead.OnDeathMontageDone
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFullBodyStateDead::OnDeathMontageDone(class UAnimMontage* Montage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateDead", "OnDeathMontageDone");

	Params::UQtnFullBodyStateDead_OnDeathMontageDone_Params Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFullBodyStateDead.IsPlayingDeathMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnFullBodyStateDead::IsPlayingDeathMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateDead", "IsPlayingDeathMontage");

	Params::UQtnFullBodyStateDead_IsPlayingDeathMontage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateDead.GetCanBeRevived
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               CanCrawl                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnFullBodyStateDead::GetCanBeRevived(bool* CanCrawl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateDead", "GetCanBeRevived");

	Params::UQtnFullBodyStateDead_GetCanBeRevived_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CanCrawl != nullptr)
		*CanCrawl = Parms.CanCrawl;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnFullBodyStateEngaged
// (None)

class UClass* UQtnFullBodyStateEngaged::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateEngaged");

	return Clss;
}


// QtnFullBodyStateEngaged QtnGame.Default__QtnFullBodyStateEngaged
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateEngaged* UQtnFullBodyStateEngaged::GetDefaultObj()
{
	static class UQtnFullBodyStateEngaged* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateEngaged*>(UQtnFullBodyStateEngaged::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFullBodyStateHitReaction
// (None)

class UClass* UQtnFullBodyStateHitReaction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateHitReaction");

	return Clss;
}


// QtnFullBodyStateHitReaction QtnGame.Default__QtnFullBodyStateHitReaction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateHitReaction* UQtnFullBodyStateHitReaction::GetDefaultObj()
{
	static class UQtnFullBodyStateHitReaction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateHitReaction*>(UQtnFullBodyStateHitReaction::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFullBodyStateHitReaction.TransitionToKnockdown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              KnockdownSeconds                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFullBodyStateHitReaction::TransitionToKnockdown(float KnockdownSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "TransitionToKnockdown");

	Params::UQtnFullBodyStateHitReaction_TransitionToKnockdown_Params Parms{};

	Parms.KnockdownSeconds = KnockdownSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFullBodyStateHitReaction.PlayReactionMontage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnPawnMontage             ReactionMontage                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              PlayRate                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartTime                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateHitReaction::PlayReactionMontage(struct FQtnPawnMontage& ReactionMontage, float PlayRate, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "PlayReactionMontage");

	Params::UQtnFullBodyStateHitReaction_PlayReactionMontage_Params Parms{};

	Parms.ReactionMontage = ReactionMontage;
	Parms.PlayRate = PlayRate;
	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateHitReaction.IsMontageFinishPending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnFullBodyStateHitReaction::IsMontageFinishPending()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "IsMontageFinishPending");

	Params::UQtnFullBodyStateHitReaction_IsMontageFinishPending_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateHitReaction.GetRemainingReactionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateHitReaction::GetRemainingReactionTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "GetRemainingReactionTime");

	Params::UQtnFullBodyStateHitReaction_GetRemainingReactionTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateHitReaction.GetReactionInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnDamageInfo              ReactedDamageInfo                                                (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactInfo                                                     (Parm, OutParm, NativeAccessSpecifierPublic)

void UQtnFullBodyStateHitReaction::GetReactionInfo(struct FQtnDamageInfo* ReactedDamageInfo, struct FQtnHitReactionInfo* HitReactInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "GetReactionInfo");

	Params::UQtnFullBodyStateHitReaction_GetReactionInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ReactedDamageInfo != nullptr)
		*ReactedDamageInfo = std::move(Parms.ReactedDamageInfo);

	if (HitReactInfo != nullptr)
		*HitReactInfo = std::move(Parms.HitReactInfo);

}


// Function QtnGame.QtnFullBodyStateHitReaction.GetElapsedReactionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateHitReaction::GetElapsedReactionTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "GetElapsedReactionTime");

	Params::UQtnFullBodyStateHitReaction_GetElapsedReactionTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateHitReaction.GetCurrentReactionMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnPawnMontage             ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnPawnMontage UQtnFullBodyStateHitReaction::GetCurrentReactionMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "GetCurrentReactionMontage");

	Params::UQtnFullBodyStateHitReaction_GetCurrentReactionMontage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateHitReaction.GetCurrentDamageReaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnDamageReaction*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDamageReaction* UQtnFullBodyStateHitReaction::GetCurrentDamageReaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "GetCurrentDamageReaction");

	Params::UQtnFullBodyStateHitReaction_GetCurrentDamageReaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateHitReaction.FinishCurrentMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               JumpToOutro                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFullBodyStateHitReaction::FinishCurrentMontage(bool JumpToOutro)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateHitReaction", "FinishCurrentMontage");

	Params::UQtnFullBodyStateHitReaction_FinishCurrentMontage_Params Parms{};

	Parms.JumpToOutro = JumpToOutro;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFullBodyStateJumpFall
// (None)

class UClass* UQtnFullBodyStateJumpFall::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateJumpFall");

	return Clss;
}


// QtnFullBodyStateJumpFall QtnGame.Default__QtnFullBodyStateJumpFall
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateJumpFall* UQtnFullBodyStateJumpFall::GetDefaultObj()
{
	static class UQtnFullBodyStateJumpFall* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateJumpFall*>(UQtnFullBodyStateJumpFall::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFullBodyStateKnockedDown
// (None)

class UClass* UQtnFullBodyStateKnockedDown::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateKnockedDown");

	return Clss;
}


// QtnFullBodyStateKnockedDown QtnGame.Default__QtnFullBodyStateKnockedDown
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateKnockedDown* UQtnFullBodyStateKnockedDown::GetDefaultObj()
{
	static class UQtnFullBodyStateKnockedDown* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateKnockedDown*>(UQtnFullBodyStateKnockedDown::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFullBodyStateKnockedDown.PlayDownedMontage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnPawnMontage             DownedMontage                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              KnockdownDuration                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateKnockedDown::PlayDownedMontage(struct FQtnPawnMontage& DownedMontage, float KnockdownDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateKnockedDown", "PlayDownedMontage");

	Params::UQtnFullBodyStateKnockedDown_PlayDownedMontage_Params Parms{};

	Parms.DownedMontage = DownedMontage;
	Parms.KnockdownDuration = KnockdownDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateKnockedDown.OnDownedMontageDone
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFullBodyStateKnockedDown::OnDownedMontageDone(class UAnimMontage* Montage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateKnockedDown", "OnDownedMontageDone");

	Params::UQtnFullBodyStateKnockedDown_OnDownedMontageDone_Params Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFullBodyStateKnockedDown.GetRemainingKnockdownTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateKnockedDown::GetRemainingKnockdownTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateKnockedDown", "GetRemainingKnockdownTime");

	Params::UQtnFullBodyStateKnockedDown_GetRemainingKnockdownTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateKnockedDown.GetFailsafeElapsedKnockdownTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateKnockedDown::GetFailsafeElapsedKnockdownTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateKnockedDown", "GetFailsafeElapsedKnockdownTime");

	Params::UQtnFullBodyStateKnockedDown_GetFailsafeElapsedKnockdownTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateKnockedDown.GetElapsedKnockdownTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateKnockedDown::GetElapsedKnockdownTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateKnockedDown", "GetElapsedKnockdownTime");

	Params::UQtnFullBodyStateKnockedDown_GetElapsedKnockdownTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateKnockedDown.GetDefaultKnockdownDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnFullBodyStateKnockedDown::GetDefaultKnockdownDuration()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateKnockedDown", "GetDefaultKnockdownDuration");

	Params::UQtnFullBodyStateKnockedDown_GetDefaultKnockdownDuration_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFullBodyStateKnockedDown.FinishKnockdown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               SkipOutro                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFullBodyStateKnockedDown::FinishKnockdown(bool SkipOutro)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullBodyStateKnockedDown", "FinishKnockdown");

	Params::UQtnFullBodyStateKnockedDown_FinishKnockdown_Params Parms{};

	Parms.SkipOutro = SkipOutro;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnFullBodyStateLocomotion
// (None)

class UClass* UQtnFullBodyStateLocomotion::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateLocomotion");

	return Clss;
}


// QtnFullBodyStateLocomotion QtnGame.Default__QtnFullBodyStateLocomotion
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateLocomotion* UQtnFullBodyStateLocomotion::GetDefaultObj()
{
	static class UQtnFullBodyStateLocomotion* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateLocomotion*>(UQtnFullBodyStateLocomotion::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFullBodyStateMantle
// (None)

class UClass* UQtnFullBodyStateMantle::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateMantle");

	return Clss;
}


// QtnFullBodyStateMantle QtnGame.Default__QtnFullBodyStateMantle
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateMantle* UQtnFullBodyStateMantle::GetDefaultObj()
{
	static class UQtnFullBodyStateMantle* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateMantle*>(UQtnFullBodyStateMantle::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFullBodyStateVerb
// (None)

class UClass* UQtnFullBodyStateVerb::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullBodyStateVerb");

	return Clss;
}


// QtnFullBodyStateVerb QtnGame.Default__QtnFullBodyStateVerb
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFullBodyStateVerb* UQtnFullBodyStateVerb::GetDefaultObj()
{
	static class UQtnFullBodyStateVerb* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFullBodyStateVerb*>(UQtnFullBodyStateVerb::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnFullyStreamedInAssets
// (Actor)

class UClass* AQtnFullyStreamedInAssets::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFullyStreamedInAssets");

	return Clss;
}


// QtnFullyStreamedInAssets QtnGame.Default__QtnFullyStreamedInAssets
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnFullyStreamedInAssets* AQtnFullyStreamedInAssets::GetDefaultObj()
{
	static class AQtnFullyStreamedInAssets* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnFullyStreamedInAssets*>(AQtnFullyStreamedInAssets::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFullyStreamedInAssets.AreAllAssetsFullyStreamedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnFullyStreamedInAssets::AreAllAssetsFullyStreamedIn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFullyStreamedInAssets", "AreAllAssetsFullyStreamedIn");

	Params::AQtnFullyStreamedInAssets_AreAllAssetsFullyStreamedIn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnFXActor
// (Actor)

class UClass* AQtnFXActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFXActor");

	return Clss;
}


// QtnFXActor QtnGame.Default__QtnFXActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnFXActor* AQtnFXActor::GetDefaultObj()
{
	static class AQtnFXActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnFXActor*>(AQtnFXActor::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFXActor.PostBeginEffectWithContactEventData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnContactEventData        ContactEventData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnFXActor::PostBeginEffectWithContactEventData(struct FQtnContactEventData& ContactEventData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "PostBeginEffectWithContactEventData");

	Params::AQtnFXActor_PostBeginEffectWithContactEventData_Params Parms{};

	Parms.ContactEventData = ContactEventData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnFXActor.OverwriteNiagaraDefSys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               LowCost                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraSystem*              NiagaraSystem                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OverwriteNiagaraDefSys(int32 Index, bool LowCost, class UNiagaraSystem* NiagaraSystem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OverwriteNiagaraDefSys");

	Params::AQtnFXActor_OverwriteNiagaraDefSys_Params Parms{};

	Parms.Index = Index;
	Parms.LowCost = LowCost;
	Parms.NiagaraSystem = NiagaraSystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnPostProcessFXFinished
// (Final, Native, Public)
// Parameters:
// class UQtnPostProcessFX*           PFinishedPPFX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnPostProcessFXFinished(class UQtnPostProcessFX* PFinishedPPFX)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnPostProcessFXFinished");

	Params::AQtnFXActor_OnPostProcessFXFinished_Params Parms{};

	Parms.PFinishedPPFX = PFinishedPPFX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnParticleSystemFinished
// (Final, Native, Public)
// Parameters:
// class UParticleSystemComponent*    PFinishedPSC                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnParticleSystemFinished(class UParticleSystemComponent* PFinishedPSC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnParticleSystemFinished");

	Params::AQtnFXActor_OnParticleSystemFinished_Params Parms{};

	Parms.PFinishedPSC = PFinishedPSC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnOwnerVisibilityStateChanged
// (Final, Native, Public)
// Parameters:
// bool                               IsHidden                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnOwnerVisibilityStateChanged(bool IsHidden)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnOwnerVisibilityStateChanged");

	Params::AQtnFXActor_OnOwnerVisibilityStateChanged_Params Parms{};

	Parms.IsHidden = IsHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnOverlayFXFinished
// (Final, Native, Public)
// Parameters:
// class UQtnOverlayFX*               PFinishedOFX                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnOverlayFXFinished(class UQtnOverlayFX* PFinishedOFX)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnOverlayFXFinished");

	Params::AQtnFXActor_OnOverlayFXFinished_Params Parms{};

	Parms.PFinishedOFX = PFinishedOFX;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnNiagaraFinished
// (Final, Native, Public)
// Parameters:
// class UNiagaraComponent*           PFinishedNC                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnNiagaraFinished(class UNiagaraComponent* PFinishedNC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnNiagaraFinished");

	Params::AQtnFXActor_OnNiagaraFinished_Params Parms{};

	Parms.PFinishedNC = PFinishedNC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnLoopingTargetActorEndPlay
// (Final, Native, Public)
// Parameters:
// class AActor*                      PActor                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EEndPlayReason          EndPlayReason                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnLoopingTargetActorEndPlay(class AActor* PActor, enum class EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnLoopingTargetActorEndPlay");

	Params::AQtnFXActor_OnLoopingTargetActorEndPlay_Params Parms{};

	Parms.PActor = PActor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnFXElementFinished
// (Final, Native, Public)
// Parameters:
// class UObject*                     PFinishedElement                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnFXElementFinished(class UObject* PFinishedElement)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnFXElementFinished");

	Params::AQtnFXActor_OnFXElementFinished_Params Parms{};

	Parms.PFinishedElement = PFinishedElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnForceFeedbackFinished
// (Final, Native, Public)
// Parameters:
// class UForceFeedbackComponent*     PFinishedFFC                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnForceFeedbackFinished(class UForceFeedbackComponent* PFinishedFFC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnForceFeedbackFinished");

	Params::AQtnFXActor_OnForceFeedbackFinished_Params Parms{};

	Parms.PFinishedFFC = PFinishedFFC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnEffectStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnEffectStarted(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnEffectStarted");

	Params::AQtnFXActor_OnEffectStarted_Params Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnFXActor.OnEffectEnded
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnFXActor::OnEffectEnded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnEffectEnded");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnFXActor.OnDecalFinished
// (Final, Native, Public)
// Parameters:
// class UQtnDecalComponent*          PFinishedDecal                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnDecalFinished(class UQtnDecalComponent* PFinishedDecal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnDecalFinished");

	Params::AQtnFXActor_OnDecalFinished_Params Parms{};

	Parms.PFinishedDecal = PFinishedDecal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnCameraShakeFinished
// (Final, Native, Public)
// Parameters:
// class UCameraShakeSourceComponent* PFinishedCSC                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnCameraShakeFinished(class UCameraShakeSourceComponent* PFinishedCSC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnCameraShakeFinished");

	Params::AQtnFXActor_OnCameraShakeFinished_Params Parms{};

	Parms.PFinishedCSC = PFinishedCSC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.OnAudioFinished
// (Final, Native, Public)
// Parameters:
// class UAudioComponent*             PFinishedAC                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::OnAudioFinished(class UAudioComponent* PFinishedAC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "OnAudioFinished");

	Params::AQtnFXActor_OnAudioFinished_Params Parms{};

	Parms.PFinishedAC = PFinishedAC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.HandleSimPause
// (Final, Native, Public)
// Parameters:
// bool                               Paused                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnFXActor::HandleSimPause(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "HandleSimPause");

	Params::AQtnFXActor_HandleSimPause_Params Parms{};

	Parms.Paused = Paused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXActor.GetTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnFXActor::GetTargetActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetTargetActor");

	Params::AQtnFXActor_GetTargetActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetPostProcessObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPostProcessFX*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPostProcessFX* AQtnFXActor::GetPostProcessObject(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetPostProcessObject");

	Params::AQtnFXActor_GetPostProcessObject_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetPostProcessMaterialInstances
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMaterialInstanceDynamic*>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMaterialInstanceDynamic*> AQtnFXActor::GetPostProcessMaterialInstances(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetPostProcessMaterialInstances");

	Params::AQtnFXActor_GetPostProcessMaterialInstances_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetParticleSystemComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UParticleSystemComponent*    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystemComponent* AQtnFXActor::GetParticleSystemComponent(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetParticleSystemComponent");

	Params::AQtnFXActor_GetParticleSystemComponent_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetOverlayMaterialInstances
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMaterialInstanceDynamic*>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMaterialInstanceDynamic*> AQtnFXActor::GetOverlayMaterialInstances(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetOverlayMaterialInstances");

	Params::AQtnFXActor_GetOverlayMaterialInstances_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetNiagaraComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNiagaraComponent*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNiagaraComponent* AQtnFXActor::GetNiagaraComponent(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetNiagaraComponent");

	Params::AQtnFXActor_GetNiagaraComponent_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetDecalMaterialInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* AQtnFXActor::GetDecalMaterialInstance(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetDecalMaterialInstance");

	Params::AQtnFXActor_GetDecalMaterialInstance_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetDecalComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDecalComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDecalComponent* AQtnFXActor::GetDecalComponent(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetDecalComponent");

	Params::AQtnFXActor_GetDecalComponent_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnFXActor.GetAudioComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAudioComponent* AQtnFXActor::GetAudioComponent(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXActor", "GetAudioComponent");

	Params::AQtnFXActor_GetAudioComponent_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnFXInterceptionInterface
// (None)

class UClass* IQtnFXInterceptionInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFXInterceptionInterface");

	return Clss;
}


// QtnFXInterceptionInterface QtnGame.Default__QtnFXInterceptionInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnFXInterceptionInterface* IQtnFXInterceptionInterface::GetDefaultObj()
{
	static class IQtnFXInterceptionInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnFXInterceptionInterface*>(IQtnFXInterceptionInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFXInterceptionInterface.CheckIsFXIntercepted
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AQtnFXActor>     FxClass                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnFXInterceptionInterface::CheckIsFXIntercepted(TSubclassOf<class AQtnFXActor> FxClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXInterceptionInterface", "CheckIsFXIntercepted");

	Params::IQtnFXInterceptionInterface_CheckIsFXIntercepted_Params Parms{};

	Parms.FxClass = FxClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnFXManager
// (None)

class UClass* UQtnFXManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnFXManager");

	return Clss;
}


// QtnFXManager QtnGame.Default__QtnFXManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnFXManager* UQtnFXManager::GetDefaultObj()
{
	static class UQtnFXManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnFXManager*>(UQtnFXManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnFXManager.BP_SetEffectsHidden
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Hidden                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFXManager::BP_SetEffectsHidden(class AActor* TargetActor, bool Hidden)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXManager", "BP_SetEffectsHidden");

	Params::UQtnFXManager_BP_SetEffectsHidden_Params Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Hidden = Hidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXManager.BP_EndEffectByReference
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AQtnFXActor*                 FXActor                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFXManager::BP_EndEffectByReference(class AQtnFXActor* FXActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXManager", "BP_EndEffectByReference");

	Params::UQtnFXManager_BP_EndEffectByReference_Params Parms{};

	Parms.FXActor = FXActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXManager.BP_EndEffect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnFXActor>     FxClass                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnFXManager::BP_EndEffect(TSubclassOf<class AQtnFXActor> FxClass, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXManager", "BP_EndEffect");

	Params::UQtnFXManager_BP_EndEffect_Params Parms{};

	Parms.FxClass = FxClass;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnFXManager.BP_BeginEffect
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnFXActor>     FxClass                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     LocationOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    RotationOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// class FName                        SocketOverride                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EAttachmentRule         LocationRule                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EAttachmentRule         RotationRule                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      BeamTargetActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EAttachmentRule         ScaleRule                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DoAttach                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    NoiseCulpritPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnFXActor*                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnFXActor* UQtnFXManager::BP_BeginEffect(TSubclassOf<class AQtnFXActor> FxClass, class AActor* TargetActor, const struct FVector& LocationOverride, const struct FRotator& RotationOverride, class FName SocketOverride, enum class EAttachmentRule LocationRule, enum class EAttachmentRule RotationRule, class AActor* BeamTargetActor, enum class EAttachmentRule ScaleRule, bool DoAttach, class AQtnPawn* NoiseCulpritPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnFXManager", "BP_BeginEffect");

	Params::UQtnFXManager_BP_BeginEffect_Params Parms{};

	Parms.FxClass = FxClass;
	Parms.TargetActor = TargetActor;
	Parms.LocationOverride = LocationOverride;
	Parms.RotationOverride = RotationOverride;
	Parms.SocketOverride = SocketOverride;
	Parms.LocationRule = LocationRule;
	Parms.RotationRule = RotationRule;
	Parms.BeamTargetActor = BeamTargetActor;
	Parms.ScaleRule = ScaleRule;
	Parms.DoAttach = DoAttach;
	Parms.NoiseCulpritPawn = NoiseCulpritPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnGameInstance
// (None)

class UClass* UQtnGameInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGameInstance");

	return Clss;
}


// QtnGameInstance QtnGame.Default__QtnGameInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnGameInstance* UQtnGameInstance::GetDefaultObj()
{
	static class UQtnGameInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnGameInstance*>(UQtnGameInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGameInstance.UpdateQtnEntryDestination
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UQtnGameInstance::UpdateQtnEntryDestination()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "UpdateQtnEntryDestination");

	Params::UQtnGameInstance_UpdateQtnEntryDestination_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.StopTelemetry
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnGameInstance::StopTelemetry()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "StopTelemetry");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.StartTelemetry
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnGameInstance::StartTelemetry()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "StartTelemetry");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.ShowGamerCard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPlayerState*             PPlayerState                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGameInstance::ShowGamerCard(class AQtnPlayerState* PPlayerState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "ShowGamerCard");

	Params::UQtnGameInstance_ShowGamerCard_Params Parms{};

	Parms.PPlayerState = PPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.ShowAccountPicker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::ShowAccountPicker()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "ShowAccountPicker");

	Params::UQtnGameInstance_ShowAccountPicker_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.SetRemainingDemoSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              RemainingTradeshowSeconds                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGameInstance::SetRemainingDemoSeconds(float RemainingTradeshowSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "SetRemainingDemoSeconds");

	Params::UQtnGameInstance_SetRemainingDemoSeconds_Params Parms{};

	Parms.RemainingTradeshowSeconds = RemainingTradeshowSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.SetCurrentArc
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              CurrentArc                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGameInstance::SetCurrentArc(int32 CurrentArc)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "SetCurrentArc");

	Params::UQtnGameInstance_SetCurrentArc_Params Parms{};

	Parms.CurrentArc = CurrentArc;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGameInstance.ResetLocalLoggedInUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnGameInstance::ResetLocalLoggedInUser()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "ResetLocalLoggedInUser");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.RemoveInviteJoinDeferrer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     InviteJoinDeferrer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGameInstance::RemoveInviteJoinDeferrer(class UObject* InviteJoinDeferrer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "RemoveInviteJoinDeferrer");

	Params::UQtnGameInstance_RemoveInviteJoinDeferrer_Params Parms{};

	Parms.InviteJoinDeferrer = InviteJoinDeferrer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.OnPreLoadMap
// (Final, Native, Public)
// Parameters:
// class FString                      MapName                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGameInstance::OnPreLoadMap(const class FString& MapName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "OnPreLoadMap");

	Params::UQtnGameInstance_OnPreLoadMap_Params Parms{};

	Parms.MapName = MapName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.OnPostLoadMap
// (Final, Native, Public)
// Parameters:
// class UWorld*                      LoadedWorld                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGameInstance::OnPostLoadMap(class UWorld* LoadedWorld)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "OnPostLoadMap");

	Params::UQtnGameInstance_OnPostLoadMap_Params Parms{};

	Parms.LoadedWorld = LoadedWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.IsWaitingForAccountPicker
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::IsWaitingForAccountPicker()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "IsWaitingForAccountPicker");

	Params::UQtnGameInstance_IsWaitingForAccountPicker_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.IsRunningAutomatedReports
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::IsRunningAutomatedReports()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "IsRunningAutomatedReports");

	Params::UQtnGameInstance_IsRunningAutomatedReports_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.IsLoggedInOnCurrentPlatform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::IsLoggedInOnCurrentPlatform()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "IsLoggedInOnCurrentPlatform");

	Params::UQtnGameInstance_IsLoggedInOnCurrentPlatform_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.IsFullyLoggedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::IsFullyLoggedIn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "IsFullyLoggedIn");

	Params::UQtnGameInstance_IsFullyLoggedIn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.IsChangingUserProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::IsChangingUserProfile()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "IsChangingUserProfile");

	Params::UQtnGameInstance_IsChangingUserProfile_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.HandleReturningFromConstrainedMode
// (Final, Native, Public)
// Parameters:

void UQtnGameInstance::HandleReturningFromConstrainedMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "HandleReturningFromConstrainedMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.HandleEnteringConstrainedMode
// (Final, Native, Public)
// Parameters:

void UQtnGameInstance::HandleEnteringConstrainedMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "HandleEnteringConstrainedMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameInstance.GetRemainingDemoSeconds
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              TotalTradeshowSeconds                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnGameInstance::GetRemainingDemoSeconds(float* TotalTradeshowSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetRemainingDemoSeconds");

	Params::UQtnGameInstance_GetRemainingDemoSeconds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TotalTradeshowSeconds != nullptr)
		*TotalTradeshowSeconds = Parms.TotalTradeshowSeconds;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetQtnGameInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnGameInstance*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnGameInstance* UQtnGameInstance::GetQtnGameInstance(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetQtnGameInstance");

	Params::UQtnGameInstance_GetQtnGameInstance_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetLocalPlayerDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnGameInstance::GetLocalPlayerDisplayName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetLocalPlayerDisplayName");

	Params::UQtnGameInstance_GetLocalPlayerDisplayName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetLocalLoggedInUserIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnGameInstance::GetLocalLoggedInUserIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetLocalLoggedInUserIndex");

	Params::UQtnGameInstance_GetLocalLoggedInUserIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetDLCManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnDLCManager*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDLCManager* UQtnGameInstance::GetDLCManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetDLCManager");

	Params::UQtnGameInstance_GetDLCManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetCombatSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnCombatSettings*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCombatSettings* UQtnGameInstance::GetCombatSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetCombatSettings");

	Params::UQtnGameInstance_GetCombatSettings_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetCharacterAppearanceSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnCharacterAppearanceSettings*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCharacterAppearanceSettings* UQtnGameInstance::GetCharacterAppearanceSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetCharacterAppearanceSettings");

	Params::UQtnGameInstance_GetCharacterAppearanceSettings_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetCanUseUGCError
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnGameInstance::GetCanUseUGCError(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetCanUseUGCError");

	Params::UQtnGameInstance_GetCanUseUGCError_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetCanUseUGC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::GetCanUseUGC(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetCanUseUGC");

	Params::UQtnGameInstance_GetCanUseUGC_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetCanPlayError
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnGameInstance::GetCanPlayError(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetCanPlayError");

	Params::UQtnGameInstance_GetCanPlayError_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetCanPlay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::GetCanPlay(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetCanPlay");

	Params::UQtnGameInstance_GetCanPlay_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetActiveGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnGameState*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnGameState* UQtnGameInstance::GetActiveGameState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetActiveGameState");

	Params::UQtnGameInstance_GetActiveGameState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.GetAchievementsManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnAchievementsManager*     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnAchievementsManager* UQtnGameInstance::GetAchievementsManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "GetAchievementsManager");

	Params::UQtnGameInstance_GetAchievementsManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.CanPlayHordeMode
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGameInstance::CanPlayHordeMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "CanPlayHordeMode");

	Params::UQtnGameInstance_CanPlayHordeMode_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameInstance.AddInviteJoinDeferrer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     InviteJoinDeferrer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGameInstance::AddInviteJoinDeferrer(class UObject* InviteJoinDeferrer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameInstance", "AddInviteJoinDeferrer");

	Params::UQtnGameInstance_AddInviteJoinDeferrer_Params Parms{};

	Parms.InviteJoinDeferrer = InviteJoinDeferrer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnGameModeBase
// (Actor)

class UClass* AQtnGameModeBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGameModeBase");

	return Clss;
}


// QtnGameModeBase QtnGame.Default__QtnGameModeBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnGameModeBase* AQtnGameModeBase::GetDefaultObj()
{
	static class AQtnGameModeBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnGameModeBase*>(AQtnGameModeBase::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGameModeBase.QueueSeamlessTravel_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        LevelName                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameModeBase::QueueSeamlessTravel_ServerOnly(class UObject* WorldContextObject, class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameModeBase", "QueueSeamlessTravel_ServerOnly");

	Params::AQtnGameModeBase_QueueSeamlessTravel_ServerOnly_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LevelName = LevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameModeBase.EndGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnGameModeBase::EndGame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameModeBase", "EndGame");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameModeBase.CleanUpMediaSounds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnGameModeBase::CleanUpMediaSounds(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameModeBase", "CleanUpMediaSounds");

	Params::AQtnGameModeBase_CleanUpMediaSounds_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameModeBase.ChoosePlayerStartForArc
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AController*                 Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Arc                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnGameModeBase::ChoosePlayerStartForArc(class AController* Player, int32 Arc)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameModeBase", "ChoosePlayerStartForArc");

	Params::AQtnGameModeBase_ChoosePlayerStartForArc_Params Parms{};

	Parms.Player = Player;
	Parms.Arc = Arc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnGameModeMission
// (Actor)

class UClass* AQtnGameModeMission::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGameModeMission");

	return Clss;
}


// QtnGameModeMission QtnGame.Default__QtnGameModeMission
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnGameModeMission* AQtnGameModeMission::GetDefaultObj()
{
	static class AQtnGameModeMission* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnGameModeMission*>(AQtnGameModeMission::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnGameModeSocialHub
// (Actor)

class UClass* AQtnGameModeSocialHub::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGameModeSocialHub");

	return Clss;
}


// QtnGameModeSocialHub QtnGame.Default__QtnGameModeSocialHub
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnGameModeSocialHub* AQtnGameModeSocialHub::GetDefaultObj()
{
	static class AQtnGameModeSocialHub* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnGameModeSocialHub*>(AQtnGameModeSocialHub::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnGameSession
// (Actor)

class UClass* AQtnGameSession::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGameSession");

	return Clss;
}


// QtnGameSession QtnGame.Default__QtnGameSession
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnGameSession* AQtnGameSession::GetDefaultObj()
{
	static class AQtnGameSession* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnGameSession*>(AQtnGameSession::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGameSession.StaticSetPartySessionPrivacy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnSessionPrivacy      SessionPrivacy                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameSession::StaticSetPartySessionPrivacy(class UObject* WorldContextObject, enum class EQtnSessionPrivacy SessionPrivacy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameSession", "StaticSetPartySessionPrivacy");

	Params::AQtnGameSession_StaticSetPartySessionPrivacy_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SessionPrivacy = SessionPrivacy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameSession.StaticKickPlayer_AuthorityOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerState*                PlayerState                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        KickReason                                                       (Parm, NativeAccessSpecifierPublic)
// bool                               banFromReentering                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Delay                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameSession::StaticKickPlayer_AuthorityOnly(class APlayerState* PlayerState, class FText KickReason, bool banFromReentering, float Delay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameSession", "StaticKickPlayer_AuthorityOnly");

	Params::AQtnGameSession_StaticKickPlayer_AuthorityOnly_Params Parms{};

	Parms.PlayerState = PlayerState;
	Parms.KickReason = KickReason;
	Parms.banFromReentering = banFromReentering;
	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameSession.DoesPartySessionExist
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameSession::DoesPartySessionExist(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameSession", "DoesPartySessionExist");

	Params::AQtnGameSession_DoesPartySessionExist_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnGameState
// (Actor)

class UClass* AQtnGameState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGameState");

	return Clss;
}


// QtnGameState QtnGame.Default__QtnGameState
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnGameState* AQtnGameState::GetDefaultObj()
{
	static class AQtnGameState* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnGameState*>(AQtnGameState::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGameState.WaitForReadyForGameplay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnGameState*               GameState                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AQtnGameState*               ReadyGameState                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::WaitForReadyForGameplay(class AQtnGameState* GameState, const struct FLatentActionInfo& LatentInfo, class AQtnGameState** ReadyGameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "WaitForReadyForGameplay");

	Params::AQtnGameState_WaitForReadyForGameplay_Params Parms{};

	Parms.GameState = GameState;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ReadyGameState != nullptr)
		*ReadyGameState = Parms.ReadyGameState;

}


// Function QtnGame.QtnGameState.WaitForAllExpectedPlayersReady
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnGameState*               GameState                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AQtnGameState*               ReadyGameState                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumExpectedPlayers                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumReadyPlayers                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::WaitForAllExpectedPlayersReady(class AQtnGameState* GameState, const struct FLatentActionInfo& LatentInfo, class AQtnGameState** ReadyGameState, int32* NumExpectedPlayers, int32* NumReadyPlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "WaitForAllExpectedPlayersReady");

	Params::AQtnGameState_WaitForAllExpectedPlayersReady_Params Parms{};

	Parms.GameState = GameState;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ReadyGameState != nullptr)
		*ReadyGameState = Parms.ReadyGameState;

	if (NumExpectedPlayers != nullptr)
		*NumExpectedPlayers = Parms.NumExpectedPlayers;

	if (NumReadyPlayers != nullptr)
		*NumReadyPlayers = Parms.NumReadyPlayers;

}


// Function QtnGame.QtnGameState.SetScriptedVOScene_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                ScriptedVOScene                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::SetScriptedVOScene_ServerOnly(const struct FGameplayTag& ScriptedVOScene)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "SetScriptedVOScene_ServerOnly");

	Params::AQtnGameState_SetScriptedVOScene_ServerOnly_Params Parms{};

	Parms.ScriptedVOScene = ScriptedVOScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.SetEnemyLeaderSpeaker_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                EnemyLeaderSpeaker                                               (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::SetEnemyLeaderSpeaker_ServerOnly(const struct FGameplayTag& EnemyLeaderSpeaker)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "SetEnemyLeaderSpeaker_ServerOnly");

	Params::AQtnGameState_SetEnemyLeaderSpeaker_ServerOnly_Params Parms{};

	Parms.EnemyLeaderSpeaker = EnemyLeaderSpeaker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.SetEffectiveArc_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnArcEnum             DesiredArc                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::SetEffectiveArc_ServerOnly(enum class EQtnArcEnum DesiredArc)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "SetEffectiveArc_ServerOnly");

	Params::AQtnGameState_SetEffectiveArc_ServerOnly_Params Parms{};

	Parms.DesiredArc = DesiredArc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.SetDifficulty_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnDifficulty          DesiredDifficulty                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::SetDifficulty_ServerOnly(enum class EQtnDifficulty DesiredDifficulty)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "SetDifficulty_ServerOnly");

	Params::AQtnGameState_SetDifficulty_ServerOnly_Params Parms{};

	Parms.DesiredDifficulty = DesiredDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.SetCutscenesAllowTrainingWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnGameState::SetCutscenesAllowTrainingWidgets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "SetCutscenesAllowTrainingWidgets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.RemoveSimPauser_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     TimeStopper                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::RemoveSimPauser_ServerOnly(class UObject* TimeStopper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "RemoveSimPauser_ServerOnly");

	Params::AQtnGameState_RemoveSimPauser_ServerOnly_Params Parms{};

	Parms.TimeStopper = TimeStopper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.RemoveLocalActiveCutscene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     LocalCutsceneObject                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::RemoveLocalActiveCutscene(class UObject* LocalCutsceneObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "RemoveLocalActiveCutscene");

	Params::AQtnGameState_RemoveLocalActiveCutscene_Params Parms{};

	Parms.LocalCutsceneObject = LocalCutsceneObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.RemoveCombatInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     CombatInhibitor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::RemoveCombatInhibitor_ServerOnly(class UObject* CombatInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "RemoveCombatInhibitor_ServerOnly");

	Params::AQtnGameState_RemoveCombatInhibitor_ServerOnly_Params Parms{};

	Parms.CombatInhibitor = CombatInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.RemoveBossThreat_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      bossActor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::RemoveBossThreat_ServerOnly(class AActor* bossActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "RemoveBossThreat_ServerOnly");

	Params::AQtnGameState_RemoveBossThreat_ServerOnly_Params Parms{};

	Parms.bossActor = bossActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.ReadyForGameplay
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::ReadyForGameplay(bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "ReadyForGameplay");

	Params::AQtnGameState_ReadyForGameplay_Params Parms{};

	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnTutorialStateChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FQtnTutorialInstanceData    TutorialInstance                                                 (Parm, NativeAccessSpecifierPublic)

void AQtnGameState::QtnTutorialStateChangeEvent__DelegateSignature(const struct FQtnTutorialInstanceData& TutorialInstance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnTutorialStateChangeEvent__DelegateSignature");

	Params::AQtnGameState_QtnTutorialStateChangeEvent__DelegateSignature_Params Parms{};

	Parms.TutorialInstance = TutorialInstance;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnSimPauseEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               Paused                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnSimPauseEvent__DelegateSignature(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnSimPauseEvent__DelegateSignature");

	Params::AQtnGameState_QtnSimPauseEvent__DelegateSignature_Params Parms{};

	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnReadyForUIEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                LocalPlayerUI                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnReadyForUIEvent__DelegateSignature(class AQtnPlayerController* LocalPlayerController, class AQtnPlayerUI* LocalPlayerUI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnReadyForUIEvent__DelegateSignature");

	Params::AQtnGameState_QtnReadyForUIEvent__DelegateSignature_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.LocalPlayerUI = LocalPlayerUI;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnReadyForGameplayEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                LocalPlayerUI                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOccupiedBodyPawn                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnReadyForGameplayEvent__DelegateSignature(class AQtnPlayerController* LocalPlayerController, class AQtnPlayerUI* LocalPlayerUI, class AQtnBodyPawn* LocalOccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnReadyForGameplayEvent__DelegateSignature");

	Params::AQtnGameState_QtnReadyForGameplayEvent__DelegateSignature_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.LocalPlayerUI = LocalPlayerUI;
	Parms.LocalOccupiedBodyPawn = LocalOccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlayerOccupyBodyEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawnSoul                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsLocalPlayer                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnPlayerOccupyBodyEvent__DelegateSignature(class AQtnPlayerPawn* PlayerPawnSoul, class AQtnBodyPawn* OccupiedBodyPawn, bool IsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlayerOccupyBodyEvent__DelegateSignature");

	Params::AQtnGameState_QtnPlayerOccupyBodyEvent__DelegateSignature_Params Parms{};

	Parms.PlayerPawnSoul = PlayerPawnSoul;
	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.IsLocalPlayer = IsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlayerExitWorldEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawnSoul                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnPlayerExitWorldEvent__DelegateSignature(class AQtnPlayerPawn* PlayerPawnSoul, class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlayerExitWorldEvent__DelegateSignature");

	Params::AQtnGameState_QtnPlayerExitWorldEvent__DelegateSignature_Params Parms{};

	Parms.PlayerPawnSoul = PlayerPawnSoul;
	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlayerEnterWorldEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawnSoul                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsLocalPlayer                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnPlayerEnterWorldEvent__DelegateSignature(class AQtnPlayerPawn* PlayerPawnSoul, class AQtnBodyPawn* OccupiedBodyPawn, bool IsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlayerEnterWorldEvent__DelegateSignature");

	Params::AQtnGameState_QtnPlayerEnterWorldEvent__DelegateSignature_Params Parms{};

	Parms.PlayerPawnSoul = PlayerPawnSoul;
	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.IsLocalPlayer = IsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlayerCombatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyPawn*                PlayerBody                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CombatBeginning                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnPlayerCombatEvent__DelegateSignature(class AQtnBodyPawn* PlayerBody, bool CombatBeginning)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlayerCombatEvent__DelegateSignature");

	Params::AQtnGameState_QtnPlayerCombatEvent__DelegateSignature_Params Parms{};

	Parms.PlayerBody = PlayerBody;
	Parms.CombatBeginning = CombatBeginning;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlayerBodyAliveChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawnSoul                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBodyPawn                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnPlayerBodyAliveChangeEvent__DelegateSignature(class AQtnPlayerPawn* PlayerPawnSoul, class AQtnBodyPawn* PlayerBodyPawn, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlayerBodyAliveChangeEvent__DelegateSignature");

	Params::AQtnGameState_QtnPlayerBodyAliveChangeEvent__DelegateSignature_Params Parms{};

	Parms.PlayerPawnSoul = PlayerPawnSoul;
	Parms.PlayerBodyPawn = PlayerBodyPawn;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlatformLocalLogoutEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void AQtnGameState::QtnPlatformLocalLogoutEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlatformLocalLogoutEvent__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlatformLocalLoginEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void AQtnGameState::QtnPlatformLocalLoginEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlatformLocalLoginEvent__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// DelegateFunction QtnGame.QtnGameState.QtnPlatformLocalControllerChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               PluggedIn                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnPlatformLocalControllerChangedEvent__DelegateSignature(bool PluggedIn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnPlatformLocalControllerChangedEvent__DelegateSignature");

	Params::AQtnGameState_QtnPlatformLocalControllerChangedEvent__DelegateSignature_Params Parms{};

	Parms.PluggedIn = PluggedIn;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnOnPlayerStatesChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void AQtnGameState::QtnOnPlayerStatesChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnOnPlayerStatesChanged__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// DelegateFunction QtnGame.QtnGameState.QtnOnPlayerStateRemoved__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerState*             PPlayerState                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnOnPlayerStateRemoved__DelegateSignature(class AQtnPlayerState* PPlayerState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnOnPlayerStateRemoved__DelegateSignature");

	Params::AQtnGameState_QtnOnPlayerStateRemoved__DelegateSignature_Params Parms{};

	Parms.PPlayerState = PPlayerState;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnLocalTutorialEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsReminder                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnLocalTutorialEvent__DelegateSignature(TSubclassOf<class UQtnTutorial> TutorialArchetype, bool IsReminder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnLocalTutorialEvent__DelegateSignature");

	Params::AQtnGameState_QtnLocalTutorialEvent__DelegateSignature_Params Parms{};

	Parms.TutorialArchetype = TutorialArchetype;
	Parms.IsReminder = IsReminder;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnLocalCutsceneEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               IsCutsceneActive                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DoWorldCleanup                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnLocalCutsceneEvent__DelegateSignature(bool IsCutsceneActive, bool DoWorldCleanup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnLocalCutsceneEvent__DelegateSignature");

	Params::AQtnGameState_QtnLocalCutsceneEvent__DelegateSignature_Params Parms{};

	Parms.IsCutsceneActive = IsCutsceneActive;
	Parms.DoWorldCleanup = DoWorldCleanup;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnDifficultyChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// enum class EQtnDifficulty          NewDifficulty                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnDifficultyChangeEvent__DelegateSignature(enum class EQtnDifficulty NewDifficulty)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnDifficultyChangeEvent__DelegateSignature");

	Params::AQtnGameState_QtnDifficultyChangeEvent__DelegateSignature_Params Parms{};

	Parms.NewDifficulty = NewDifficulty;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnDevCheatsEnabledEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Enabled                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnDevCheatsEnabledEvent__DelegateSignature(class AQtnPlayerPawn* PlayerPawn, bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnDevCheatsEnabledEvent__DelegateSignature");

	Params::AQtnGameState_QtnDevCheatsEnabledEvent__DelegateSignature_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnCombatInhibitedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               IsInhibited                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnCombatInhibitedEvent__DelegateSignature(bool IsInhibited, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnCombatInhibitedEvent__DelegateSignature");

	Params::AQtnGameState_QtnCombatInhibitedEvent__DelegateSignature_Params Parms{};

	Parms.IsInhibited = IsInhibited;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnCombatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               CombatBeginning                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnCombatEvent__DelegateSignature(bool CombatBeginning)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnCombatEvent__DelegateSignature");

	Params::AQtnGameState_QtnCombatEvent__DelegateSignature_Params Parms{};

	Parms.CombatBeginning = CombatBeginning;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnBossThreatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor*                      bossThreat                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CombatBeginning                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnBossThreatEvent__DelegateSignature(class AActor* bossThreat, bool CombatBeginning)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnBossThreatEvent__DelegateSignature");

	Params::AQtnGameState_QtnBossThreatEvent__DelegateSignature_Params Parms{};

	Parms.bossThreat = bossThreat;
	Parms.CombatBeginning = CombatBeginning;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnAppLifetimeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void AQtnGameState::QtnAppLifetimeDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnAppLifetimeDelegate__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// DelegateFunction QtnGame.QtnGameState.QtnAllExpectedPlayersReadyEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                              NumExpectedPlayers                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnAllExpectedPlayersReadyEvent__DelegateSignature(int32 NumExpectedPlayers, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnAllExpectedPlayersReadyEvent__DelegateSignature");

	Params::AQtnGameState_QtnAllExpectedPlayersReadyEvent__DelegateSignature_Params Parms{};

	Parms.NumExpectedPlayers = NumExpectedPlayers;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnGameState.QtnActorSpawnedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnSpawner*                 Spawner                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      SpawnedActor                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::QtnActorSpawnedEvent__DelegateSignature(class AQtnSpawner* Spawner, class AActor* SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "QtnActorSpawnedEvent__DelegateSignature");

	Params::AQtnGameState_QtnActorSpawnedEvent__DelegateSignature_Params Parms{};

	Parms.Spawner = Spawner;
	Parms.SpawnedActor = SpawnedActor;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGameState.OnSetScriptedVOScene_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FGameplayTag                ScriptedVOScene                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::OnSetScriptedVOScene_ServerOnly(const struct FGameplayTag& ScriptedVOScene)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnSetScriptedVOScene_ServerOnly");

	Params::AQtnGameState_OnSetScriptedVOScene_ServerOnly_Params Parms{};

	Parms.ScriptedVOScene = ScriptedVOScene;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGameState.OnRep_ScriptedVOScene
// (Final, Native, Private)
// Parameters:

void AQtnGameState::OnRep_ScriptedVOScene()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_ScriptedVOScene");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_PlayersInCombat
// (Final, Native, Private)
// Parameters:

void AQtnGameState::OnRep_PlayersInCombat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_PlayersInCombat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_PlayerReadyInfo
// (Final, Native, Private)
// Parameters:

void AQtnGameState::OnRep_PlayerReadyInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_PlayerReadyInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_IsSimPaused
// (Final, Native, Private)
// Parameters:

void AQtnGameState::OnRep_IsSimPaused()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_IsSimPaused");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_IsCombatInhibited
// (Final, Native, Private)
// Parameters:

void AQtnGameState::OnRep_IsCombatInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_IsCombatInhibited");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_EnemyUpgradeLevels
// (Final, Native, Public)
// Parameters:

void AQtnGameState::OnRep_EnemyUpgradeLevels()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_EnemyUpgradeLevels");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_Difficulty
// (Final, Native, Private)
// Parameters:

void AQtnGameState::OnRep_Difficulty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_Difficulty");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_CurrentEnemyUpgrades
// (Final, Native, Public)
// Parameters:

void AQtnGameState::OnRep_CurrentEnemyUpgrades()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_CurrentEnemyUpgrades");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnRep_BossThreats
// (Final, Native, Private)
// Parameters:

void AQtnGameState::OnRep_BossThreats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnRep_BossThreats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnEnemyUpgradesArrayChanged
// (Final, Native, Public)
// Parameters:

void AQtnGameState::OnEnemyUpgradesArrayChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnEnemyUpgradesArrayChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnEnemyUpgradeLevelsArrayChanged
// (Final, Native, Public)
// Parameters:

void AQtnGameState::OnEnemyUpgradeLevelsArrayChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnEnemyUpgradeLevelsArrayChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "OnDebugDisplay");

	Params::AQtnGameState_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGameState.MulticastWorldCleanup
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               LootPickups                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::MulticastWorldCleanup(bool LootPickups)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "MulticastWorldCleanup");

	Params::AQtnGameState_MulticastWorldCleanup_Params Parms{};

	Parms.LootPickups = LootPickups;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.MulticastStepMode
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               WantStepMode                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::MulticastStepMode(bool WantStepMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "MulticastStepMode");

	Params::AQtnGameState_MulticastStepMode_Params Parms{};

	Parms.WantStepMode = WantStepMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.MulticastPlayersOnly
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               WantPlayersOnly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::MulticastPlayersOnly(bool WantPlayersOnly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "MulticastPlayersOnly");

	Params::AQtnGameState_MulticastPlayersOnly_Params Parms{};

	Parms.WantPlayersOnly = WantPlayersOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.MulticastOnPlayerStatesChanged
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AQtnGameState::MulticastOnPlayerStatesChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "MulticastOnPlayerStatesChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.IsSimPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::IsSimPaused()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "IsSimPaused");

	Params::AQtnGameState_IsSimPaused_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.IsReadyForGameplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::IsReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "IsReadyForGameplay");

	Params::AQtnGameState_IsReadyForGameplay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.IsLocalCutsceneActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               DoWorldCleanup                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::IsLocalCutsceneActive(bool* DoWorldCleanup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "IsLocalCutsceneActive");

	Params::AQtnGameState_IsLocalCutsceneActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DoWorldCleanup != nullptr)
		*DoWorldCleanup = Parms.DoWorldCleanup;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.IsCombatInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::IsCombatInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "IsCombatInhibited");

	Params::AQtnGameState_IsCombatInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.HasPlayerJoinedMostRecentCombat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                PlayerBody                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::HasPlayerJoinedMostRecentCombat(class AQtnBodyPawn* PlayerBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "HasPlayerJoinedMostRecentCombat");

	Params::AQtnGameState_HasPlayerJoinedMostRecentCombat_Params Parms{};

	Parms.PlayerBody = PlayerBody;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetVOManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVOManager*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVOManager* AQtnGameState::GetVOManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetVOManager");

	Params::AQtnGameState_GetVOManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetTeamManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnTeamManagerComponent*    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnTeamManagerComponent* AQtnGameState::GetTeamManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetTeamManager");

	Params::AQtnGameState_GetTeamManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetQtnTimeSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnGameState::GetQtnTimeSeconds(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetQtnTimeSeconds");

	Params::AQtnGameState_GetQtnTimeSeconds_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetQtnRealDeltaSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnGameState::GetQtnRealDeltaSeconds(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetQtnRealDeltaSeconds");

	Params::AQtnGameState_GetQtnRealDeltaSeconds_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetQtnNameplateManagerComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPlayerNameplateManagerComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPlayerNameplateManagerComponent* AQtnGameState::GetQtnNameplateManagerComponent(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetQtnNameplateManagerComponent");

	Params::AQtnGameState_GetQtnNameplateManagerComponent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetQtnGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnGameState*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnGameState* AQtnGameState::GetQtnGameState(class UObject* SelfReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetQtnGameState");

	Params::AQtnGameState_GetQtnGameState_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetPlayersAndBossesInCombat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnBodyPawn*>        PlayerBodies                                                     (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class AActor*>              bossThreats                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AQtnGameState::GetPlayersAndBossesInCombat(TArray<class AQtnBodyPawn*>* PlayerBodies, TArray<class AActor*>* bossThreats)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetPlayersAndBossesInCombat");

	Params::AQtnGameState_GetPlayersAndBossesInCombat_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlayerBodies != nullptr)
		*PlayerBodies = std::move(Parms.PlayerBodies);

	if (bossThreats != nullptr)
		*bossThreats = std::move(Parms.bossThreats);

}


// Function QtnGame.QtnGameState.GetOwningGameInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnGameInstance*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnGameInstance* AQtnGameState::GetOwningGameInstance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetOwningGameInstance");

	Params::AQtnGameState_GetOwningGameInstance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetLocalPlayerUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerUI*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerUI* AQtnGameState::GetLocalPlayerUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetLocalPlayerUI");

	Params::AQtnGameState_GetLocalPlayerUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetLocalPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* AQtnGameState::GetLocalPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetLocalPlayerState");

	Params::AQtnGameState_GetLocalPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetLocalPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnGameState::GetLocalPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetLocalPlayerPawn");

	Params::AQtnGameState_GetLocalPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetLocalPlayerOriginalBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnGameState::GetLocalPlayerOriginalBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetLocalPlayerOriginalBody");

	Params::AQtnGameState_GetLocalPlayerOriginalBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetLocalPlayerOccupiedBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnGameState::GetLocalPlayerOccupiedBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetLocalPlayerOccupiedBody");

	Params::AQtnGameState_GetLocalPlayerOccupiedBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetLocalPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* AQtnGameState::GetLocalPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetLocalPlayerController");

	Params::AQtnGameState_GetLocalPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetEnemyUpgradeLevels
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnRolledUpgradeData>ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<struct FQtnRolledUpgradeData> AQtnGameState::GetEnemyUpgradeLevels()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetEnemyUpgradeLevels");

	Params::AQtnGameState_GetEnemyUpgradeLevels_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetEffectiveArc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnArcEnum             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnArcEnum AQtnGameState::GetEffectiveArc()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetEffectiveArc");

	Params::AQtnGameState_GetEffectiveArc_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnDifficulty          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnDifficulty AQtnGameState::GetDifficulty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetDifficulty");

	Params::AQtnGameState_GetDifficulty_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetCurrentEnemyUpgrades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSubclassOf<class UQtnUpgrade>>ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UQtnUpgrade>> AQtnGameState::GetCurrentEnemyUpgrades()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetCurrentEnemyUpgrades");

	Params::AQtnGameState_GetCurrentEnemyUpgrades_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetCombatInhibitableSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnGameState::GetCombatInhibitableSeconds(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetCombatInhibitableSeconds");

	Params::AQtnGameState_GetCombatInhibitableSeconds_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetCheatingDevs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPlayerPawn*>      ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPlayerPawn*> AQtnGameState::GetCheatingDevs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetCheatingDevs");

	Params::AQtnGameState_GetCheatingDevs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.GetAuthoritativePlayerArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPlayerState*>     ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class AQtnPlayerState*> AQtnGameState::GetAuthoritativePlayerArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "GetAuthoritativePlayerArray");

	Params::AQtnGameState_GetAuthoritativePlayerArray_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.DoWorldCleanup_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               LootPickups                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DeadBodies                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               LivingBodies                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class AQtnPawn>>PawnTypesToIgnore                                                (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void AQtnGameState::DoWorldCleanup_ServerOnly(bool LootPickups, bool DeadBodies, bool LivingBodies, const TArray<TSubclassOf<class AQtnPawn>>& PawnTypesToIgnore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "DoWorldCleanup_ServerOnly");

	Params::AQtnGameState_DoWorldCleanup_ServerOnly_Params Parms{};

	Parms.LootPickups = LootPickups;
	Parms.DeadBodies = DeadBodies;
	Parms.LivingBodies = LivingBodies;
	Parms.PawnTypesToIgnore = PawnTypesToIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.DoCutscenesAllowTrainingWidgets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::DoCutscenesAllowTrainingWidgets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "DoCutscenesAllowTrainingWidgets");

	Params::AQtnGameState_DoCutscenesAllowTrainingWidgets_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.AreDevCheatsLocallyEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::AreDevCheatsLocallyEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "AreDevCheatsLocallyEnabled");

	Params::AQtnGameState_AreDevCheatsLocallyEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.AreBotsOrPlayersInCombat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::AreBotsOrPlayersInCombat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "AreBotsOrPlayersInCombat");

	Params::AQtnGameState_AreBotsOrPlayersInCombat_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.AreAllExpectedPlayersReady
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              NumExpectedPlayers                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumReadyPlayers                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnGameState::AreAllExpectedPlayersReady(int32* NumExpectedPlayers, int32* NumReadyPlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "AreAllExpectedPlayersReady");

	Params::AQtnGameState_AreAllExpectedPlayersReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NumExpectedPlayers != nullptr)
		*NumExpectedPlayers = Parms.NumExpectedPlayers;

	if (NumReadyPlayers != nullptr)
		*NumReadyPlayers = Parms.NumReadyPlayers;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGameState.AddSimPauser_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     TimeStopper                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::AddSimPauser_ServerOnly(class UObject* TimeStopper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "AddSimPauser_ServerOnly");

	Params::AQtnGameState_AddSimPauser_ServerOnly_Params Parms{};

	Parms.TimeStopper = TimeStopper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.AddLocalActiveCutscene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     LocalCutsceneObject                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DoWorldCleanup                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::AddLocalActiveCutscene(class UObject* LocalCutsceneObject, bool DoWorldCleanup)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "AddLocalActiveCutscene");

	Params::AQtnGameState_AddLocalActiveCutscene_Params Parms{};

	Parms.LocalCutsceneObject = LocalCutsceneObject;
	Parms.DoWorldCleanup = DoWorldCleanup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.AddCombatInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     CombatInhibitor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::AddCombatInhibitor_ServerOnly(class UObject* CombatInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "AddCombatInhibitor_ServerOnly");

	Params::AQtnGameState_AddCombatInhibitor_ServerOnly_Params Parms{};

	Parms.CombatInhibitor = CombatInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGameState.AddBossThreat_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      bossActor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnGameState::AddBossThreat_ServerOnly(class AActor* bossActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGameState", "AddBossThreat_ServerOnly");

	Params::AQtnGameState_AddBossThreat_ServerOnly_Params Parms{};

	Parms.bossActor = bossActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnGameViewportClient
// (None)

class UClass* UQtnGameViewportClient::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGameViewportClient");

	return Clss;
}


// QtnGameViewportClient QtnGame.Default__QtnGameViewportClient
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnGameViewportClient* UQtnGameViewportClient::GetDefaultObj()
{
	static class UQtnGameViewportClient* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnGameViewportClient*>(UQtnGameViewportClient::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnGenericDestructable
// (Actor)

class UClass* AQtnGenericDestructable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGenericDestructable");

	return Clss;
}


// QtnGenericDestructable QtnGame.Default__QtnGenericDestructable
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnGenericDestructable* AQtnGenericDestructable::GetDefaultObj()
{
	static class AQtnGenericDestructable* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnGenericDestructable*>(AQtnGenericDestructable::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnGlobalRunProgress
// (None)

class UClass* UQtnGlobalRunProgress::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGlobalRunProgress");

	return Clss;
}


// QtnGlobalRunProgress QtnGame.Default__QtnGlobalRunProgress
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnGlobalRunProgress* UQtnGlobalRunProgress::GetDefaultObj()
{
	static class UQtnGlobalRunProgress* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnGlobalRunProgress*>(UQtnGlobalRunProgress::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGlobalRunProgress.SetRunDifficulty_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnDifficulty          RunDifficulty                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::SetRunDifficulty_ServerOnly(enum class EQtnDifficulty RunDifficulty)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "SetRunDifficulty_ServerOnly");

	Params::UQtnGlobalRunProgress_SetRunDifficulty_ServerOnly_Params Parms{};

	Parms.RunDifficulty = RunDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGlobalRunProgress.ResetRunProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnGlobalRunProgress::ResetRunProgress_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "ResetRunProgress_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGlobalRunProgress.OnRunProgressReset_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnGlobalRunProgress::OnRunProgressReset_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnRunProgressReset_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnGlobalRunProgress.OnRunProgressCheckpoint_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               FlushMissionProgress                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::OnRunProgressCheckpoint_ServerOnly(bool FlushMissionProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnRunProgressCheckpoint_ServerOnly");

	Params::UQtnGlobalRunProgress_OnRunProgressCheckpoint_ServerOnly_Params Parms{};

	Parms.FlushMissionProgress = FlushMissionProgress;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGlobalRunProgress.OnPlayerExitWorld_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::OnPlayerExitWorld_ServerOnly(class AQtnPlayerPawn* PlayerPawn, class AQtnBodyPawn* PlayerBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnPlayerExitWorld_ServerOnly");

	Params::UQtnGlobalRunProgress_OnPlayerExitWorld_ServerOnly_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.PlayerBody = PlayerBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGlobalRunProgress.OnPlayerEnterWorld_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               HasCheckpointHappened                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::OnPlayerEnterWorld_ServerOnly(class AQtnPlayerPawn* PlayerPawn, class AQtnBodyPawn* PlayerBody, bool HasCheckpointHappened)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnPlayerEnterWorld_ServerOnly");

	Params::UQtnGlobalRunProgress_OnPlayerEnterWorld_ServerOnly_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.PlayerBody = PlayerBody;
	Parms.HasCheckpointHappened = HasCheckpointHappened;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGlobalRunProgress.OnMapEndPlay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               TravelPending                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::OnMapEndPlay_ServerOnly(bool TravelPending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnMapEndPlay_ServerOnly");

	Params::UQtnGlobalRunProgress_OnMapEndPlay_ServerOnly_Params Parms{};

	Parms.TravelPending = TravelPending;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGlobalRunProgress.OnMapBeginPlay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnGlobalRunProgress::OnMapBeginPlay_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnMapBeginPlay_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnGlobalRunProgress.OnGlobalRunProgressInit
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnGlobalRunProgress::OnGlobalRunProgressInit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnGlobalRunProgressInit");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnGlobalRunProgress.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnDebugDisplay");

	Params::UQtnGlobalRunProgress_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGlobalRunProgress.OnAllExpectedPlayersReady_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              NumExpectedPlayers                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::OnAllExpectedPlayersReady_ServerOnly(int32 NumExpectedPlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "OnAllExpectedPlayersReady_ServerOnly");

	Params::UQtnGlobalRunProgress_OnAllExpectedPlayersReady_ServerOnly_Params Parms{};

	Parms.NumExpectedPlayers = NumExpectedPlayers;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGlobalRunProgress.HasCheckpointHappened_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGlobalRunProgress::HasCheckpointHappened_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "HasCheckpointHappened_ServerOnly");

	Params::UQtnGlobalRunProgress_HasCheckpointHappened_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.GetSubProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnRunSubProgress>SubProgressArchetype                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnRunSubProgress*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnRunSubProgress* UQtnGlobalRunProgress::GetSubProgress_ServerOnly(TSubclassOf<class UQtnRunSubProgress> SubProgressArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "GetSubProgress_ServerOnly");

	Params::UQtnGlobalRunProgress_GetSubProgress_ServerOnly_Params Parms{};

	Parms.SubProgressArchetype = SubProgressArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.GetStringFromNetId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl            PlayerUniqueNetId                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnGlobalRunProgress::GetStringFromNetId(struct FUniqueNetIdRepl& PlayerUniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "GetStringFromNetId");

	Params::UQtnGlobalRunProgress_GetStringFromNetId_Params Parms{};

	Parms.PlayerUniqueNetId = PlayerUniqueNetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.GetRunDifficulty_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnDifficulty          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnDifficulty UQtnGlobalRunProgress::GetRunDifficulty_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "GetRunDifficulty_ServerOnly");

	Params::UQtnGlobalRunProgress_GetRunDifficulty_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.GetPlayerRunProgressFromUniqueNetId_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl            PlayerUniqueNetId                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPlayerRunProgress*       ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPlayerRunProgress* UQtnGlobalRunProgress::GetPlayerRunProgressFromUniqueNetId_ServerOnly(struct FUniqueNetIdRepl& PlayerUniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "GetPlayerRunProgressFromUniqueNetId_ServerOnly");

	Params::UQtnGlobalRunProgress_GetPlayerRunProgressFromUniqueNetId_ServerOnly_Params Parms{};

	Parms.PlayerUniqueNetId = PlayerUniqueNetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.GetPlayerRunProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             PlayerState                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPlayerRunProgress*       ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPlayerRunProgress* UQtnGlobalRunProgress::GetPlayerRunProgress_ServerOnly(class AQtnPlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "GetPlayerRunProgress_ServerOnly");

	Params::UQtnGlobalRunProgress_GetPlayerRunProgress_ServerOnly_Params Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.GetGlobalRunProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnGlobalRunProgress*       ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnGlobalRunProgress* UQtnGlobalRunProgress::GetGlobalRunProgress_ServerOnly(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "GetGlobalRunProgress_ServerOnly");

	Params::UQtnGlobalRunProgress_GetGlobalRunProgress_ServerOnly_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.GetEmptyNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl            ReturnValue                                                      (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UQtnGlobalRunProgress::GetEmptyNetId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "GetEmptyNetId");

	Params::UQtnGlobalRunProgress_GetEmptyNetId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGlobalRunProgress.CheckpointRunProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               FlushMissionProgress                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGlobalRunProgress::CheckpointRunProgress_ServerOnly(bool FlushMissionProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "CheckpointRunProgress_ServerOnly");

	Params::UQtnGlobalRunProgress_CheckpointRunProgress_ServerOnly_Params Parms{};

	Parms.FlushMissionProgress = FlushMissionProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGlobalRunProgress.AddSubProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnRunSubProgress>SubProgressArchetype                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnRunSubProgress*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnRunSubProgress* UQtnGlobalRunProgress::AddSubProgress_ServerOnly(TSubclassOf<class UQtnRunSubProgress> SubProgressArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGlobalRunProgress", "AddSubProgress_ServerOnly");

	Params::UQtnGlobalRunProgress_AddSubProgress_ServerOnly_Params Parms{};

	Parms.SubProgressArchetype = SubProgressArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnGoal
// (None)

class UClass* UQtnGoal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGoal");

	return Clss;
}


// QtnGoal QtnGame.Default__QtnGoal
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnGoal* UQtnGoal::GetDefaultObj()
{
	static class UQtnGoal* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnGoal*>(UQtnGoal::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGoal.StartGoal_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnGoal::StartGoal_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "StartGoal_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGoal.SpawnChildGoal_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UQtnGoal>      SoftGoalClass                                                    (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnGoal*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnGoal* UQtnGoal::SpawnChildGoal_ServerOnly(TSoftClassPtr<class UQtnGoal> SoftGoalClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "SpawnChildGoal_ServerOnly");

	Params::UQtnGoal_SpawnChildGoal_ServerOnly_Params Parms{};

	Parms.SoftGoalClass = SoftGoalClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoal.OnTickActiveGoal
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoal::OnTickActiveGoal(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnTickActiveGoal");

	Params::UQtnGoal_OnTickActiveGoal_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoal.OnRep_GoalStatus
// (Final, Native, Private)
// Parameters:

void UQtnGoal::OnRep_GoalStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnRep_GoalStatus");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGoal.OnPlayerExitWorld_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerSoul                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoal::OnPlayerExitWorld_ServerOnly(class AQtnPlayerPawn* PlayerSoul, class AQtnBodyPawn* PlayerBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnPlayerExitWorld_ServerOnly");

	Params::UQtnGoal_OnPlayerExitWorld_ServerOnly_Params Parms{};

	Parms.PlayerSoul = PlayerSoul;
	Parms.PlayerBody = PlayerBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoal.OnPlayerEnterWorld_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerSoul                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoal::OnPlayerEnterWorld_ServerOnly(class AQtnPlayerPawn* PlayerSoul, class AQtnBodyPawn* PlayerBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnPlayerEnterWorld_ServerOnly");

	Params::UQtnGoal_OnPlayerEnterWorld_ServerOnly_Params Parms{};

	Parms.PlayerSoul = PlayerSoul;
	Parms.PlayerBody = PlayerBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoal.OnGoalStart
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               WillEndImmediatelyFromLateJoin                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoal::OnGoalStart(bool WillEndImmediatelyFromLateJoin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnGoalStart");

	Params::UQtnGoal_OnGoalStart_Params Parms{};

	Parms.WillEndImmediatelyFromLateJoin = WillEndImmediatelyFromLateJoin;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoal.OnGoalSpawned_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnGoal::OnGoalSpawned_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnGoalSpawned_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnGoal.OnGoalEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               JustStartedFromLateJoin                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoal::OnGoalEnd(bool JustStartedFromLateJoin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnGoalEnd");

	Params::UQtnGoal_OnGoalEnd_Params Parms{};

	Parms.JustStartedFromLateJoin = JustStartedFromLateJoin;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoal.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoal::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "OnDebugDisplay");

	Params::UQtnGoal_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoal.IsOnServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGoal::IsOnServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "IsOnServer");

	Params::UQtnGoal_IsOnServer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoal.GetOwningGoalManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnGoalManager*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnGoalManager* UQtnGoal::GetOwningGoalManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "GetOwningGoalManager");

	Params::UQtnGoal_GetOwningGoalManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoal.GetGoalWeight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnGoal>        GoalClass                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnGoal::GetGoalWeight(TSubclassOf<class UQtnGoal> GoalClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "GetGoalWeight");

	Params::UQtnGoal_GetGoalWeight_Params Parms{};

	Parms.GoalClass = GoalClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoal.GetGoalStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnGoalStatus          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnGoalStatus UQtnGoal::GetGoalStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "GetGoalStatus");

	Params::UQtnGoal_GetGoalStatus_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoal.GetChildGoals
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnGoal*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnGoal*> UQtnGoal::GetChildGoals()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "GetChildGoals");

	Params::UQtnGoal_GetChildGoals_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoal.EndGoal_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnGoal::EndGoal_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "EndGoal_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGoal.CalculateGoalWeight
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnGoal::CalculateGoalWeight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoal", "CalculateGoalWeight");

	Params::UQtnGoal_CalculateGoalWeight_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnGoalManager
// (None)

class UClass* UQtnGoalManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGoalManager");

	return Clss;
}


// QtnGoalManager QtnGame.Default__QtnGoalManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnGoalManager* UQtnGoalManager::GetDefaultObj()
{
	static class UQtnGoalManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnGoalManager*>(UQtnGoalManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGoalManager.SpawnSeedGoal_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSoftClassPtr<class UQtnGoal>      SoftGoalClass                                                    (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnGoal*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnGoal* UQtnGoalManager::SpawnSeedGoal_ServerOnly(TSoftClassPtr<class UQtnGoal> SoftGoalClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "SpawnSeedGoal_ServerOnly");

	Params::UQtnGoalManager_SpawnSeedGoal_ServerOnly_Params Parms{};

	Parms.SoftGoalClass = SoftGoalClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoalManager.SortGoalsByWeight
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class UQtnGoal>>UnSortedGoalClasses                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<struct FQtnGoalWeightPair>  SortedGoalClasses                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                              TotalWeight                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EliminateGoalsAtOrBelowThisWeight                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoalManager::SortGoalsByWeight(TArray<TSubclassOf<class UQtnGoal>>& UnSortedGoalClasses, TArray<struct FQtnGoalWeightPair>* SortedGoalClasses, float* TotalWeight, float EliminateGoalsAtOrBelowThisWeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "SortGoalsByWeight");

	Params::UQtnGoalManager_SortGoalsByWeight_Params Parms{};

	Parms.UnSortedGoalClasses = UnSortedGoalClasses;
	Parms.EliminateGoalsAtOrBelowThisWeight = EliminateGoalsAtOrBelowThisWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SortedGoalClasses != nullptr)
		*SortedGoalClasses = std::move(Parms.SortedGoalClasses);

	if (TotalWeight != nullptr)
		*TotalWeight = Parms.TotalWeight;

}


// Function QtnGame.QtnGoalManager.SetupSeedGoals_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnGoalManager::SetupSeedGoals_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "SetupSeedGoals_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnGoalManager.SelectRandomGoalsByWeight
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class UQtnGoal>>PossibleGoalClasses                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UQtnGoal>>SelectedGoalClasses                                              (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// float                              EliminateGoalsAtOrBelowThisWeight                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxNumberToSelect                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoalManager::SelectRandomGoalsByWeight(TArray<TSubclassOf<class UQtnGoal>>& PossibleGoalClasses, TArray<TSubclassOf<class UQtnGoal>>* SelectedGoalClasses, float EliminateGoalsAtOrBelowThisWeight, int32 MaxNumberToSelect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "SelectRandomGoalsByWeight");

	Params::UQtnGoalManager_SelectRandomGoalsByWeight_Params Parms{};

	Parms.PossibleGoalClasses = PossibleGoalClasses;
	Parms.EliminateGoalsAtOrBelowThisWeight = EliminateGoalsAtOrBelowThisWeight;
	Parms.MaxNumberToSelect = MaxNumberToSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SelectedGoalClasses != nullptr)
		*SelectedGoalClasses = std::move(Parms.SelectedGoalClasses);

}


// Function QtnGame.QtnGoalManager.OnReadyForGameplay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnGoalManager::OnReadyForGameplay_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "OnReadyForGameplay_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnGoalManager.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoalManager::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "OnDebugDisplay");

	Params::UQtnGoalManager_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoalManager.LoadGoalClasses
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftClassPtr<class UQtnGoal>>SoftGoalClasses                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UQtnGoal>>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UQtnGoal>> UQtnGoalManager::LoadGoalClasses(TArray<TSoftClassPtr<class UQtnGoal>>& SoftGoalClasses)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "LoadGoalClasses");

	Params::UQtnGoalManager_LoadGoalClasses_Params Parms{};

	Parms.SoftGoalClasses = SoftGoalClasses;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoalManager.LoadGoalClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UQtnGoal>      SoftGoalClass                                                    (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnGoal>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnGoal> UQtnGoalManager::LoadGoalClass(TSoftClassPtr<class UQtnGoal> SoftGoalClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "LoadGoalClass");

	Params::UQtnGoalManager_LoadGoalClass_Params Parms{};

	Parms.SoftGoalClass = SoftGoalClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoalManager.IsOnServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnGoalManager::IsOnServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "IsOnServer");

	Params::UQtnGoalManager_IsOnServer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoalManager.GetSeedGoals
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnGoal*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnGoal*> UQtnGoalManager::GetSeedGoals()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "GetSeedGoals");

	Params::UQtnGoalManager_GetSeedGoals_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoalManager.GetGoalManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnGoalManager*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnGoalManager* UQtnGoalManager::GetGoalManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "GetGoalManager");

	Params::UQtnGoalManager_GetGoalManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnGoalManager.FindMarkedActors_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          ActorClass                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTag>        GameplayTags                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                MarkerComponentTags                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>              FoundActors                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnGoalManager::FindMarkedActors_ServerOnly(TSubclassOf<class AActor> ActorClass, TArray<struct FGameplayTag>& GameplayTags, TArray<class FName>& MarkerComponentTags, TArray<class AActor*>* FoundActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "FindMarkedActors_ServerOnly");

	Params::UQtnGoalManager_FindMarkedActors_ServerOnly_Params Parms{};

	Parms.ActorClass = ActorClass;
	Parms.GameplayTags = GameplayTags;
	Parms.MarkerComponentTags = MarkerComponentTags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundActors != nullptr)
		*FoundActors = std::move(Parms.FoundActors);

}


// Function QtnGame.QtnGoalManager.FindGoals
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnGoal>        GoalClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnGoal*>            FoundGoals                                                       (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ActiveGoalsOnly                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoalManager::FindGoals(TSubclassOf<class UQtnGoal> GoalClass, TArray<class UQtnGoal*>* FoundGoals, bool ActiveGoalsOnly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManager", "FindGoals");

	Params::UQtnGoalManager_FindGoals_Params Parms{};

	Parms.GoalClass = GoalClass;
	Parms.ActiveGoalsOnly = ActiveGoalsOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundGoals != nullptr)
		*FoundGoals = std::move(Parms.FoundGoals);

}


// Class QtnGame.QtnGoalManagerBaseNative
// (None)

class UClass* UQtnGoalManagerBaseNative::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGoalManagerBaseNative");

	return Clss;
}


// QtnGoalManagerBaseNative QtnGame.Default__QtnGoalManagerBaseNative
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnGoalManagerBaseNative* UQtnGoalManagerBaseNative::GetDefaultObj()
{
	static class UQtnGoalManagerBaseNative* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnGoalManagerBaseNative*>(UQtnGoalManagerBaseNative::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnGoalManagerBaseNative.SetCurrentArc_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              DesiredCurrentArc                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoalManagerBaseNative::SetCurrentArc_ServerOnly(int32 DesiredCurrentArc)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManagerBaseNative", "SetCurrentArc_ServerOnly");

	Params::UQtnGoalManagerBaseNative_SetCurrentArc_ServerOnly_Params Parms{};

	Parms.DesiredCurrentArc = DesiredCurrentArc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGoalManagerBaseNative.OnRep_CurrentArc
// (Final, Native, Private)
// Parameters:

void UQtnGoalManagerBaseNative::OnRep_CurrentArc()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManagerBaseNative", "OnRep_CurrentArc");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnGoalManagerBaseNative.OnCurrentArcChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                              NewArc                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnGoalManagerBaseNative::OnCurrentArcChange(int32 NewArc)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManagerBaseNative", "OnCurrentArcChange");

	Params::UQtnGoalManagerBaseNative_OnCurrentArcChange_Params Parms{};

	Parms.NewArc = NewArc;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnGoalManagerBaseNative.GetCurrentArc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnGoalManagerBaseNative::GetCurrentArc()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnGoalManagerBaseNative", "GetCurrentArc");

	Params::UQtnGoalManagerBaseNative_GetCurrentArc_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnGoalMarkerComponent
// (None)

class UClass* UQtnGoalMarkerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnGoalMarkerComponent");

	return Clss;
}


// QtnGoalMarkerComponent QtnGame.Default__QtnGoalMarkerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnGoalMarkerComponent* UQtnGoalMarkerComponent::GetDefaultObj()
{
	static class UQtnGoalMarkerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnGoalMarkerComponent*>(UQtnGoalMarkerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnHealthBarWidget
// (None)

class UClass* UQtnHealthBarWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnHealthBarWidget");

	return Clss;
}


// QtnHealthBarWidget QtnGame.Default__QtnHealthBarWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnHealthBarWidget* UQtnHealthBarWidget::GetDefaultObj()
{
	static class UQtnHealthBarWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnHealthBarWidget*>(UQtnHealthBarWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnHealthBarWidget.TickInterpolateOpacity
// (Final, Native, Protected)
// Parameters:

void UQtnHealthBarWidget::TickInterpolateOpacity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "TickInterpolateOpacity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.TickFlashDamage
// (Final, Native, Protected)
// Parameters:

void UQtnHealthBarWidget::TickFlashDamage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "TickFlashDamage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.ShouldHealthBarBeVisible
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnHealthBarWidget::ShouldHealthBarBeVisible()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "ShouldHealthBarBeVisible");

	Params::UQtnHealthBarWidget_ShouldHealthBarBeVisible_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnHealthBarWidget.OnStopHealthDamageEvent
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnHealthBarWidget::OnStopHealthDamageEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnStopHealthDamageEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnHealthBarWidget.OnStopAttributeDamageEvent
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnHealthBarWidget::OnStopAttributeDamageEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnStopAttributeDamageEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnHealthBarWidget.OnStatusEffectStartedEvent
// (Final, Native, Protected)
// Parameters:
// class UQtnStatusEffect*            StatusEffect                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnStatusEffectStartedEvent(class UQtnStatusEffect* StatusEffect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnStatusEffectStartedEvent");

	Params::UQtnHealthBarWidget_OnStatusEffectStartedEvent_Params Parms{};

	Parms.StatusEffect = StatusEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnStatusEffectEndedEvent
// (Final, Native, Protected)
// Parameters:
// class UQtnStatusEffect*            StatusEffect                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnStatusEffectEndedEvent(class UQtnStatusEffect* StatusEffect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnStatusEffectEndedEvent");

	Params::UQtnHealthBarWidget_OnStatusEffectEndedEvent_Params Parms{};

	Parms.StatusEffect = StatusEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnStartHealthDamageEvent
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnHealthBarWidget::OnStartHealthDamageEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnStartHealthDamageEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnHealthBarWidget.OnStartAttributeDamageEvent
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnHealthBarWidget::OnStartAttributeDamageEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnStartAttributeDamageEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnHealthBarWidget.OnRequestFadeOutHealthBar
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnHealthBarWidget::OnRequestFadeOutHealthBar()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnRequestFadeOutHealthBar");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnHealthBarWidget.OnRequestFadeInHealthBar
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnHealthBarWidget::OnRequestFadeInHealthBar()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnRequestFadeInHealthBar");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnHealthBarWidget.OnMaxHealthValueChanged
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnMaxHealthValueChanged(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnMaxHealthValueChanged");

	Params::UQtnHealthBarWidget_OnMaxHealthValueChanged_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnHealthValueChanged
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnHealthValueChanged(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnHealthValueChanged");

	Params::UQtnHealthBarWidget_OnHealthValueChanged_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnHealthBarInhibitorChangedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               IsInhibited                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnHealthBarInhibitorChangedEvent(bool IsInhibited)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnHealthBarInhibitorChangedEvent");

	Params::UQtnHealthBarWidget_OnHealthBarInhibitorChangedEvent_Params Parms{};

	Parms.IsInhibited = IsInhibited;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnHealthBarWidget.OnFadeOutTimerCompleted
// (Final, Native, Protected)
// Parameters:

void UQtnHealthBarWidget::OnFadeOutTimerCompleted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnFadeOutTimerCompleted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnBodyAlivenessChanged
// (Final, Native, Protected)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      AlivenessInstigator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       OldBodyAliveness                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       bodyAliveness                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnBodyAlivenessChanged(class AQtnBodyPawn* bodyPawn, class AActor* AlivenessInstigator, enum class EQtnBodyAliveness OldBodyAliveness, enum class EQtnBodyAliveness bodyAliveness, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnBodyAlivenessChanged");

	Params::UQtnHealthBarWidget_OnBodyAlivenessChanged_Params Parms{};

	Parms.bodyPawn = bodyPawn;
	Parms.AlivenessInstigator = AlivenessInstigator;
	Parms.OldBodyAliveness = OldBodyAliveness;
	Parms.bodyAliveness = bodyAliveness;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnAttributeValueMetThreshold
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnAttributeValueMetThreshold(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnAttributeValueMetThreshold");

	Params::UQtnHealthBarWidget_OnAttributeValueMetThreshold_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnAttributeValueDepleted
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnAttributeValueDepleted(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnAttributeValueDepleted");

	Params::UQtnHealthBarWidget_OnAttributeValueDepleted_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnAttributeValueChanged
// (Final, Native, Protected)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnAttributeValueChanged(class UQtnAttribute* Attribute, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnAttributeValueChanged");

	Params::UQtnHealthBarWidget_OnAttributeValueChanged_Params Parms{};

	Parms.Attribute = Attribute;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.OnAttributeRemovedEvent
// (Final, Native, Protected)
// Parameters:
// TSubclassOf<class UQtnAttribute>   AttributeClass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::OnAttributeRemovedEvent(TSubclassOf<class UQtnAttribute> AttributeClass, class UQtnAttribute* Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "OnAttributeRemovedEvent");

	Params::UQtnHealthBarWidget_OnAttributeRemovedEvent_Params Parms{};

	Parms.AttributeClass = AttributeClass;
	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.InitializeHealthBar
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQtnDamageReceptorComponent* DamageReceptor                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnHealthBarInitializationParametersInitializationParams                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::InitializeHealthBar(class UQtnDamageReceptorComponent* DamageReceptor, struct FQtnHealthBarInitializationParameters& InitializationParams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "InitializeHealthBar");

	Params::UQtnHealthBarWidget_InitializeHealthBar_Params Parms{};

	Parms.DamageReceptor = DamageReceptor;
	Parms.InitializationParams = InitializationParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.CompleteBindings
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnHealthBarWidget::CompleteBindings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "CompleteBindings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.BindToHealthAttributes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnAttribute*               InHealthAttribute                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnAttribute*               InMaxHealthAttribute                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::BindToHealthAttributes(class UQtnAttribute* InHealthAttribute, class UQtnAttribute* InMaxHealthAttribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "BindToHealthAttributes");

	Params::UQtnHealthBarWidget_BindToHealthAttributes_Params Parms{};

	Parms.InHealthAttribute = InHealthAttribute;
	Parms.InMaxHealthAttribute = InMaxHealthAttribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnHealthBarWidget.BindTextWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextBlock*                  InNameText                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnHealthBarWidget::BindTextWidgets(class UTextBlock* InNameText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "BindTextWidgets");

	Params::UQtnHealthBarWidget_BindTextWidgets_Params Parms{};

	Parms.InNameText = InNameText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnHealthBarWidget.BindStandardIconWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOverlay*                    Overlay                                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                      StatusIcon                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                      StatusIconGlow                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnHealthBarWidget::BindStandardIconWidgets(class UOverlay* Overlay, class UImage* StatusIcon, class UImage* StatusIconGlow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "BindStandardIconWidgets");

	Params::UQtnHealthBarWidget_BindStandardIconWidgets_Params Parms{};

	Parms.Overlay = Overlay;
	Parms.StatusIcon = StatusIcon;
	Parms.StatusIconGlow = StatusIconGlow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnHealthBarWidget.BindBossIconWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOverlay*                    Overlay                                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                      StatusIcon                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                      StatusIconGlow                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnHealthBarWidget::BindBossIconWidgets(class UOverlay* Overlay, class UImage* StatusIcon, class UImage* StatusIconGlow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "BindBossIconWidgets");

	Params::UQtnHealthBarWidget_BindBossIconWidgets_Params Parms{};

	Parms.Overlay = Overlay;
	Parms.StatusIcon = StatusIcon;
	Parms.StatusIconGlow = StatusIconGlow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnHealthBarWidget.BindBarWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UImage*                      HealthBar                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                      StatusBar                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                      StatusBarGlow                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnHealthBarWidget::BindBarWidgets(class UImage* HealthBar, class UImage* StatusBar, class UImage* StatusBarGlow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "BindBarWidgets");

	Params::UQtnHealthBarWidget_BindBarWidgets_Params Parms{};

	Parms.HealthBar = HealthBar;
	Parms.StatusBar = StatusBar;
	Parms.StatusBarGlow = StatusBarGlow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnHealthBarWidget.BindAttributeCallbacks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnAttribute*               Attribute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnHealthBarWidget::BindAttributeCallbacks(class UQtnAttribute* Attribute)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHealthBarWidget", "BindAttributeCallbacks");

	Params::UQtnHealthBarWidget_BindAttributeCallbacks_Params Parms{};

	Parms.Attribute = Attribute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnHijackableInterface
// (None)

class UClass* IQtnHijackableInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnHijackableInterface");

	return Clss;
}


// QtnHijackableInterface QtnGame.Default__QtnHijackableInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnHijackableInterface* IQtnHijackableInterface::GetDefaultObj()
{
	static class IQtnHijackableInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnHijackableInterface*>(IQtnHijackableInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnHintVolumeComponent
// (SceneComponent, PrimitiveComponent)

class UClass* UQtnHintVolumeComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnHintVolumeComponent");

	return Clss;
}


// QtnHintVolumeComponent QtnGame.Default__QtnHintVolumeComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnHintVolumeComponent* UQtnHintVolumeComponent::GetDefaultObj()
{
	static class UQtnHintVolumeComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnHintVolumeComponent*>(UQtnHintVolumeComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnInputComponent
// (None)

class UClass* UQtnInputComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInputComponent");

	return Clss;
}


// QtnInputComponent QtnGame.Default__QtnInputComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInputComponent* UQtnInputComponent::GetDefaultObj()
{
	static class UQtnInputComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInputComponent*>(UQtnInputComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnInputComponent.StaticResetKeyBindings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInputComponent::StaticResetKeyBindings(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputComponent", "StaticResetKeyBindings");

	Params::UQtnInputComponent_StaticResetKeyBindings_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInputComponent.StaticRebindInputAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ActionName                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                        Key                                                              (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInputComponent::StaticRebindInputAction(class UObject* WorldContextObject, class FName ActionName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputComponent", "StaticRebindInputAction");

	Params::UQtnInputComponent_StaticRebindInputAction_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActionName = ActionName;
	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInputComponent.StaticParseInputText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        InputText                                                        (Parm, NativeAccessSpecifierPublic)
// bool                               EncloseKeyboardKeysInBrackets                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnInputComponent::StaticParseInputText(class UObject* WorldContextObject, class FText InputText, bool EncloseKeyboardKeysInBrackets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputComponent", "StaticParseInputText");

	Params::UQtnInputComponent_StaticParseInputText_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InputText = InputText;
	Parms.EncloseKeyboardKeysInBrackets = EncloseKeyboardKeysInBrackets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInputComponent.StaticGetLocalInputComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnInputComponent*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnInputComponent* UQtnInputComponent::StaticGetLocalInputComponent(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputComponent", "StaticGetLocalInputComponent");

	Params::UQtnInputComponent_StaticGetLocalInputComponent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInputComponent.StaticBeginRebindInputAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ActionName                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnInputComponent::StaticBeginRebindInputAction(class UObject* WorldContextObject, class FName ActionName, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputComponent", "StaticBeginRebindInputAction");

	Params::UQtnInputComponent_StaticBeginRebindInputAction_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActionName = ActionName;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInputComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInputComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputComponent", "OnDebugDisplay");

	Params::UQtnInputComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnInputConfig
// (None)

class UClass* UQtnInputConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInputConfig");

	return Clss;
}


// QtnInputConfig QtnGame.Default__QtnInputConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInputConfig* UQtnInputConfig::GetDefaultObj()
{
	static class UQtnInputConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInputConfig*>(UQtnInputConfig::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnInputConfig.StaticGetRebindableInputsByCategories
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FQtnRebindableInputCategory>ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<struct FQtnRebindableInputCategory> UQtnInputConfig::StaticGetRebindableInputsByCategories()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputConfig", "StaticGetRebindableInputsByCategories");

	Params::UQtnInputConfig_StaticGetRebindableInputsByCategories_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnInputContext
// (None)

class UClass* UQtnInputContext::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInputContext");

	return Clss;
}


// QtnInputContext QtnGame.Default__QtnInputContext
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInputContext* UQtnInputContext::GetDefaultObj()
{
	static class UQtnInputContext* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInputContext*>(UQtnInputContext::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnInputDataBag
// (None)

class UClass* UQtnInputDataBag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInputDataBag");

	return Clss;
}


// QtnInputDataBag QtnGame.Default__QtnInputDataBag
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInputDataBag* UQtnInputDataBag::GetDefaultObj()
{
	static class UQtnInputDataBag* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInputDataBag*>(UQtnInputDataBag::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnInputFixupTextBlock
// (None)

class UClass* UQtnInputFixupTextBlock::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInputFixupTextBlock");

	return Clss;
}


// QtnInputFixupTextBlock QtnGame.Default__QtnInputFixupTextBlock
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInputFixupTextBlock* UQtnInputFixupTextBlock::GetDefaultObj()
{
	static class UQtnInputFixupTextBlock* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInputFixupTextBlock*>(UQtnInputFixupTextBlock::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnInputTextBlock
// (None)

class UClass* UQtnInputTextBlock::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInputTextBlock");

	return Clss;
}


// QtnInputTextBlock QtnGame.Default__QtnInputTextBlock
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInputTextBlock* UQtnInputTextBlock::GetDefaultObj()
{
	static class UQtnInputTextBlock* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInputTextBlock*>(UQtnInputTextBlock::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnInputTextMappingDataAsset
// (None)

class UClass* UQtnInputTextMappingDataAsset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInputTextMappingDataAsset");

	return Clss;
}


// QtnInputTextMappingDataAsset QtnGame.Default__QtnInputTextMappingDataAsset
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInputTextMappingDataAsset* UQtnInputTextMappingDataAsset::GetDefaultObj()
{
	static class UQtnInputTextMappingDataAsset* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInputTextMappingDataAsset*>(UQtnInputTextMappingDataAsset::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnInputTextMappingDataAsset.CheckAndRetrieveCorrectMapping
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      OutLocalizationString                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        CurrentLocalizationText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsMouseAndKeyboard                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInputTextMappingDataAsset::CheckAndRetrieveCorrectMapping(class FString& OutLocalizationString, class FText& CurrentLocalizationText, bool IsMouseAndKeyboard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInputTextMappingDataAsset", "CheckAndRetrieveCorrectMapping");

	Params::UQtnInputTextMappingDataAsset_CheckAndRetrieveCorrectMapping_Params Parms{};

	Parms.OutLocalizationString = OutLocalizationString;
	Parms.CurrentLocalizationText = CurrentLocalizationText;
	Parms.IsMouseAndKeyboard = IsMouseAndKeyboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnInstantUpgrade
// (None)

class UClass* UQtnInstantUpgrade::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInstantUpgrade");

	return Clss;
}


// QtnInstantUpgrade QtnGame.Default__QtnInstantUpgrade
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInstantUpgrade* UQtnInstantUpgrade::GetDefaultObj()
{
	static class UQtnInstantUpgrade* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInstantUpgrade*>(UQtnInstantUpgrade::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnInstantUpgrade.K2_ActivateUpgrade
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                TargetUser                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeResult     RolledUpgradeSettings                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnInstantUpgrade::K2_ActivateUpgrade(class AQtnBodyPawn* TargetUser, struct FQtnRolledUpgradeResult& RolledUpgradeSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInstantUpgrade", "K2_ActivateUpgrade");

	Params::UQtnInstantUpgrade_K2_ActivateUpgrade_Params Parms{};

	Parms.TargetUser = TargetUser;
	Parms.RolledUpgradeSettings = RolledUpgradeSettings;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class QtnGame.QtnInventoryComponent
// (None)

class UClass* UQtnInventoryComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnInventoryComponent");

	return Clss;
}


// QtnInventoryComponent QtnGame.Default__QtnInventoryComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnInventoryComponent* UQtnInventoryComponent::GetDefaultObj()
{
	static class UQtnInventoryComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnInventoryComponent*>(UQtnInventoryComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnInventoryComponent.TryCosmeticPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                CurrencyTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrencyPrice                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnInventoryComponent::TryCosmeticPurchase(const struct FGameplayTag& CurrencyTag, int32 CurrencyPrice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "TryCosmeticPurchase");

	Params::UQtnInventoryComponent_TryCosmeticPurchase_Params Parms{};

	Parms.CurrencyTag = CurrencyTag;
	Parms.CurrencyPrice = CurrencyPrice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.SpawnWeapon_ServerOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnItemData                WeaponItemData                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* UQtnInventoryComponent::SpawnWeapon_ServerOnly(struct FQtnItemData& WeaponItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "SpawnWeapon_ServerOnly");

	Params::UQtnInventoryComponent_SpawnWeapon_ServerOnly_Params Parms{};

	Parms.WeaponItemData = WeaponItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.SetRangedUpgrades_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnUpgradeRunProgressData>RangedUpgrades                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::SetRangedUpgrades_ServerOnly(TArray<struct FQtnUpgradeRunProgressData>& RangedUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "SetRangedUpgrades_ServerOnly");

	Params::UQtnInventoryComponent_SetRangedUpgrades_ServerOnly_Params Parms{};

	Parms.RangedUpgrades = RangedUpgrades;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.SetPower2ItemData_ServerOnly
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnItemData                PowerItemData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::SetPower2ItemData_ServerOnly(struct FQtnItemData& PowerItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "SetPower2ItemData_ServerOnly");

	Params::UQtnInventoryComponent_SetPower2ItemData_ServerOnly_Params Parms{};

	Parms.PowerItemData = PowerItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.SetPower1ItemData_ServerOnly
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnItemData                PowerItemData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::SetPower1ItemData_ServerOnly(struct FQtnItemData& PowerItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "SetPower1ItemData_ServerOnly");

	Params::UQtnInventoryComponent_SetPower1ItemData_ServerOnly_Params Parms{};

	Parms.PowerItemData = PowerItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.SetMeleeUpgrades_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnUpgradeRunProgressData>MeleeUpgrades                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::SetMeleeUpgrades_ServerOnly(TArray<struct FQtnUpgradeRunProgressData>& MeleeUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "SetMeleeUpgrades_ServerOnly");

	Params::UQtnInventoryComponent_SetMeleeUpgrades_ServerOnly_Params Parms{};

	Parms.MeleeUpgrades = MeleeUpgrades;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerSubtractCurrency
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FGameplayTag                CurrencyTag                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuantityToSubtract                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerSubtractCurrency(const struct FGameplayTag& CurrencyTag, int32 QuantityToSubtract, class UObject* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerSubtractCurrency");

	Params::UQtnInventoryComponent_ServerSubtractCurrency_Params Parms{};

	Parms.CurrencyTag = CurrencyTag;
	Parms.QuantityToSubtract = QuantityToSubtract;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerSpawnAndAddInventoryItem
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StackCount                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               NotifyPlayerUI                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerSpawnAndAddInventoryItem(TSubclassOf<class AQtnItem> ItemClass, int32 StackCount, bool NotifyPlayerUI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerSpawnAndAddInventoryItem");

	Params::UQtnInventoryComponent_ServerSpawnAndAddInventoryItem_Params Parms{};

	Parms.ItemClass = ItemClass;
	Parms.StackCount = StackCount;
	Parms.NotifyPlayerUI = NotifyPlayerUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerSetPower2ItemData
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FQtnItemData                PowerItemData                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerSetPower2ItemData(struct FQtnItemData& PowerItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerSetPower2ItemData");

	Params::UQtnInventoryComponent_ServerSetPower2ItemData_Params Parms{};

	Parms.PowerItemData = PowerItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerSetPower1ItemData
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FQtnItemData                PowerItemData                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerSetPower1ItemData(struct FQtnItemData& PowerItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerSetPower1ItemData");

	Params::UQtnInventoryComponent_ServerSetPower1ItemData_Params Parms{};

	Parms.PowerItemData = PowerItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerSetItemStackCount
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StackCount                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               NotifyUI                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerSetItemStackCount(TSubclassOf<class AQtnItem> ItemClass, int32 StackCount, bool NotifyUI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerSetItemStackCount");

	Params::UQtnInventoryComponent_ServerSetItemStackCount_Params Parms{};

	Parms.ItemClass = ItemClass;
	Parms.StackCount = StackCount;
	Parms.NotifyUI = NotifyUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerSetDefaultLoadout
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FQtnItemData                MeleeWeapon                                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnItemData                RangedWeapon                                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnItemData                Power1                                                           (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnItemData                Power2                                                           (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerSetDefaultLoadout(struct FQtnItemData& MeleeWeapon, struct FQtnItemData& RangedWeapon, struct FQtnItemData& Power1, struct FQtnItemData& Power2)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerSetDefaultLoadout");

	Params::UQtnInventoryComponent_ServerSetDefaultLoadout_Params Parms{};

	Parms.MeleeWeapon = MeleeWeapon;
	Parms.RangedWeapon = RangedWeapon;
	Parms.Power1 = Power1;
	Parms.Power2 = Power2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerSetCurrency
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FGameplayTag                CurrencyTag                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Quantity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerSetCurrency(const struct FGameplayTag& CurrencyTag, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerSetCurrency");

	Params::UQtnInventoryComponent_ServerSetCurrency_Params Parms{};

	Parms.CurrencyTag = CurrencyTag;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerResetCurrency
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void UQtnInventoryComponent::ServerResetCurrency()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerResetCurrency");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerRequestWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              VaultIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RemoveOtherWeaponsFromSlot                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerRequestWeapon(int32 VaultIndex, bool RemoveOtherWeaponsFromSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerRequestWeapon");

	Params::UQtnInventoryComponent_ServerRequestWeapon_Params Parms{};

	Parms.VaultIndex = VaultIndex;
	Parms.RemoveOtherWeaponsFromSlot = RemoveOtherWeaponsFromSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerRemoveSpecificItem
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AQtnItem*                    PItemToRemove                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DropItIntoTheWorld                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               NotifyPlayerUI                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerRemoveSpecificItem(class AQtnItem* PItemToRemove, bool DropItIntoTheWorld, bool NotifyPlayerUI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerRemoveSpecificItem");

	Params::UQtnInventoryComponent_ServerRemoveSpecificItem_Params Parms{};

	Parms.PItemToRemove = PItemToRemove;
	Parms.DropItIntoTheWorld = DropItIntoTheWorld;
	Parms.NotifyPlayerUI = NotifyPlayerUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerRemoveItem
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StackCount                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               NotifyUI                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerRemoveItem(TSubclassOf<class AQtnItem> ItemClass, int32 StackCount, bool NotifyUI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerRemoveItem");

	Params::UQtnInventoryComponent_ServerRemoveItem_Params Parms{};

	Parms.ItemClass = ItemClass;
	Parms.StackCount = StackCount;
	Parms.NotifyUI = NotifyUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerDropItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StackCount                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerDropItem(TSubclassOf<class AQtnItem> ItemClass, int32 StackCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerDropItem");

	Params::UQtnInventoryComponent_ServerDropItem_Params Parms{};

	Parms.ItemClass = ItemClass;
	Parms.StackCount = StackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ServerAddCurrency
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FGameplayTag                CurrencyTag                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuantityToAdd                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ServerAddCurrency(const struct FGameplayTag& CurrencyTag, int32 QuantityToAdd, class UObject* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ServerAddCurrency");

	Params::UQtnInventoryComponent_ServerAddCurrency_Params Parms{};

	Parms.CurrencyTag = CurrencyTag;
	Parms.QuantityToAdd = QuantityToAdd;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnRep_RangedEquipmentOnRepInducer
// (Final, Native, Protected)
// Parameters:

void UQtnInventoryComponent::OnRep_RangedEquipmentOnRepInducer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnRep_RangedEquipmentOnRepInducer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnRep_RangedEquipment
// (Final, Native, Protected)
// Parameters:

void UQtnInventoryComponent::OnRep_RangedEquipment()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnRep_RangedEquipment");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnRep_NonEquippableItemsOnRepInducer
// (Final, Native, Protected)
// Parameters:

void UQtnInventoryComponent::OnRep_NonEquippableItemsOnRepInducer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnRep_NonEquippableItemsOnRepInducer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnRep_NonEquippableItems
// (Final, Native, Protected)
// Parameters:

void UQtnInventoryComponent::OnRep_NonEquippableItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnRep_NonEquippableItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnRep_MeleeEquipmentOnRepInducer
// (Final, Native, Protected)
// Parameters:

void UQtnInventoryComponent::OnRep_MeleeEquipmentOnRepInducer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnRep_MeleeEquipmentOnRepInducer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnRep_MeleeEquipment
// (Final, Native, Protected)
// Parameters:

void UQtnInventoryComponent::OnRep_MeleeEquipment()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnRep_MeleeEquipment");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnRep_Currencies
// (Final, Native, Public)
// Parameters:

void UQtnInventoryComponent::OnRep_Currencies()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnRep_Currencies");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnItemInventoryEquipEvent_ServerOnly
// (Final, Native, Protected)
// Parameters:
// class AQtnItem*                    PItem                                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POwningActor                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::OnItemInventoryEquipEvent_ServerOnly(class AQtnItem* PItem, class AActor* POwningActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnItemInventoryEquipEvent_ServerOnly");

	Params::UQtnInventoryComponent_OnItemInventoryEquipEvent_ServerOnly_Params Parms{};

	Parms.PItem = PItem;
	Parms.POwningActor = POwningActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "OnDebugDisplay");

	Params::UQtnInventoryComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnInventoryComponent.LocalRequestWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              VaultIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RemoveOtherWeaponsFromSlot                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::LocalRequestWeapon(int32 VaultIndex, bool RemoveOtherWeaponsFromSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "LocalRequestWeapon");

	Params::UQtnInventoryComponent_LocalRequestWeapon_Params Parms{};

	Parms.VaultIndex = VaultIndex;
	Parms.RemoveOtherWeaponsFromSlot = RemoveOtherWeaponsFromSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.LocalEquipOrUseItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnItem*                    ItemInstance                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::LocalEquipOrUseItem(class AQtnItem* ItemInstance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "LocalEquipOrUseItem");

	Params::UQtnInventoryComponent_LocalEquipOrUseItem_Params Parms{};

	Parms.ItemInstance = ItemInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.HasInventoryItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClassToCheck                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnItemDesignation     ItemDesignation                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowInheritedClasses                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnInventoryComponent::HasInventoryItem(TSubclassOf<class AQtnItem> ItemClassToCheck, enum class EQtnItemDesignation ItemDesignation, bool AllowInheritedClasses)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "HasInventoryItem");

	Params::UQtnInventoryComponent_HasInventoryItem_Params Parms{};

	Parms.ItemClassToCheck = ItemClassToCheck;
	Parms.ItemDesignation = ItemDesignation;
	Parms.AllowInheritedClasses = AllowInheritedClasses;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetVaultWeapons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnItemData>        ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<struct FQtnItemData> UQtnInventoryComponent::GetVaultWeapons()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetVaultWeapons");

	Params::UQtnInventoryComponent_GetVaultWeapons_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetVaultPowers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnItemData>        ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<struct FQtnItemData> UQtnInventoryComponent::GetVaultPowers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetVaultPowers");

	Params::UQtnInventoryComponent_GetVaultPowers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetRangedEquippables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnItemEntry>       ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FQtnItemEntry> UQtnInventoryComponent::GetRangedEquippables()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetRangedEquippables");

	Params::UQtnInventoryComponent_GetRangedEquippables_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetPower2ItemData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

struct FQtnItemData UQtnInventoryComponent::GetPower2ItemData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetPower2ItemData");

	Params::UQtnInventoryComponent_GetPower2ItemData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetPower1ItemData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

struct FQtnItemData UQtnInventoryComponent::GetPower1ItemData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetPower1ItemData");

	Params::UQtnInventoryComponent_GetPower1ItemData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetOwningDronePawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnDronePawn*               ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnDronePawn* UQtnInventoryComponent::GetOwningDronePawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetOwningDronePawn");

	Params::UQtnInventoryComponent_GetOwningDronePawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetOwningBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnInventoryComponent::GetOwningBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetOwningBodyPawn");

	Params::UQtnInventoryComponent_GetOwningBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetNonEquippableItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnItemEntry>       ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FQtnItemEntry> UQtnInventoryComponent::GetNonEquippableItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetNonEquippableItems");

	Params::UQtnInventoryComponent_GetNonEquippableItems_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetMeleeEquippables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnItemEntry>       ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FQtnItemEntry> UQtnInventoryComponent::GetMeleeEquippables()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetMeleeEquippables");

	Params::UQtnInventoryComponent_GetMeleeEquippables_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetInventoryItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClassToCheck                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForHotkeyDisplay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnInventoryComponent::GetInventoryItemCount(TSubclassOf<class AQtnItem> ItemClassToCheck, bool ForHotkeyDisplay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetInventoryItemCount");

	Params::UQtnInventoryComponent_GetInventoryItemCount_Params Parms{};

	Parms.ItemClassToCheck = ItemClassToCheck;
	Parms.ForHotkeyDisplay = ForHotkeyDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetInventoryItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClassToCheck                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnItemDesignation     ItemDesignation                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowInheritedClasses                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* UQtnInventoryComponent::GetInventoryItem(TSubclassOf<class AQtnItem> ItemClassToCheck, enum class EQtnItemDesignation ItemDesignation, bool AllowInheritedClasses)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetInventoryItem");

	Params::UQtnInventoryComponent_GetInventoryItem_Params Parms{};

	Parms.ItemClassToCheck = ItemClassToCheck;
	Parms.ItemDesignation = ItemDesignation;
	Parms.AllowInheritedClasses = AllowInheritedClasses;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetCurrencyQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                CurrencyTag                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnInventoryComponent::GetCurrencyQuantity(const struct FGameplayTag& CurrencyTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetCurrencyQuantity");

	Params::UQtnInventoryComponent_GetCurrencyQuantity_Params Parms{};

	Parms.CurrencyTag = CurrencyTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetCurrencyArray
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnCurrencyEntry>   CurrencyArray                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::GetCurrencyArray(TArray<struct FQtnCurrencyEntry>* CurrencyArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetCurrencyArray");

	Params::UQtnInventoryComponent_GetCurrencyArray_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CurrencyArray != nullptr)
		*CurrencyArray = std::move(Parms.CurrencyArray);

}


// Function QtnGame.QtnInventoryComponent.GetBestRangedEquippable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* UQtnInventoryComponent::GetBestRangedEquippable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetBestRangedEquippable");

	Params::UQtnInventoryComponent_GetBestRangedEquippable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.GetBestMeleeEquippable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* UQtnInventoryComponent::GetBestMeleeEquippable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "GetBestMeleeEquippable");

	Params::UQtnInventoryComponent_GetBestMeleeEquippable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.ClientOnItemRemoved
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RemainingStackCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               NotifyPlayerUI                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ClientOnItemRemoved(TSubclassOf<class AQtnItem> ItemClass, int32 RemainingStackCount, bool NotifyPlayerUI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ClientOnItemRemoved");

	Params::UQtnInventoryComponent_ClientOnItemRemoved_Params Parms{};

	Parms.ItemClass = ItemClass;
	Parms.RemainingStackCount = RemainingStackCount;
	Parms.NotifyPlayerUI = NotifyPlayerUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ClientNotifyUIItemRemove
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ClientNotifyUIItemRemove(TSubclassOf<class AQtnItem> ItemClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ClientNotifyUIItemRemove");

	Params::UQtnInventoryComponent_ClientNotifyUIItemRemove_Params Parms{};

	Parms.ItemClass = ItemClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ClientNotifyUIItemAddDisplayOnly
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AQtnItem*                    PLootItem                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ClientNotifyUIItemAddDisplayOnly(class AQtnItem* PLootItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ClientNotifyUIItemAddDisplayOnly");

	Params::UQtnInventoryComponent_ClientNotifyUIItemAddDisplayOnly_Params Parms{};

	Parms.PLootItem = PLootItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.ClientNotifyUIItemAdd
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::ClientNotifyUIItemAdd(TSubclassOf<class AQtnItem> ItemClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "ClientNotifyUIItemAdd");

	Params::UQtnInventoryComponent_ClientNotifyUIItemAdd_Params Parms{};

	Parms.ItemClass = ItemClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnInventoryComponent.BuildUsableItemsDeck
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnItemEntry>       OutputDeck                                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                IntendedVictim                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnItemEntry>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FQtnItemEntry> UQtnInventoryComponent::BuildUsableItemsDeck(TArray<struct FQtnItemEntry>& OutputDeck, class AQtnBodyPawn* IntendedVictim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "BuildUsableItemsDeck");

	Params::UQtnInventoryComponent_BuildUsableItemsDeck_Params Parms{};

	Parms.OutputDeck = OutputDeck;
	Parms.IntendedVictim = IntendedVictim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.BuildFilteredItemsList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               RangedEquippables                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               MeleeEquippables                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               NonEquippables                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnItemEntry>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FQtnItemEntry> UQtnInventoryComponent::BuildFilteredItemsList(bool RangedEquippables, bool MeleeEquippables, bool NonEquippables)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "BuildFilteredItemsList");

	Params::UQtnInventoryComponent_BuildFilteredItemsList_Params Parms{};

	Parms.RangedEquippables = RangedEquippables;
	Parms.MeleeEquippables = MeleeEquippables;
	Parms.NonEquippables = NonEquippables;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnInventoryComponent.AddItemToVault_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnItemData                ItemData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnInventoryComponent::AddItemToVault_ServerOnly(struct FQtnItemData& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnInventoryComponent", "AddItemToVault_ServerOnly");

	Params::UQtnInventoryComponent_AddItemToVault_ServerOnly_Params Parms{};

	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnItem
// (Actor)

class UClass* AQtnItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnItem");

	return Clss;
}


// QtnItem QtnGame.Default__QtnItem
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnItem* AQtnItem::GetDefaultObj()
{
	static class AQtnItem* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnItem*>(AQtnItem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnItem.WillBeDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::WillBeDestroyed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "WillBeDestroyed");

	Params::AQtnItem_WillBeDestroyed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.ShouldNotifyUIOfAddRemove
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::ShouldNotifyUIOfAddRemove()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "ShouldNotifyUIOfAddRemove");

	Params::AQtnItem_ShouldNotifyUIOfAddRemove_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.SetPhysicsAllowed_AuthorityOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               DoPhysics                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::SetPhysicsAllowed_AuthorityOnly(bool DoPhysics)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "SetPhysicsAllowed_AuthorityOnly");

	Params::AQtnItem_SetPhysicsAllowed_AuthorityOnly_Params Parms{};

	Parms.DoPhysics = DoPhysics;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.SetLootRecipient_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                PLootRecipient                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::SetLootRecipient_ServerOnly(class AQtnBodyPawn* PLootRecipient)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "SetLootRecipient_ServerOnly");

	Params::AQtnItem_SetLootRecipient_ServerOnly_Params Parms{};

	Parms.PLootRecipient = PLootRecipient;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.SetItemData_AuthorityOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FQtnItemData                ItemData                                                         (Parm, NativeAccessSpecifierPublic)

void AQtnItem::SetItemData_AuthorityOnly(const struct FQtnItemData& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "SetItemData_AuthorityOnly");

	Params::AQtnItem_SetItemData_AuthorityOnly_Params Parms{};

	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.ServerSetStackCount
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int32                              StackCount                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::ServerSetStackCount(int32 StackCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "ServerSetStackCount");

	Params::AQtnItem_ServerSetStackCount_Params Parms{};

	Parms.StackCount = StackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnItem.QtnOnItemReadyForGameplayEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnItem*                    ReadyItem                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::QtnOnItemReadyForGameplayEvent__DelegateSignature(class AQtnItem* ReadyItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "QtnOnItemReadyForGameplayEvent__DelegateSignature");

	Params::AQtnItem_QtnOnItemReadyForGameplayEvent__DelegateSignature_Params Parms{};

	Parms.ReadyItem = ReadyItem;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.PlayDetachedItemSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                  Sound                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Spatialize                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::PlayDetachedItemSound(class USoundBase* Sound, bool Spatialize)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "PlayDetachedItemSound");

	Params::AQtnItem_PlayDetachedItemSound_Params Parms{};

	Parms.Sound = Sound;
	Parms.Spatialize = Spatialize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.PlayAttachedItemSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                  Sound                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Spatialize                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::PlayAttachedItemSound(class USoundBase* Sound, bool Spatialize)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "PlayAttachedItemSound");

	Params::AQtnItem_PlayAttachedItemSound_Params Parms{};

	Parms.Sound = Sound;
	Parms.Spatialize = Spatialize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnRep_PendingDestroy
// (Final, Native, Private)
// Parameters:

void AQtnItem::OnRep_PendingDestroy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnRep_PendingDestroy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnRep_LootRecipient
// (Final, Native, Public)
// Parameters:

void AQtnItem::OnRep_LootRecipient()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnRep_LootRecipient");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnRep_ItemData
// (Final, Native, Public)
// Parameters:

void AQtnItem::OnRep_ItemData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnRep_ItemData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnRep_InternalStackCount
// (Final, Native, Private)
// Parameters:

void AQtnItem::OnRep_InternalStackCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnRep_InternalStackCount");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnRep_HasEverHadLootRecipient
// (Final, Native, Public)
// Parameters:

void AQtnItem::OnRep_HasEverHadLootRecipient()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnRep_HasEverHadLootRecipient");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnRep_DoPhysics
// (Final, Native, Private)
// Parameters:

void AQtnItem::OnRep_DoPhysics()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnRep_DoPhysics");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnRep_AccumulatingBodyPawn
// (Final, Native, Public)
// Parameters:

void AQtnItem::OnRep_AccumulatingBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnRep_AccumulatingBodyPawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.OnItemUse
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                UsingBodyPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnItemUseIntent       UseIntent                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::OnItemUse(class AQtnBodyPawn* UsingBodyPawn, enum class EQtnItemUseIntent UseIntent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnItemUse");

	Params::AQtnItem_OnItemUse_Params Parms{};

	Parms.UsingBodyPawn = UsingBodyPawn;
	Parms.UseIntent = UseIntent;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.OnItemSetThirdPersonMeshesHidden
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               bNewHiddenInGame                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::OnItemSetThirdPersonMeshesHidden(bool bNewHiddenInGame)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnItemSetThirdPersonMeshesHidden");

	Params::AQtnItem_OnItemSetThirdPersonMeshesHidden_Params Parms{};

	Parms.bNewHiddenInGame = bNewHiddenInGame;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.OnItemDestroyPending
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                      OwningActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::OnItemDestroyPending(class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnItemDestroyPending");

	Params::AQtnItem_OnItemDestroyPending_Params Parms{};

	Parms.OwningActor = OwningActor;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.OnItemActionNotify
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    UsingPawn                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnItemUseAction       UseAction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::OnItemActionNotify(class AQtnPawn* UsingPawn, enum class EQtnItemUseAction UseAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnItemActionNotify");

	Params::AQtnItem_OnItemActionNotify_Params Parms{};

	Parms.UsingPawn = UsingPawn;
	Parms.UseAction = UseAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.OnInventoryRemove
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                      OwningActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::OnInventoryRemove(class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnInventoryRemove");

	Params::AQtnItem_OnInventoryRemove_Params Parms{};

	Parms.OwningActor = OwningActor;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.OnInventoryAdd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                      OwningActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::OnInventoryAdd(class AActor* OwningActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnInventoryAdd");

	Params::AQtnItem_OnInventoryAdd_Params Parms{};

	Parms.OwningActor = OwningActor;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnDebugDisplay");

	Params::AQtnItem_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.OnAttachItemData
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FQtnItemData                ItemData                                                         (Parm, NativeAccessSpecifierPublic)

void AQtnItem::OnAttachItemData(const struct FQtnItemData& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "OnAttachItemData");

	Params::AQtnItem_OnAttachItemData_Params Parms{};

	Parms.ItemData = ItemData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnItem.MulticastPlaySound
// (BlueprintAuthorityOnly, Net, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                  Sound                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Spatialize                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Attached                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::MulticastPlaySound(class USoundBase* Sound, bool Spatialize, bool Attached)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "MulticastPlaySound");

	Params::AQtnItem_MulticastPlaySound_Params Parms{};

	Parms.Sound = Sound;
	Parms.Spatialize = Spatialize;
	Parms.Attached = Attached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.MulticastHandleItemPickup
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AQtnBodyPawn*                PFrobbingPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::MulticastHandleItemPickup(class AQtnBodyPawn* PFrobbingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "MulticastHandleItemPickup");

	Params::AQtnItem_MulticastHandleItemPickup_Params Parms{};

	Parms.PFrobbingPawn = PFrobbingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.IsRangedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::IsRangedWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "IsRangedWeapon");

	Params::AQtnItem_IsRangedWeapon_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.IsLootRecipientLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::IsLootRecipientLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "IsLootRecipientLocalPlayer");

	Params::AQtnItem_IsLootRecipientLocalPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.IsLootRecipient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                PBodyPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::IsLootRecipient(class AQtnBodyPawn* PBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "IsLootRecipient");

	Params::AQtnItem_IsLootRecipient_Params Parms{};

	Parms.PBodyPawn = PBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.IsHandMeshVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::IsHandMeshVisible()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "IsHandMeshVisible");

	Params::AQtnItem_IsHandMeshVisible_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::IsEquipped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "IsEquipped");

	Params::AQtnItem_IsEquipped_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.IsBaseWeapon
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::IsBaseWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "IsBaseWeapon");

	Params::AQtnItem_IsBaseWeapon_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.HasLootRecipient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::HasLootRecipient()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "HasLootRecipient");

	Params::AQtnItem_HasLootRecipient_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.HandleItemPickupDiscard_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                FrobbingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::HandleItemPickupDiscard_ServerOnly(class AQtnBodyPawn* FrobbingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "HandleItemPickupDiscard_ServerOnly");

	Params::AQtnItem_HandleItemPickupDiscard_ServerOnly_Params Parms{};

	Parms.FrobbingPawn = FrobbingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.HandleItemPickup_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                FrobbingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::HandleItemPickup_ServerOnly(class AQtnBodyPawn* FrobbingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "HandleItemPickup_ServerOnly");

	Params::AQtnItem_HandleItemPickup_ServerOnly_Params Parms{};

	Parms.FrobbingPawn = FrobbingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.HandleFrobAccumulatorSuccess
// (Final, Native, Protected)
// Parameters:
// class UQtnFrobAccumulatorComponent*PAccumulator                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    PLastFrobbingPawn                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::HandleFrobAccumulatorSuccess(class UQtnFrobAccumulatorComponent* PAccumulator, class AQtnPawn* PLastFrobbingPawn, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "HandleFrobAccumulatorSuccess");

	Params::AQtnItem_HandleFrobAccumulatorSuccess_Params Parms{};

	Parms.PAccumulator = PAccumulator;
	Parms.PLastFrobbingPawn = PLastFrobbingPawn;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.GetVerbComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerbComponent*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerbComponent* AQtnItem::GetVerbComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetVerbComponent");

	Params::AQtnItem_GetVerbComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetUpgradeSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnUpgradeSlot*>     ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnUpgradeSlot*> AQtnItem::GetUpgradeSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetUpgradeSlots");

	Params::AQtnItem_GetUpgradeSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetOwningPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* AQtnItem::GetOwningPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetOwningPawn");

	Params::AQtnItem_GetOwningPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetOwningInventoryComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnInventoryComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnInventoryComponent* AQtnItem::GetOwningInventoryComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetOwningInventoryComponent");

	Params::AQtnItem_GetOwningInventoryComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetOwningBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnItem::GetOwningBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetOwningBodyPawn");

	Params::AQtnItem_GetOwningBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetMeshFromPawnSocket
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        SocketName                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMeshComponent*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMeshComponent* AQtnItem::GetMeshFromPawnSocket(class FName& SocketName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetMeshFromPawnSocket");

	Params::AQtnItem_GetMeshFromPawnSocket_Params Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetLootRecipient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnItem::GetLootRecipient()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetLootRecipient");

	Params::AQtnItem_GetLootRecipient_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetItemData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnItemData AQtnItem::GetItemData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetItemData");

	Params::AQtnItem_GetItemData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetItemArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* AQtnItem::GetItemArchetype(TSubclassOf<class AQtnItem> ItemClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetItemArchetype");

	Params::AQtnItem_GetItemArchetype_Params Parms{};

	Parms.ItemClass = ItemClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* AQtnItem::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "GetIconForUI");

	Params::AQtnItem_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.DropItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NumToDrop                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::DropItem(int32 NumToDrop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "DropItem");

	Params::AQtnItem_DropItem_Params Parms{};

	Parms.NumToDrop = NumToDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.DoUseItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    UsingPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      IntendedTarget                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AltUse                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnItemUseIntent       UseIntent                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::DoUseItem(class AQtnPawn* UsingPawn, class AActor* IntendedTarget, bool AltUse, enum class EQtnItemUseIntent UseIntent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "DoUseItem");

	Params::AQtnItem_DoUseItem_Params Parms{};

	Parms.UsingPawn = UsingPawn;
	Parms.IntendedTarget = IntendedTarget;
	Parms.AltUse = AltUse;
	Parms.UseIntent = UseIntent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.DetachMeshFromPawnSocket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        SocketName                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::DetachMeshFromPawnSocket(class FName& SocketName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "DetachMeshFromPawnSocket");

	Params::AQtnItem_DetachMeshFromPawnSocket_Params Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.CanBeUsedOnTarget
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    UsingPawn                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AltUse                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        AffordanceMessage                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                        RejectionMessage                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnItem::CanBeUsedOnTarget(class AQtnPawn* UsingPawn, class AActor* Target, bool AltUse, class FText* AffordanceMessage, class FText* RejectionMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "CanBeUsedOnTarget");

	Params::AQtnItem_CanBeUsedOnTarget_Params Parms{};

	Parms.UsingPawn = UsingPawn;
	Parms.Target = Target;
	Parms.AltUse = AltUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AffordanceMessage != nullptr)
		*AffordanceMessage = Parms.AffordanceMessage;

	if (RejectionMessage != nullptr)
		*RejectionMessage = Parms.RejectionMessage;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItem.AttachMeshToPawnSocket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                        SocketName                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMeshComponent*              MeshToAttach                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::AttachMeshToPawnSocket(class FName& SocketName, class UMeshComponent* MeshToAttach)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "AttachMeshToPawnSocket");

	Params::AQtnItem_AttachMeshToPawnSocket_Params Parms{};

	Parms.SocketName = SocketName;
	Parms.MeshToAttach = MeshToAttach;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.AddModularThirdPersonStaticMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMesh*                 StaticMesh                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          Material                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SocketName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::AddModularThirdPersonStaticMesh(class UStaticMesh* StaticMesh, class UMaterialInterface* Material, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "AddModularThirdPersonStaticMesh");

	Params::AQtnItem_AddModularThirdPersonStaticMesh_Params Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.Material = Material;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnItem.AddModularThirdPersonSkeletalMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*               SkeletalMesh                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*          Material                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SocketName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnItem::AddModularThirdPersonSkeletalMesh(class USkeletalMesh* SkeletalMesh, class UMaterialInterface* Material, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItem", "AddModularThirdPersonSkeletalMesh");

	Params::AQtnItem_AddModularThirdPersonSkeletalMesh_Params Parms{};

	Parms.SkeletalMesh = SkeletalMesh;
	Parms.Material = Material;
	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnItemContainer
// (Actor)

class UClass* AQtnItemContainer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnItemContainer");

	return Clss;
}


// QtnItemContainer QtnGame.Default__QtnItemContainer
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnItemContainer* AQtnItemContainer::GetDefaultObj()
{
	static class AQtnItemContainer* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnItemContainer*>(AQtnItemContainer::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnItemContainer.GetItemContainerArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class AQtnItemContainer>ItemContainerClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnItemContainer*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItemContainer* AQtnItemContainer::GetItemContainerArchetype(TSubclassOf<class AQtnItemContainer> ItemContainerClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemContainer", "GetItemContainerArchetype");

	Params::AQtnItemContainer_GetItemContainerArchetype_Params Parms{};

	Parms.ItemContainerClass = ItemContainerClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemContainer.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* AQtnItemContainer::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemContainer", "GetIconForUI");

	Params::AQtnItemContainer_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnItemDataProviderInterface
// (None)

class UClass* IQtnItemDataProviderInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnItemDataProviderInterface");

	return Clss;
}


// QtnItemDataProviderInterface QtnGame.Default__QtnItemDataProviderInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnItemDataProviderInterface* IQtnItemDataProviderInterface::GetDefaultObj()
{
	static class IQtnItemDataProviderInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnItemDataProviderInterface*>(IQtnItemDataProviderInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnItemDataProviderInterface.FetchWorldLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IQtnItemDataProviderInterface::FetchWorldLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemDataProviderInterface", "FetchWorldLocation");

	Params::IQtnItemDataProviderInterface_FetchWorldLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemDataProviderInterface.FetchShowItemPopUpBool
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnItemDataProviderInterface::FetchShowItemPopUpBool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemDataProviderInterface", "FetchShowItemPopUpBool");

	Params::IQtnItemDataProviderInterface_FetchShowItemPopUpBool_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemDataProviderInterface.FetchItemData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnItemData IQtnItemDataProviderInterface::FetchItemData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemDataProviderInterface", "FetchItemData");

	Params::IQtnItemDataProviderInterface_FetchItemData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemDataProviderInterface.FetchItemActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* IQtnItemDataProviderInterface::FetchItemActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemDataProviderInterface", "FetchItemActor");

	Params::IQtnItemDataProviderInterface_FetchItemActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnItemGeoDatabase
// (None)

class UClass* UQtnItemGeoDatabase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnItemGeoDatabase");

	return Clss;
}


// QtnItemGeoDatabase QtnGame.Default__QtnItemGeoDatabase
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnItemGeoDatabase* UQtnItemGeoDatabase::GetDefaultObj()
{
	static class UQtnItemGeoDatabase* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnItemGeoDatabase*>(UQtnItemGeoDatabase::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnItemGeoDatabase.RollGeometryForPart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQtnTagDescriptionComponent* TagsOfItem                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LevelOfItem                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnModularWeaponPart   PartOfItem                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ChosenName                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnModularWeaponAttachment ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnModularWeaponAttachment UQtnItemGeoDatabase::RollGeometryForPart(class UQtnTagDescriptionComponent* TagsOfItem, int32 LevelOfItem, enum class EQtnModularWeaponPart PartOfItem, class FName* ChosenName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemGeoDatabase", "RollGeometryForPart");

	Params::UQtnItemGeoDatabase_RollGeometryForPart_Params Parms{};

	Parms.TagsOfItem = TagsOfItem;
	Parms.LevelOfItem = LevelOfItem;
	Parms.PartOfItem = PartOfItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ChosenName != nullptr)
		*ChosenName = Parms.ChosenName;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemGeoDatabase.MakeTagReactionArrayFromModularWeaponArray
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnModularWeaponAttachmentConfiguration>ModularWeaponList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FQtnTagReactiveWeighting>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQtnTagReactiveWeighting> UQtnItemGeoDatabase::MakeTagReactionArrayFromModularWeaponArray(TArray<struct FQtnModularWeaponAttachmentConfiguration>& ModularWeaponList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemGeoDatabase", "MakeTagReactionArrayFromModularWeaponArray");

	Params::UQtnItemGeoDatabase_MakeTagReactionArrayFromModularWeaponArray_Params Parms{};

	Parms.ModularWeaponList = ModularWeaponList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemGeoDatabase.GetConfigurationByNameAndPart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnTagDescriptionComponent* TagsOfItem                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        NameOfItem                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LevelOfItem                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnModularWeaponPart   PartOfItem                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnModularWeaponAttachment ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnModularWeaponAttachment UQtnItemGeoDatabase::GetConfigurationByNameAndPart(class UQtnTagDescriptionComponent* TagsOfItem, class FName NameOfItem, int32 LevelOfItem, enum class EQtnModularWeaponPart PartOfItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemGeoDatabase", "GetConfigurationByNameAndPart");

	Params::UQtnItemGeoDatabase_GetConfigurationByNameAndPart_Params Parms{};

	Parms.TagsOfItem = TagsOfItem;
	Parms.NameOfItem = NameOfItem;
	Parms.LevelOfItem = LevelOfItem;
	Parms.PartOfItem = PartOfItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemGeoDatabase.FindGeoOptionsByTagAndCategory
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQtnTagDescriptionComponent* TagsOfItem                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LevelOfItem                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnModularWeaponPart   PartOfItem                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                PossibleNames                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<float>                      PossibleWeights                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FQtnModularWeaponAttachmentConfiguration>PossibleAttachments                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnItemGeoDatabase::FindGeoOptionsByTagAndCategory(class UQtnTagDescriptionComponent* TagsOfItem, int32 LevelOfItem, enum class EQtnModularWeaponPart PartOfItem, TArray<class FName>* PossibleNames, TArray<float>* PossibleWeights, TArray<struct FQtnModularWeaponAttachmentConfiguration>* PossibleAttachments)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemGeoDatabase", "FindGeoOptionsByTagAndCategory");

	Params::UQtnItemGeoDatabase_FindGeoOptionsByTagAndCategory_Params Parms{};

	Parms.TagsOfItem = TagsOfItem;
	Parms.LevelOfItem = LevelOfItem;
	Parms.PartOfItem = PartOfItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PossibleNames != nullptr)
		*PossibleNames = std::move(Parms.PossibleNames);

	if (PossibleWeights != nullptr)
		*PossibleWeights = std::move(Parms.PossibleWeights);

	if (PossibleAttachments != nullptr)
		*PossibleAttachments = std::move(Parms.PossibleAttachments);

}


// Function QtnGame.QtnItemGeoDatabase.FindCorrectGeoDatabase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQtnTagDescriptionComponent* TagsOfItem                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LevelOfItem                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WasConfigurationFound                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnModularWeaponConfigurationReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnModularWeaponConfiguration UQtnItemGeoDatabase::FindCorrectGeoDatabase(class UQtnTagDescriptionComponent* TagsOfItem, int32 LevelOfItem, bool* WasConfigurationFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemGeoDatabase", "FindCorrectGeoDatabase");

	Params::UQtnItemGeoDatabase_FindCorrectGeoDatabase_Params Parms{};

	Parms.TagsOfItem = TagsOfItem;
	Parms.LevelOfItem = LevelOfItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (WasConfigurationFound != nullptr)
		*WasConfigurationFound = Parms.WasConfigurationFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnItemGeoDatabase.ExtractListsGivenConfigurationAndPart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnModularWeaponConfigurationConfigurationList                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EQtnModularWeaponPart   PartOfItem                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                NameList                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FQtnModularWeaponAttachmentConfiguration>ModularWeaponList                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnItemGeoDatabase::ExtractListsGivenConfigurationAndPart(struct FQtnModularWeaponConfiguration& ConfigurationList, enum class EQtnModularWeaponPart PartOfItem, TArray<class FName>* NameList, TArray<struct FQtnModularWeaponAttachmentConfiguration>* ModularWeaponList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnItemGeoDatabase", "ExtractListsGivenConfigurationAndPart");

	Params::UQtnItemGeoDatabase_ExtractListsGivenConfigurationAndPart_Params Parms{};

	Parms.ConfigurationList = ConfigurationList;
	Parms.PartOfItem = PartOfItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NameList != nullptr)
		*NameList = std::move(Parms.NameList);

	if (ModularWeaponList != nullptr)
		*ModularWeaponList = std::move(Parms.ModularWeaponList);

}


// Class QtnGame.QtnJsonObject
// (None)

class UClass* UQtnJsonObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnJsonObject");

	return Clss;
}


// QtnJsonObject QtnGame.Default__QtnJsonObject
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnJsonObject* UQtnJsonObject::GetDefaultObj()
{
	static class UQtnJsonObject* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnJsonObject*>(UQtnJsonObject::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnJsonObject.SetStringField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      StringValue                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetStringField(const class FString& FieldName, const class FString& StringValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetStringField");

	Params::UQtnJsonObject_SetStringField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.StringValue = StringValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetStringArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              StringArray                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetStringArrayField(const class FString& FieldName, TArray<class FString>& StringArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetStringArrayField");

	Params::UQtnJsonObject_SetStringArrayField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.StringArray = StringArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetObjectField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonObject*              JsonObject                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetObjectField(const class FString& FieldName, class UQtnJsonObject* JsonObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetObjectField");

	Params::UQtnJsonObject_SetObjectField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.JsonObject = JsonObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetObjectArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnJsonObject*>      ObjectArray                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetObjectArrayField(const class FString& FieldName, TArray<class UQtnJsonObject*>& ObjectArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetObjectArrayField");

	Params::UQtnJsonObject_SetObjectArrayField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.ObjectArray = ObjectArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetIntField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Number                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetIntField(const class FString& FieldName, int32 Number)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetIntField");

	Params::UQtnJsonObject_SetIntField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetIntArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      IntArray                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetIntArrayField(const class FString& FieldName, TArray<int32>& IntArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetIntArrayField");

	Params::UQtnJsonObject_SetIntArrayField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.IntArray = IntArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetFloatField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Number                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetFloatField(const class FString& FieldName, float Number)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetFloatField");

	Params::UQtnJsonObject_SetFloatField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetFloatArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                      FloatArray                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetFloatArrayField(const class FString& FieldName, TArray<float>& FloatArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetFloatArrayField");

	Params::UQtnJsonObject_SetFloatArrayField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.FloatArray = FloatArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetFieldNull
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetFieldNull(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetFieldNull");

	Params::UQtnJsonObject_SetFieldNull_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               JsonValue                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetField(const class FString& FieldName, class UQtnJsonValue* JsonValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetField");

	Params::UQtnJsonObject_SetField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.JsonValue = JsonValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetBoolField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               InValue                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetBoolField(const class FString& FieldName, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetBoolField");

	Params::UQtnJsonObject_SetBoolField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetBoolArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                       boolArray                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetBoolArrayField(const class FString& FieldName, TArray<bool>& boolArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetBoolArrayField");

	Params::UQtnJsonObject_SetBoolArrayField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.boolArray = boolArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnJsonValue*>       InArray                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetArrayField(const class FString& FieldName, TArray<class UQtnJsonValue*>& InArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetArrayField");

	Params::UQtnJsonObject_SetArrayField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.InArray = InArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetArchetypeField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      Archetype                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetArchetypeField(const class FString& FieldName, class UClass* Archetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetArchetypeField");

	Params::UQtnJsonObject_SetArchetypeField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.Archetype = Archetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.SetArchetypeArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>              ArchetypeArray                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnJsonObject::SetArchetypeArrayField(const class FString& FieldName, TArray<class UClass*>& ArchetypeArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "SetArchetypeArrayField");

	Params::UQtnJsonObject_SetArchetypeArrayField_Params Parms{};

	Parms.FieldName = FieldName;
	Parms.ArchetypeArray = ArchetypeArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.Reset
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnJsonObject::Reset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "Reset");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.RemoveField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::RemoveField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "RemoveField");

	Params::UQtnJsonObject_RemoveField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.MergeJsonObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnJsonObject*              InJsonObject                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Overwrite                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::MergeJsonObject(class UQtnJsonObject* InJsonObject, bool Overwrite)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "MergeJsonObject");

	Params::UQtnJsonObject_MergeJsonObject_Params Parms{};

	Parms.InJsonObject = InJsonObject;
	Parms.Overwrite = Overwrite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnJsonObject.ImportFromString
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      JsonString                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnJsonObject::ImportFromString(const class FString& JsonString, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "ImportFromString");

	Params::UQtnJsonObject_ImportFromString_Params Parms{};

	Parms.JsonString = JsonString;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Success != nullptr)
		*Success = Parms.Success;

}


// Function QtnGame.QtnJsonObject.HasField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnJsonObject::HasField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "HasField");

	Params::UQtnJsonObject_HasField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetStringField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnJsonObject::GetStringField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetStringField");

	Params::UQtnJsonObject_GetStringField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetStringArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              StringArray                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetStringArrayField(const class FString& FieldName, TArray<class FString>* StringArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetStringArrayField");

	Params::UQtnJsonObject_GetStringArrayField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (StringArray != nullptr)
		*StringArray = std::move(Parms.StringArray);

}


// Function QtnGame.QtnJsonObject.GetObjectField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonObject*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonObject* UQtnJsonObject::GetObjectField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetObjectField");

	Params::UQtnJsonObject_GetObjectField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetObjectArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnJsonObject*>      ObjectArray                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetObjectArrayField(const class FString& FieldName, TArray<class UQtnJsonObject*>* ObjectArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetObjectArrayField");

	Params::UQtnJsonObject_GetObjectArrayField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ObjectArray != nullptr)
		*ObjectArray = std::move(Parms.ObjectArray);

}


// Function QtnGame.QtnJsonObject.GetIntField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnJsonObject::GetIntField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetIntField");

	Params::UQtnJsonObject_GetIntField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetIntArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      IntArray                                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetIntArrayField(const class FString& FieldName, TArray<int32>* IntArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetIntArrayField");

	Params::UQtnJsonObject_GetIntArrayField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IntArray != nullptr)
		*IntArray = std::move(Parms.IntArray);

}


// Function QtnGame.QtnJsonObject.GetFloatField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnJsonObject::GetFloatField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetFloatField");

	Params::UQtnJsonObject_GetFloatField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetFloatArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                      FloatArray                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetFloatArrayField(const class FString& FieldName, TArray<float>* FloatArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetFloatArrayField");

	Params::UQtnJsonObject_GetFloatArrayField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FloatArray != nullptr)
		*FloatArray = std::move(Parms.FloatArray);

}


// Function QtnGame.QtnJsonObject.GetfieldNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              FieldNames                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetfieldNames(TArray<class FString>* FieldNames)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetfieldNames");

	Params::UQtnJsonObject_GetfieldNames_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FieldNames != nullptr)
		*FieldNames = std::move(Parms.FieldNames);

}


// Function QtnGame.QtnJsonObject.GetField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonObject::GetField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetField");

	Params::UQtnJsonObject_GetField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetBoolField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnJsonObject::GetBoolField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetBoolField");

	Params::UQtnJsonObject_GetBoolField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetBoolArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                       boolArray                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetBoolArrayField(const class FString& FieldName, TArray<bool>* boolArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetBoolArrayField");

	Params::UQtnJsonObject_GetBoolArrayField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (boolArray != nullptr)
		*boolArray = std::move(Parms.boolArray);

}


// Function QtnGame.QtnJsonObject.GetArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnJsonValue*>       ValueArray                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetArrayField(const class FString& FieldName, TArray<class UQtnJsonValue*>* ValueArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetArrayField");

	Params::UQtnJsonObject_GetArrayField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ValueArray != nullptr)
		*ValueArray = std::move(Parms.ValueArray);

}


// Function QtnGame.QtnJsonObject.GetArchetypeField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UQtnJsonObject::GetArchetypeField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetArchetypeField");

	Params::UQtnJsonObject_GetArchetypeField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.GetArchetypeArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      FieldName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>              ArchetypeArray                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonObject::GetArchetypeArrayField(const class FString& FieldName, TArray<class UClass*>* ArchetypeArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "GetArchetypeArrayField");

	Params::UQtnJsonObject_GetArchetypeArrayField_Params Parms{};

	Parms.FieldName = FieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ArchetypeArray != nullptr)
		*ArchetypeArray = std::move(Parms.ArchetypeArray);

}


// Function QtnGame.QtnJsonObject.ExportToString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               Condensed                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnJsonObject::ExportToString(bool Condensed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "ExportToString");

	Params::UQtnJsonObject_ExportToString_Params Parms{};

	Parms.Condensed = Condensed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonObject.ConstructQtnJsonObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonObject*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonObject* UQtnJsonObject::ConstructQtnJsonObject(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonObject", "ConstructQtnJsonObject");

	Params::UQtnJsonObject_ConstructQtnJsonObject_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnJsonValue
// (None)

class UClass* UQtnJsonValue::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnJsonValue");

	return Clss;
}


// QtnJsonValue QtnGame.Default__QtnJsonValue
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnJsonValue* UQtnJsonValue::GetDefaultObj()
{
	static class UQtnJsonValue* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnJsonValue*>(UQtnJsonValue::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnJsonValue.IsNull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnJsonValue::IsNull()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "IsNull");

	Params::UQtnJsonValue_IsNull_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.GetTypeString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnJsonValue::GetTypeString()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "GetTypeString");

	Params::UQtnJsonValue_GetTypeString_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.GetJsonValueType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnJsonType            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnJsonType UQtnJsonValue::GetJsonValueType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "GetJsonValueType");

	Params::UQtnJsonValue_GetJsonValueType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.ConstructQtnJsonValueString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      StringValue                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonValue::ConstructQtnJsonValueString(class UObject* WorldContextObject, const class FString& StringValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "ConstructQtnJsonValueString");

	Params::UQtnJsonValue_ConstructQtnJsonValueString_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StringValue = StringValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.ConstructQtnJsonValueObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonObject*              JsonObject                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonValue::ConstructQtnJsonValueObject(class UObject* WorldContextObject, class UQtnJsonObject* JsonObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "ConstructQtnJsonValueObject");

	Params::UQtnJsonValue_ConstructQtnJsonValueObject_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.JsonObject = JsonObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.ConstructQtnJsonValueInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Number                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonValue::ConstructQtnJsonValueInt(class UObject* WorldContextObject, int32 Number)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "ConstructQtnJsonValueInt");

	Params::UQtnJsonValue_ConstructQtnJsonValueInt_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.ConstructQtnJsonValueFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Number                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonValue::ConstructQtnJsonValueFloat(class UObject* WorldContextObject, float Number)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "ConstructQtnJsonValueFloat");

	Params::UQtnJsonValue_ConstructQtnJsonValueFloat_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.ConstructQtnJsonValueBool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               InValue                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonValue::ConstructQtnJsonValueBool(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "ConstructQtnJsonValueBool");

	Params::UQtnJsonValue_ConstructQtnJsonValueBool_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.ConstructQtnJsonValueArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnJsonValue*>       InArray                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonValue::ConstructQtnJsonValueArray(class UObject* WorldContextObject, TArray<class UQtnJsonValue*>& InArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "ConstructQtnJsonValueArray");

	Params::UQtnJsonValue_ConstructQtnJsonValueArray_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InArray = InArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.ConstructQtnJsonValueArchetype
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      Archetype                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJsonValue*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonValue* UQtnJsonValue::ConstructQtnJsonValueArchetype(class UObject* WorldContextObject, class UClass* Archetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "ConstructQtnJsonValueArchetype");

	Params::UQtnJsonValue_ConstructQtnJsonValueArchetype_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Archetype = Archetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.AsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnJsonValue::AsString()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "AsString");

	Params::UQtnJsonValue_AsString_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.AsObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnJsonObject*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJsonObject* UQtnJsonValue::AsObject()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "AsObject");

	Params::UQtnJsonValue_AsObject_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.AsInt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnJsonValue::AsInt()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "AsInt");

	Params::UQtnJsonValue_AsInt_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.AsFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnJsonValue::AsFloat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "AsFloat");

	Params::UQtnJsonValue_AsFloat_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.AsBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnJsonValue::AsBool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "AsBool");

	Params::UQtnJsonValue_AsBool_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJsonValue.AsArray
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnJsonValue*>       ValueArray                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnJsonValue::AsArray(TArray<class UQtnJsonValue*>* ValueArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "AsArray");

	Params::UQtnJsonValue_AsArray_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ValueArray != nullptr)
		*ValueArray = std::move(Parms.ValueArray);

}


// Function QtnGame.QtnJsonValue.AsArchetype
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UQtnJsonValue::AsArchetype()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJsonValue", "AsArchetype");

	Params::UQtnJsonValue_AsArchetype_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnLevelScriptActor
// (Actor)

class UClass* AQtnLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLevelScriptActor");

	return Clss;
}


// QtnLevelScriptActor QtnGame.Default__QtnLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnLevelScriptActor* AQtnLevelScriptActor::GetDefaultObj()
{
	static class AQtnLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnLevelScriptActor*>(AQtnLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLevelTerrain
// (Actor)

class UClass* AQtnLevelTerrain::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLevelTerrain");

	return Clss;
}


// QtnLevelTerrain QtnGame.Default__QtnLevelTerrain
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnLevelTerrain* AQtnLevelTerrain::GetDefaultObj()
{
	static class AQtnLevelTerrain* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnLevelTerrain*>(AQtnLevelTerrain::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLocalizedUserWidget
// (None)

class UClass* UQtnLocalizedUserWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLocalizedUserWidget");

	return Clss;
}


// QtnLocalizedUserWidget QtnGame.Default__QtnLocalizedUserWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLocalizedUserWidget* UQtnLocalizedUserWidget::GetDefaultObj()
{
	static class UQtnLocalizedUserWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLocalizedUserWidget*>(UQtnLocalizedUserWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLocalizedUserWidget.OnCultureChangedEvent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:

void UQtnLocalizedUserWidget::OnCultureChangedEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalizedUserWidget", "OnCultureChangedEvent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalizedUserWidget.OnCultureChanged
// (Final, Native, Protected)
// Parameters:

void UQtnLocalizedUserWidget::OnCultureChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalizedUserWidget", "OnCultureChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnLocalOptionsSaveData
// (None)

class UClass* UQtnLocalOptionsSaveData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLocalOptionsSaveData");

	return Clss;
}


// QtnLocalOptionsSaveData QtnGame.Default__QtnLocalOptionsSaveData
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLocalOptionsSaveData* UQtnLocalOptionsSaveData::GetDefaultObj()
{
	static class UQtnLocalOptionsSaveData* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLocalOptionsSaveData*>(UQtnLocalOptionsSaveData::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLocalOptionsSaveData.SetVSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               VSync                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyNow                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetVSync(bool VSync, bool ApplyNow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetVSync");

	Params::UQtnLocalOptionsSaveData_SetVSync_Params Parms{};

	Parms.VSync = VSync;
	Parms.ApplyNow = ApplyNow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetTextureQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              TextureQuality                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyNow                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetTextureQuality(int32 TextureQuality, bool ApplyNow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetTextureQuality");

	Params::UQtnLocalOptionsSaveData_SetTextureQuality_Params Parms{};

	Parms.TextureQuality = TextureQuality;
	Parms.ApplyNow = ApplyNow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetSubtitleType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ESubtitleFontType       InType                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetSubtitleType(enum class ESubtitleFontType InType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetSubtitleType");

	Params::UQtnLocalOptionsSaveData_SetSubtitleType_Params Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetSubtitleTextColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                InColor                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetSubtitleTextColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetSubtitleTextColor");

	Params::UQtnLocalOptionsSaveData_SetSubtitleTextColor_Params Parms{};

	Parms.InColor = InColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetSubtitleSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class ESubtitleFontSize       InSize                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetSubtitleSize(enum class ESubtitleFontSize InSize)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetSubtitleSize");

	Params::UQtnLocalOptionsSaveData_SetSubtitleSize_Params Parms{};

	Parms.InSize = InSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetSubtitleBackgroundOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              InOpacity                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetSubtitleBackgroundOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetSubtitleBackgroundOpacity");

	Params::UQtnLocalOptionsSaveData_SetSubtitleBackgroundOpacity_Params Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetSmoothFramerate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               SmoothFramerate                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetSmoothFramerate(bool SmoothFramerate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetSmoothFramerate");

	Params::UQtnLocalOptionsSaveData_SetSmoothFramerate_Params Parms{};

	Parms.SmoothFramerate = SmoothFramerate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetShadowQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ShadowQuality                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyNow                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetShadowQuality(int32 ShadowQuality, bool ApplyNow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetShadowQuality");

	Params::UQtnLocalOptionsSaveData_SetShadowQuality_Params Parms{};

	Parms.ShadowQuality = ShadowQuality;
	Parms.ApplyNow = ApplyNow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetResolutionScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ResolutionScale                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyNow                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetResolutionScale(float ResolutionScale, bool ApplyNow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetResolutionScale");

	Params::UQtnLocalOptionsSaveData_SetResolutionScale_Params Parms{};

	Parms.ResolutionScale = ResolutionScale;
	Parms.ApplyNow = ApplyNow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetGammaRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              GammaRatio                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetGammaRatio(float GammaRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetGammaRatio");

	Params::UQtnLocalOptionsSaveData_SetGammaRatio_Params Parms{};

	Parms.GammaRatio = GammaRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetFogQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              FogQuality                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyNow                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetFogQuality(int32 FogQuality, bool ApplyNow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetFogQuality");

	Params::UQtnLocalOptionsSaveData_SetFogQuality_Params Parms{};

	Parms.FogQuality = FogQuality;
	Parms.ApplyNow = ApplyNow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetColorBlindStrength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              InStrength                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetColorBlindStrength(int32 InStrength)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetColorBlindStrength");

	Params::UQtnLocalOptionsSaveData_SetColorBlindStrength_Params Parms{};

	Parms.InStrength = InStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetColorBlindMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EColorBlindMode         InMode                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetColorBlindMode(enum class EColorBlindMode InMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetColorBlindMode");

	Params::UQtnLocalOptionsSaveData_SetColorBlindMode_Params Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.SetAntiAliasingQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              AntiAliasingQuality                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyNow                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::SetAntiAliasingQuality(int32 AntiAliasingQuality, bool ApplyNow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "SetAntiAliasingQuality");

	Params::UQtnLocalOptionsSaveData_SetAntiAliasingQuality_Params Parms{};

	Parms.AntiAliasingQuality = AntiAliasingQuality;
	Parms.ApplyNow = ApplyNow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLocalOptionsSaveData.RunBenchmark_WindowsOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              OutTextureQuality                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutShadowQuality                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutFogQuality                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutAntiAliasingQuality                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLocalOptionsSaveData::RunBenchmark_WindowsOnly(int32* OutTextureQuality, int32* OutShadowQuality, int32* OutFogQuality, int32* OutAntiAliasingQuality)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "RunBenchmark_WindowsOnly");

	Params::UQtnLocalOptionsSaveData_RunBenchmark_WindowsOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTextureQuality != nullptr)
		*OutTextureQuality = Parms.OutTextureQuality;

	if (OutShadowQuality != nullptr)
		*OutShadowQuality = Parms.OutShadowQuality;

	if (OutFogQuality != nullptr)
		*OutFogQuality = Parms.OutFogQuality;

	if (OutAntiAliasingQuality != nullptr)
		*OutAntiAliasingQuality = Parms.OutAntiAliasingQuality;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetVSync
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnLocalOptionsSaveData::GetVSync()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetVSync");

	Params::UQtnLocalOptionsSaveData_GetVSync_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetTextureQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnLocalOptionsSaveData::GetTextureQuality()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetTextureQuality");

	Params::UQtnLocalOptionsSaveData_GetTextureQuality_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetSubtitleType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class ESubtitleFontType       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESubtitleFontType UQtnLocalOptionsSaveData::GetSubtitleType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetSubtitleType");

	Params::UQtnLocalOptionsSaveData_GetSubtitleType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetSubtitleTextColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UQtnLocalOptionsSaveData::GetSubtitleTextColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetSubtitleTextColor");

	Params::UQtnLocalOptionsSaveData_GetSubtitleTextColor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetSubtitleSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class ESubtitleFontSize       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class ESubtitleFontSize UQtnLocalOptionsSaveData::GetSubtitleSize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetSubtitleSize");

	Params::UQtnLocalOptionsSaveData_GetSubtitleSize_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetSubtitleBackgroundOpacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnLocalOptionsSaveData::GetSubtitleBackgroundOpacity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetSubtitleBackgroundOpacity");

	Params::UQtnLocalOptionsSaveData_GetSubtitleBackgroundOpacity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetSmoothFramerate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnLocalOptionsSaveData::GetSmoothFramerate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetSmoothFramerate");

	Params::UQtnLocalOptionsSaveData_GetSmoothFramerate_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetShadowQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnLocalOptionsSaveData::GetShadowQuality()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetShadowQuality");

	Params::UQtnLocalOptionsSaveData_GetShadowQuality_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetResolutionScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnLocalOptionsSaveData::GetResolutionScale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetResolutionScale");

	Params::UQtnLocalOptionsSaveData_GetResolutionScale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetGammaRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnLocalOptionsSaveData::GetGammaRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetGammaRatio");

	Params::UQtnLocalOptionsSaveData_GetGammaRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetFogQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnLocalOptionsSaveData::GetFogQuality()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetFogQuality");

	Params::UQtnLocalOptionsSaveData_GetFogQuality_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetDefaultGammaRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnLocalOptionsSaveData::GetDefaultGammaRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetDefaultGammaRatio");

	Params::UQtnLocalOptionsSaveData_GetDefaultGammaRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetColorBlindStrength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnLocalOptionsSaveData::GetColorBlindStrength()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetColorBlindStrength");

	Params::UQtnLocalOptionsSaveData_GetColorBlindStrength_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetColorBlindMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EColorBlindMode         ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EColorBlindMode UQtnLocalOptionsSaveData::GetColorBlindMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetColorBlindMode");

	Params::UQtnLocalOptionsSaveData_GetColorBlindMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLocalOptionsSaveData.GetAntiAliasingQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnLocalOptionsSaveData::GetAntiAliasingQuality()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLocalOptionsSaveData", "GetAntiAliasingQuality");

	Params::UQtnLocalOptionsSaveData_GetAntiAliasingQuality_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnLocalPlayer
// (None)

class UClass* UQtnLocalPlayer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLocalPlayer");

	return Clss;
}


// QtnLocalPlayer QtnGame.Default__QtnLocalPlayer
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLocalPlayer* UQtnLocalPlayer::GetDefaultObj()
{
	static class UQtnLocalPlayer* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLocalPlayer*>(UQtnLocalPlayer::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootCullDistanceProvider
// (None)

class UClass* UQtnLootCullDistanceProvider::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootCullDistanceProvider");

	return Clss;
}


// QtnLootCullDistanceProvider QtnGame.Default__QtnLootCullDistanceProvider
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootCullDistanceProvider* UQtnLootCullDistanceProvider::GetDefaultObj()
{
	static class UQtnLootCullDistanceProvider* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootCullDistanceProvider*>(UQtnLootCullDistanceProvider::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLootCullDistanceProvider.GetCustomLootCullDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnLootCullDistanceProvider::GetCustomLootCullDistance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootCullDistanceProvider", "GetCustomLootCullDistance");

	Params::UQtnLootCullDistanceProvider_GetCustomLootCullDistance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnLootItem
// (Actor)

class UClass* AQtnLootItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootItem");

	return Clss;
}


// QtnLootItem QtnGame.Default__QtnLootItem
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnLootItem* AQtnLootItem::GetDefaultObj()
{
	static class AQtnLootItem* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnLootItem*>(AQtnLootItem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLootItem.SpawnAsWeapon_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnWeaponSpawnSettings     InSpawnSettings                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnLootItem::SpawnAsWeapon_ServerOnly(struct FQtnWeaponSpawnSettings& InSpawnSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "SpawnAsWeapon_ServerOnly");

	Params::AQtnLootItem_SpawnAsWeapon_ServerOnly_Params Parms{};

	Parms.InSpawnSettings = InSpawnSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.SpawnAsMedia_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnMediaSpawnSettings      InSpawnSettings                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnLootItem::SpawnAsMedia_ServerOnly(struct FQtnMediaSpawnSettings& InSpawnSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "SpawnAsMedia_ServerOnly");

	Params::AQtnLootItem_SpawnAsMedia_ServerOnly_Params Parms{};

	Parms.InSpawnSettings = InSpawnSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.SpawnAsCurrency_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnCurrencySpawnSettings   InSpawnSettings                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnLootItem::SpawnAsCurrency_ServerOnly(struct FQtnCurrencySpawnSettings& InSpawnSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "SpawnAsCurrency_ServerOnly");

	Params::AQtnLootItem_SpawnAsCurrency_ServerOnly_Params Parms{};

	Parms.InSpawnSettings = InSpawnSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.SpawnAsConsumable_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnConsumableSpawnSettings InSpawnSettings                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnLootItem::SpawnAsConsumable_ServerOnly(struct FQtnConsumableSpawnSettings& InSpawnSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "SpawnAsConsumable_ServerOnly");

	Params::AQtnLootItem_SpawnAsConsumable_ServerOnly_Params Parms{};

	Parms.InSpawnSettings = InSpawnSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnUpdateFrobFillUIEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              InFillRatio                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::OnUpdateFrobFillUIEvent(float InFillRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnUpdateFrobFillUIEvent");

	Params::AQtnLootItem_OnUpdateFrobFillUIEvent_Params Parms{};

	Parms.InFillRatio = InFillRatio;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnLootItem.OnTriggerEnter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPlayerPawn*              User                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnLootTriggerType     TriggerType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::OnTriggerEnter(class AQtnPlayerPawn* User, enum class EQtnLootTriggerType TriggerType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnTriggerEnter");

	Params::AQtnLootItem_OnTriggerEnter_Params Parms{};

	Parms.User = User;
	Parms.TriggerType = TriggerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnSpawnUpdateEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                              Progress                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::OnSpawnUpdateEvent(float Progress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnSpawnUpdateEvent");

	Params::AQtnLootItem_OnSpawnUpdateEvent_Params Parms{};

	Parms.Progress = Progress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnSpawnStartEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnSpawnStartEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnSpawnStartEvent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnSpawnCompleteEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnSpawnCompleteEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnSpawnCompleteEvent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnSpawnAnimationChanged
// (Final, Native, Protected)
// Parameters:

void AQtnLootItem::OnSpawnAnimationChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnSpawnAnimationChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnShowPlayerUIEvent
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               ShowUI                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::OnShowPlayerUIEvent(bool ShowUI)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnShowPlayerUIEvent");

	Params::AQtnLootItem_OnShowPlayerUIEvent_Params Parms{};

	Parms.ShowUI = ShowUI;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnLootItem.OnRep_WeaponSettings
// (Final, Native, Public)
// Parameters:

void AQtnLootItem::OnRep_WeaponSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnRep_WeaponSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnRep_MediaSettings
// (Final, Native, Public)
// Parameters:

void AQtnLootItem::OnRep_MediaSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnRep_MediaSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnRep_LootType
// (Final, Native, Protected)
// Parameters:

void AQtnLootItem::OnRep_LootType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnRep_LootType");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnRep_CurrencySettings
// (Final, Native, Public)
// Parameters:

void AQtnLootItem::OnRep_CurrencySettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnRep_CurrencySettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnRep_ConsumableSettings
// (Final, Native, Public)
// Parameters:

void AQtnLootItem::OnRep_ConsumableSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnRep_ConsumableSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnPickupUpdateEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                              Progress                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::OnPickupUpdateEvent(float Progress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnPickupUpdateEvent");

	Params::AQtnLootItem_OnPickupUpdateEvent_Params Parms{};

	Parms.Progress = Progress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnPickupStartEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::OnPickupStartEvent(class AQtnPlayerPawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnPickupStartEvent");

	Params::AQtnLootItem_OnPickupStartEvent_Params Parms{};

	Parms.TargetPawn = TargetPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnPickupCurrency_ServerOnly
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnPickupCurrency_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnPickupCurrency_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnPickupCurrency_LocalOnly
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnPickupCurrency_LocalOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnPickupCurrency_LocalOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnPickupConsumable_ServerOnly
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnPickupConsumable_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnPickupConsumable_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnPickupConsumable_LocalOnly
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnPickupConsumable_LocalOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnPickupConsumable_LocalOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnPickupCompleteEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnPickupCompleteEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnPickupCompleteEvent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.OnConfigureVisualsEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AQtnLootItem::OnConfigureVisualsEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "OnConfigureVisualsEvent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.MulticastSpawnAnimation
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FQtnLootSpawnSettings       InSpawnSettings                                                  (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnLootItem::MulticastSpawnAnimation(const struct FQtnLootSpawnSettings& InSpawnSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "MulticastSpawnAnimation");

	Params::AQtnLootItem_MulticastSpawnAnimation_Params Parms{};

	Parms.InSpawnSettings = InSpawnSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.MulticastPickupStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AQtnPlayerPawn*              User                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::MulticastPickupStart(class AQtnPlayerPawn* User)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "MulticastPickupStart");

	Params::AQtnLootItem_MulticastPickupStart_Params Parms{};

	Parms.User = User;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.MulticastPickupComplete
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AQtnPlayerPawn*              User                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::MulticastPickupComplete(class AQtnPlayerPawn* User)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "MulticastPickupComplete");

	Params::AQtnLootItem_MulticastPickupComplete_Params Parms{};

	Parms.User = User;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.IsHeldByAPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnLootItem::IsHeldByAPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "IsHeldByAPlayer");

	Params::AQtnLootItem_IsHeldByAPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootItem.IsAutoPickup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnLootItem::IsAutoPickup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "IsAutoPickup");

	Params::AQtnLootItem_IsAutoPickup_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootItem.GetConsumableBehaviourTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnConsumableBehaviourTag>TagsArray                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnLootItem::GetConsumableBehaviourTags(TArray<struct FQtnConsumableBehaviourTag>* TagsArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "GetConsumableBehaviourTags");

	Params::AQtnLootItem_GetConsumableBehaviourTags_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagsArray != nullptr)
		*TagsArray = std::move(Parms.TagsArray);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootItem.GenerateStats_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnLootItem::GenerateStats_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "GenerateStats_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.DelaySpawnAnimation_ServerOnly
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FQtnLootSpawnSettings       Settings                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                              SpawnDelay                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnLootItem::DelaySpawnAnimation_ServerOnly(const struct FQtnLootSpawnSettings& Settings, float SpawnDelay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "DelaySpawnAnimation_ServerOnly");

	Params::AQtnLootItem_DelaySpawnAnimation_ServerOnly_Params Parms{};

	Parms.Settings = Settings;
	Parms.SpawnDelay = SpawnDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootItem.CanUserPickup
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              User                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnLootItem::CanUserPickup(class AQtnPlayerPawn* User)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootItem", "CanUserPickup");

	Params::AQtnLootItem_CanUserPickup_Params Parms{};

	Parms.User = User;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnLootManagementComponent
// (None)

class UClass* UQtnLootManagementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootManagementComponent");

	return Clss;
}


// QtnLootManagementComponent QtnGame.Default__QtnLootManagementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootManagementComponent* UQtnLootManagementComponent::GetDefaultObj()
{
	static class UQtnLootManagementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootManagementComponent*>(UQtnLootManagementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLootManagementComponent.ReserveLimitedLootItems
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGameplayTag                LootItemType                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DesiredLootCount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     LootLocation                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnLootManagementComponent::ReserveLimitedLootItems(const struct FGameplayTag& LootItemType, int32 DesiredLootCount, const struct FVector& LootLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootManagementComponent", "ReserveLimitedLootItems");

	Params::UQtnLootManagementComponent_ReserveLimitedLootItems_Params Parms{};

	Parms.LootItemType = LootItemType;
	Parms.DesiredLootCount = DesiredLootCount;
	Parms.LootLocation = LootLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootManagementComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLootManagementComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootManagementComponent", "OnDebugDisplay");

	Params::UQtnLootManagementComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnLootManagementComponent.CleanUpManagedLootItems
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnLootManagementComponent::CleanUpManagedLootItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootManagementComponent", "CleanUpManagedLootItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnLootManagementVolume
// (Actor)

class UClass* AQtnLootManagementVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootManagementVolume");

	return Clss;
}


// QtnLootManagementVolume QtnGame.Default__QtnLootManagementVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnLootManagementVolume* AQtnLootManagementVolume::GetDefaultObj()
{
	static class AQtnLootManagementVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnLootManagementVolume*>(AQtnLootManagementVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableComponent
// (None)

class UClass* UQtnLootTableComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableComponent");

	return Clss;
}


// QtnLootTableComponent QtnGame.Default__QtnLootTableComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableComponent* UQtnLootTableComponent::GetDefaultObj()
{
	static class UQtnLootTableComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableComponent*>(UQtnLootTableComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableRootComponent
// (None)

class UClass* UQtnLootTableRootComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableRootComponent");

	return Clss;
}


// QtnLootTableRootComponent QtnGame.Default__QtnLootTableRootComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableRootComponent* UQtnLootTableRootComponent::GetDefaultObj()
{
	static class UQtnLootTableRootComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableRootComponent*>(UQtnLootTableRootComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLootTableRootComponent.RollLootFromTable
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnRolledLootItem>  RolledLootItems                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnLootTableContainer>LootTableClass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              baseQualityModifier                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              baseQuantityModifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer       FilterTags                                                       (Parm, NativeAccessSpecifierPublic)

void UQtnLootTableRootComponent::RollLootFromTable(TArray<struct FQtnRolledLootItem>* RolledLootItems, TSubclassOf<class UQtnLootTableContainer> LootTableClass, float baseQualityModifier, float baseQuantityModifier, const struct FGameplayTagContainer& FilterTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootTableRootComponent", "RollLootFromTable");

	Params::UQtnLootTableRootComponent_RollLootFromTable_Params Parms{};

	Parms.LootTableClass = LootTableClass;
	Parms.baseQualityModifier = baseQualityModifier;
	Parms.baseQuantityModifier = baseQuantityModifier;
	Parms.FilterTags = FilterTags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RolledLootItems != nullptr)
		*RolledLootItems = std::move(Parms.RolledLootItems);

}


// Function QtnGame.QtnLootTableRootComponent.RollLoot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnRolledLootItem>  RolledLootItems                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                              baseQualityModifier                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              baseQuantityModifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer       FilterTags                                                       (Parm, NativeAccessSpecifierPublic)

void UQtnLootTableRootComponent::RollLoot(TArray<struct FQtnRolledLootItem>* RolledLootItems, float baseQualityModifier, float baseQuantityModifier, const struct FGameplayTagContainer& FilterTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootTableRootComponent", "RollLoot");

	Params::UQtnLootTableRootComponent_RollLoot_Params Parms{};

	Parms.baseQualityModifier = baseQualityModifier;
	Parms.baseQuantityModifier = baseQuantityModifier;
	Parms.FilterTags = FilterTags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RolledLootItems != nullptr)
		*RolledLootItems = std::move(Parms.RolledLootItems);

}


// Function QtnGame.QtnLootTableRootComponent.GatherLootInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<struct FGameplayTag, struct FQtnRangedFloat>ItemCountsToModify                                               (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnLootTableRootComponent::GatherLootInfo(TMap<struct FGameplayTag, struct FQtnRangedFloat>& ItemCountsToModify)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootTableRootComponent", "GatherLootInfo");

	Params::UQtnLootTableRootComponent_GatherLootInfo_Params Parms{};

	Parms.ItemCountsToModify = ItemCountsToModify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnLootSpawnerComponent
// (None)

class UClass* UQtnLootSpawnerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootSpawnerComponent");

	return Clss;
}


// QtnLootSpawnerComponent QtnGame.Default__QtnLootSpawnerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootSpawnerComponent* UQtnLootSpawnerComponent::GetDefaultObj()
{
	static class UQtnLootSpawnerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootSpawnerComponent*>(UQtnLootSpawnerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLootSpawnerComponent.SpawnLootForSelectPlayers_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AQtnPlayerPawn*>      PlayerPawns                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                              SecondsToFinishSpawning                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLootSpawnerComponent::SpawnLootForSelectPlayers_ServerOnly(TArray<class AQtnPlayerPawn*>& PlayerPawns, float* SecondsToFinishSpawning)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "SpawnLootForSelectPlayers_ServerOnly");

	Params::UQtnLootSpawnerComponent_SpawnLootForSelectPlayers_ServerOnly_Params Parms{};

	Parms.PlayerPawns = PlayerPawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SecondsToFinishSpawning != nullptr)
		*SecondsToFinishSpawning = Parms.SecondsToFinishSpawning;

}


// Function QtnGame.QtnLootSpawnerComponent.SpawnLoot_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                              SecondsToFinishSpawning                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLootSpawnerComponent::SpawnLoot_ServerOnly(float* SecondsToFinishSpawning, const struct FVector& StartLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "SpawnLoot_ServerOnly");

	Params::UQtnLootSpawnerComponent_SpawnLoot_ServerOnly_Params Parms{};

	Parms.StartLocation = StartLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SecondsToFinishSpawning != nullptr)
		*SecondsToFinishSpawning = Parms.SecondsToFinishSpawning;

}


// Function QtnGame.QtnLootSpawnerComponent.ShouldSpawnLoot_ServerOnly
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnLootSpawnerComponent::ShouldSpawnLoot_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "ShouldSpawnLoot_ServerOnly");

	Params::UQtnLootSpawnerComponent_ShouldSpawnLoot_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootSpawnerComponent.ResetLootComponent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnLootSpawnerComponent::ResetLootComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "ResetLootComponent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootSpawnerComponent.ModifyLootResults
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              IntendedLootRecipient                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnRolledLootItem>  LootResults                                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnLootSpawnerComponent::ModifyLootResults(class AQtnPlayerPawn* IntendedLootRecipient, TArray<struct FQtnRolledLootItem>& LootResults)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "ModifyLootResults");

	Params::UQtnLootSpawnerComponent_ModifyLootResults_Params Parms{};

	Parms.IntendedLootRecipient = IntendedLootRecipient;
	Parms.LootResults = LootResults;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootSpawnerComponent.IsPlayerValidLootRecipient
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnLootSpawnerComponent::IsPlayerValidLootRecipient(class AQtnPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "IsPlayerValidLootRecipient");

	Params::UQtnLootSpawnerComponent_IsPlayerValidLootRecipient_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootSpawnerComponent.HasLootTableTag_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                TagToCheck                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnLootSpawnerComponent::HasLootTableTag_ServerOnly(struct FGameplayTag& TagToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "HasLootTableTag_ServerOnly");

	Params::UQtnLootSpawnerComponent_HasLootTableTag_ServerOnly_Params Parms{};

	Parms.TagToCheck = TagToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnLootSpawnerComponent.HandleSpawning
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AQtnLootItem*                LootItem                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnPendingLoot             PendingLootData                                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayTag                ItemTypeTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLootSpawnerComponent::HandleSpawning(class AQtnLootItem* LootItem, struct FQtnPendingLoot& PendingLootData, struct FGameplayTag& ItemTypeTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "HandleSpawning");

	Params::UQtnLootSpawnerComponent_HandleSpawning_Params Parms{};

	Parms.LootItem = LootItem;
	Parms.PendingLootData = PendingLootData;
	Parms.ItemTypeTag = ItemTypeTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootSpawnerComponent.GenerateSpiralLocations
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                              Count                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OffsetSegmentRadius                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>             SpiralLocations                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FRotator>            SpiralRotations                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnLootSpawnerComponent::GenerateSpiralLocations(int32 Count, float Radius, float OffsetSegmentRadius, TArray<struct FVector>* SpiralLocations, TArray<struct FRotator>* SpiralRotations)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "GenerateSpiralLocations");

	Params::UQtnLootSpawnerComponent_GenerateSpiralLocations_Params Parms{};

	Parms.Count = Count;
	Parms.Radius = Radius;
	Parms.OffsetSegmentRadius = OffsetSegmentRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SpiralLocations != nullptr)
		*SpiralLocations = std::move(Parms.SpiralLocations);

	if (SpiralRotations != nullptr)
		*SpiralRotations = std::move(Parms.SpiralRotations);

}


// Function QtnGame.QtnLootSpawnerComponent.AddLootTableTag_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                TagToAdd                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLootSpawnerComponent::AddLootTableTag_ServerOnly(struct FGameplayTag& TagToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootSpawnerComponent", "AddLootTableTag_ServerOnly");

	Params::UQtnLootSpawnerComponent_AddLootTableTag_ServerOnly_Params Parms{};

	Parms.TagToAdd = TagToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnLootTableContainer
// (None)

class UClass* UQtnLootTableContainer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableContainer");

	return Clss;
}


// QtnLootTableContainer QtnGame.Default__QtnLootTableContainer
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableContainer* UQtnLootTableContainer::GetDefaultObj()
{
	static class UQtnLootTableContainer* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableContainer*>(UQtnLootTableContainer::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntry
// (None)

class UClass* UQtnLootTableEntry::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntry");

	return Clss;
}


// QtnLootTableEntry QtnGame.Default__QtnLootTableEntry
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntry* UQtnLootTableEntry::GetDefaultObj()
{
	static class UQtnLootTableEntry* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntry*>(UQtnLootTableEntry::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryAnd
// (None)

class UClass* UQtnLootTableEntryAnd::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryAnd");

	return Clss;
}


// QtnLootTableEntryAnd QtnGame.Default__QtnLootTableEntryAnd
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryAnd* UQtnLootTableEntryAnd::GetDefaultObj()
{
	static class UQtnLootTableEntryAnd* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryAnd*>(UQtnLootTableEntryAnd::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryBonus
// (None)

class UClass* UQtnLootTableEntryBonus::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryBonus");

	return Clss;
}


// QtnLootTableEntryBonus QtnGame.Default__QtnLootTableEntryBonus
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryBonus* UQtnLootTableEntryBonus::GetDefaultObj()
{
	static class UQtnLootTableEntryBonus* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryBonus*>(UQtnLootTableEntryBonus::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryDifficultyQuantity
// (None)

class UClass* UQtnLootTableEntryDifficultyQuantity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryDifficultyQuantity");

	return Clss;
}


// QtnLootTableEntryDifficultyQuantity QtnGame.Default__QtnLootTableEntryDifficultyQuantity
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryDifficultyQuantity* UQtnLootTableEntryDifficultyQuantity::GetDefaultObj()
{
	static class UQtnLootTableEntryDifficultyQuantity* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryDifficultyQuantity*>(UQtnLootTableEntryDifficultyQuantity::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryDifficultyWeight
// (None)

class UClass* UQtnLootTableEntryDifficultyWeight::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryDifficultyWeight");

	return Clss;
}


// QtnLootTableEntryDifficultyWeight QtnGame.Default__QtnLootTableEntryDifficultyWeight
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryDifficultyWeight* UQtnLootTableEntryDifficultyWeight::GetDefaultObj()
{
	static class UQtnLootTableEntryDifficultyWeight* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryDifficultyWeight*>(UQtnLootTableEntryDifficultyWeight::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryItem
// (None)

class UClass* UQtnLootTableEntryItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryItem");

	return Clss;
}


// QtnLootTableEntryItem QtnGame.Default__QtnLootTableEntryItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryItem* UQtnLootTableEntryItem::GetDefaultObj()
{
	static class UQtnLootTableEntryItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryItem*>(UQtnLootTableEntryItem::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryNull
// (None)

class UClass* UQtnLootTableEntryNull::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryNull");

	return Clss;
}


// QtnLootTableEntryNull QtnGame.Default__QtnLootTableEntryNull
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryNull* UQtnLootTableEntryNull::GetDefaultObj()
{
	static class UQtnLootTableEntryNull* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryNull*>(UQtnLootTableEntryNull::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryOr
// (None)

class UClass* UQtnLootTableEntryOr::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryOr");

	return Clss;
}


// QtnLootTableEntryOr QtnGame.Default__QtnLootTableEntryOr
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryOr* UQtnLootTableEntryOr::GetDefaultObj()
{
	static class UQtnLootTableEntryOr* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryOr*>(UQtnLootTableEntryOr::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryRaritySelector
// (None)

class UClass* UQtnLootTableEntryRaritySelector::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryRaritySelector");

	return Clss;
}


// QtnLootTableEntryRaritySelector QtnGame.Default__QtnLootTableEntryRaritySelector
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryRaritySelector* UQtnLootTableEntryRaritySelector::GetDefaultObj()
{
	static class UQtnLootTableEntryRaritySelector* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryRaritySelector*>(UQtnLootTableEntryRaritySelector::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryReference
// (None)

class UClass* UQtnLootTableEntryReference::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryReference");

	return Clss;
}


// QtnLootTableEntryReference QtnGame.Default__QtnLootTableEntryReference
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryReference* UQtnLootTableEntryReference::GetDefaultObj()
{
	static class UQtnLootTableEntryReference* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryReference*>(UQtnLootTableEntryReference::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableEntryTagDecorator
// (None)

class UClass* UQtnLootTableEntryTagDecorator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableEntryTagDecorator");

	return Clss;
}


// QtnLootTableEntryTagDecorator QtnGame.Default__QtnLootTableEntryTagDecorator
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableEntryTagDecorator* UQtnLootTableEntryTagDecorator::GetDefaultObj()
{
	static class UQtnLootTableEntryTagDecorator* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableEntryTagDecorator*>(UQtnLootTableEntryTagDecorator::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnLootTableGlobals
// (None)

class UClass* UQtnLootTableGlobals::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnLootTableGlobals");

	return Clss;
}


// QtnLootTableGlobals QtnGame.Default__QtnLootTableGlobals
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnLootTableGlobals* UQtnLootTableGlobals::GetDefaultObj()
{
	static class UQtnLootTableGlobals* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnLootTableGlobals*>(UQtnLootTableGlobals::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnLootTableGlobals.SetBonusLootTableClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnLootTableContainer>bonusLootTableClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnLootTableGlobals::SetBonusLootTableClass(class UObject* WorldContextObject, TSubclassOf<class UQtnLootTableContainer> bonusLootTableClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootTableGlobals", "SetBonusLootTableClass");

	Params::UQtnLootTableGlobals_SetBonusLootTableClass_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bonusLootTableClass = bonusLootTableClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnLootTableGlobals.GetBonusLootTableClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnLootTableContainer>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnLootTableContainer> UQtnLootTableGlobals::GetBonusLootTableClass(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnLootTableGlobals", "GetBonusLootTableClass");

	Params::UQtnLootTableGlobals_GetBonusLootTableClass_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnMaterialExpressionSceneDepthCopy
// (None)

class UClass* UQtnMaterialExpressionSceneDepthCopy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMaterialExpressionSceneDepthCopy");

	return Clss;
}


// QtnMaterialExpressionSceneDepthCopy QtnGame.Default__QtnMaterialExpressionSceneDepthCopy
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMaterialExpressionSceneDepthCopy* UQtnMaterialExpressionSceneDepthCopy::GetDefaultObj()
{
	static class UQtnMaterialExpressionSceneDepthCopy* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMaterialExpressionSceneDepthCopy*>(UQtnMaterialExpressionSceneDepthCopy::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMathUtilities
// (None)

class UClass* UQtnMathUtilities::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMathUtilities");

	return Clss;
}


// QtnMathUtilities QtnGame.Default__QtnMathUtilities
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMathUtilities* UQtnMathUtilities::GetDefaultObj()
{
	static class UQtnMathUtilities* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMathUtilities*>(UQtnMathUtilities::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMathUtilities.WillPassBehind
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    MovingPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetPosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FutureSeconds                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::WillPassBehind(class AQtnPawn* MovingPawn, struct FVector& TargetPosition, float FutureSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "WillPassBehind");

	Params::UQtnMathUtilities_WillPassBehind_Params Parms{};

	Parms.MovingPawn = MovingPawn;
	Parms.TargetPosition = TargetPosition;
	Parms.FutureSeconds = FutureSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.RandomRound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              F                                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnMathUtilities::RandomRound(float F)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "RandomRound");

	Params::UQtnMathUtilities_RandomRound_Params Parms{};

	Parms.F = F;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.QtnWrapInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnMathUtilities::QtnWrapInt(int32 CurrentValue, int32 MinValue, int32 MaxValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "QtnWrapInt");

	Params::UQtnMathUtilities_QtnWrapInt_Params Parms{};

	Parms.CurrentValue = CurrentValue;
	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.QtnWrapFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnMathUtilities::QtnWrapFloat(float CurrentValue, float MinValue, float MaxValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "QtnWrapFloat");

	Params::UQtnMathUtilities_QtnWrapFloat_Params Parms{};

	Parms.CurrentValue = CurrentValue;
	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.IsCloseEnoughAABB
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     PointA                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PointB                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HorizontalTolerance                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VerticalTolerance                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::IsCloseEnoughAABB(struct FVector& PointA, struct FVector& PointB, float HorizontalTolerance, float VerticalTolerance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "IsCloseEnoughAABB");

	Params::UQtnMathUtilities_IsCloseEnoughAABB_Params Parms{};

	Parms.PointA = PointA;
	Parms.PointB = PointB;
	Parms.HorizontalTolerance = HorizontalTolerance;
	Parms.VerticalTolerance = VerticalTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.IsCloseEnough
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     PointA                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PointB                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HorizontalTolerance                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VerticalTolerance                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::IsCloseEnough(struct FVector& PointA, struct FVector& PointB, float HorizontalTolerance, float VerticalTolerance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "IsCloseEnough");

	Params::UQtnMathUtilities_IsCloseEnough_Params Parms{};

	Parms.PointA = PointA;
	Parms.PointB = PointB;
	Parms.HorizontalTolerance = HorizontalTolerance;
	Parms.VerticalTolerance = VerticalTolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.IsActorWithinViewCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ActorToCheck                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ViewLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ViewDirection                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             ConeHalfAngleDegrees                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ViewDistance                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::IsActorWithinViewCone(class AActor* ActorToCheck, struct FVector& ViewLocation, struct FVector& ViewDirection, struct FQtnRangedFloat& ConeHalfAngleDegrees, float ViewDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "IsActorWithinViewCone");

	Params::UQtnMathUtilities_IsActorWithinViewCone_Params Parms{};

	Parms.ActorToCheck = ActorToCheck;
	Parms.ViewLocation = ViewLocation;
	Parms.ViewDirection = ViewDirection;
	Parms.ConeHalfAngleDegrees = ConeHalfAngleDegrees;
	Parms.ViewDistance = ViewDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetVelocityToTarget
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     ProjectileVelocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ProjectileSpeed                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetVector                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Gravity                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AimAssistRadius                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GetVelocityToTarget(struct FVector* ProjectileVelocity, struct FVector& MuzzlePosition, float ProjectileSpeed, class AQtnPlayerController* LocalPlayerController, const struct FVector& TargetVector, const struct FVector& Gravity, float AimAssistRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetVelocityToTarget");

	Params::UQtnMathUtilities_GetVelocityToTarget_Params Parms{};

	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileSpeed = ProjectileSpeed;
	Parms.LocalPlayerController = LocalPlayerController;
	Parms.TargetVector = TargetVector;
	Parms.Gravity = Gravity;
	Parms.AimAssistRadius = AimAssistRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ProjectileVelocity != nullptr)
		*ProjectileVelocity = std::move(Parms.ProjectileVelocity);

}


// Function QtnGame.QtnMathUtilities.GetVelocityFromDistanceAndHeight
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// float                              HorizontalDistance                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ApexHeight                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              GravityMagnitude                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HorizontalSpeed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              VerticalSpeed                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalAirTime                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GetVelocityFromDistanceAndHeight(float HorizontalDistance, float ApexHeight, float GravityMagnitude, float* HorizontalSpeed, float* VerticalSpeed, float* TotalAirTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetVelocityFromDistanceAndHeight");

	Params::UQtnMathUtilities_GetVelocityFromDistanceAndHeight_Params Parms{};

	Parms.HorizontalDistance = HorizontalDistance;
	Parms.ApexHeight = ApexHeight;
	Parms.GravityMagnitude = GravityMagnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (HorizontalSpeed != nullptr)
		*HorizontalSpeed = Parms.HorizontalSpeed;

	if (VerticalSpeed != nullptr)
		*VerticalSpeed = Parms.VerticalSpeed;

	if (TotalAirTime != nullptr)
		*TotalAirTime = Parms.TotalAirTime;

}


// Function QtnGame.QtnMathUtilities.GetScreenRatioFromLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ScreenLocation                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnMathUtilities::GetScreenRatioFromLocation(class UObject* WorldContextObject, const struct FVector2D& ScreenLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetScreenRatioFromLocation");

	Params::UQtnMathUtilities_GetScreenRatioFromLocation_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ScreenLocation = ScreenLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetScreenOffsetFromText
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      TextToMeasure                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFont*                       FontToMeasure                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   TextScale                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   SpacingAdjust                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EHorizTextAligment      HorizontalAlignment                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EVerticalTextAligment   VerticalAlignment                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnMathUtilities::GetScreenOffsetFromText(const class FString& TextToMeasure, class UFont* FontToMeasure, const struct FVector2D& TextScale, const struct FVector2D& SpacingAdjust, enum class EHorizTextAligment HorizontalAlignment, enum class EVerticalTextAligment VerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetScreenOffsetFromText");

	Params::UQtnMathUtilities_GetScreenOffsetFromText_Params Parms{};

	Parms.TextToMeasure = TextToMeasure;
	Parms.FontToMeasure = FontToMeasure;
	Parms.TextScale = TextScale;
	Parms.SpacingAdjust = SpacingAdjust;
	Parms.HorizontalAlignment = HorizontalAlignment;
	Parms.VerticalAlignment = VerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetScreenLocationFromWorld
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     WorldLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsWithinView                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   SafeZoneRatio                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnMathUtilities::GetScreenLocationFromWorld(class UObject* WorldContextObject, const struct FVector& WorldLocation, bool* IsWithinView, const struct FVector2D& SafeZoneRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetScreenLocationFromWorld");

	Params::UQtnMathUtilities_GetScreenLocationFromWorld_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldLocation = WorldLocation;
	Parms.SafeZoneRatio = SafeZoneRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsWithinView != nullptr)
		*IsWithinView = Parms.IsWithinView;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetScreenLocationFromRatio
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ScreenRatio                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnMathUtilities::GetScreenLocationFromRatio(class UObject* WorldContextObject, const struct FVector2D& ScreenRatio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetScreenLocationFromRatio");

	Params::UQtnMathUtilities_GetScreenLocationFromRatio_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ScreenRatio = ScreenRatio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetSafeFuturePosition
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    QueryingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    MovingPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PerceivedPosition                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PerceivedVelocity                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FutureSeconds                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckForWalls                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::GetSafeFuturePosition(class AQtnPawn* QueryingPawn, class AQtnPawn* MovingPawn, struct FVector& PerceivedPosition, struct FVector& PerceivedVelocity, float FutureSeconds, bool CheckForWalls)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetSafeFuturePosition");

	Params::UQtnMathUtilities_GetSafeFuturePosition_Params Parms{};

	Parms.QueryingPawn = QueryingPawn;
	Parms.MovingPawn = MovingPawn;
	Parms.PerceivedPosition = PerceivedPosition;
	Parms.PerceivedVelocity = PerceivedVelocity;
	Parms.FutureSeconds = FutureSeconds;
	Parms.CheckForWalls = CheckForWalls;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetRotatorBetweenVectors
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     StartDirection                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndDirection                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UQtnMathUtilities::GetRotatorBetweenVectors(struct FVector& StartDirection, struct FVector& EndDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetRotatorBetweenVectors");

	Params::UQtnMathUtilities_GetRotatorBetweenVectors_Params Parms{};

	Parms.StartDirection = StartDirection;
	Parms.EndDirection = EndDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetPredictiveAimVelocityForPawnTarget
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     ProjectileVelocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzleDirection                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxMuzzleDeviationDegrees                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ProjectileSpeed                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    TargetPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileGravity                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   MissDistanceXY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::GetPredictiveAimVelocityForPawnTarget(struct FVector* ProjectileVelocity, struct FVector& MuzzlePosition, struct FVector& MuzzleDirection, float MaxMuzzleDeviationDegrees, float ProjectileSpeed, class AQtnPawn* TargetPawn, struct FVector& ProjectileGravity, const struct FVector2D& MissDistanceXY)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetPredictiveAimVelocityForPawnTarget");

	Params::UQtnMathUtilities_GetPredictiveAimVelocityForPawnTarget_Params Parms{};

	Parms.MuzzlePosition = MuzzlePosition;
	Parms.MuzzleDirection = MuzzleDirection;
	Parms.MaxMuzzleDeviationDegrees = MaxMuzzleDeviationDegrees;
	Parms.ProjectileSpeed = ProjectileSpeed;
	Parms.TargetPawn = TargetPawn;
	Parms.ProjectileGravity = ProjectileGravity;
	Parms.MissDistanceXY = MissDistanceXY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ProjectileVelocity != nullptr)
		*ProjectileVelocity = std::move(Parms.ProjectileVelocity);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetPredictiveAimVelocity
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     ProjectileVelocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ProjectileSpeed                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetPosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetVelocity                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Gravity                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::GetPredictiveAimVelocity(struct FVector* ProjectileVelocity, struct FVector& MuzzlePosition, float ProjectileSpeed, struct FVector& TargetPosition, struct FVector& TargetVelocity, struct FVector& Gravity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetPredictiveAimVelocity");

	Params::UQtnMathUtilities_GetPredictiveAimVelocity_Params Parms{};

	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileSpeed = ProjectileSpeed;
	Parms.TargetPosition = TargetPosition;
	Parms.TargetVelocity = TargetVelocity;
	Parms.Gravity = Gravity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ProjectileVelocity != nullptr)
		*ProjectileVelocity = std::move(Parms.ProjectileVelocity);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetNearestPointOnLineSegmentToView
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    ViewingPawn                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     SegmentStart                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     SegmentEnd                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::GetNearestPointOnLineSegmentToView(class AQtnPawn* ViewingPawn, struct FVector& SegmentStart, struct FVector& SegmentEnd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetNearestPointOnLineSegmentToView");

	Params::UQtnMathUtilities_GetNearestPointOnLineSegmentToView_Params Parms{};

	Parms.ViewingPawn = ViewingPawn;
	Parms.SegmentStart = SegmentStart;
	Parms.SegmentEnd = SegmentEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetNearestPointOnLineSegment
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     TestLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     SegmentStart                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     SegmentEnd                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::GetNearestPointOnLineSegment(struct FVector& TestLocation, struct FVector& SegmentStart, struct FVector& SegmentEnd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetNearestPointOnLineSegment");

	Params::UQtnMathUtilities_GetNearestPointOnLineSegment_Params Parms{};

	Parms.TestLocation = TestLocation;
	Parms.SegmentStart = SegmentStart;
	Parms.SegmentEnd = SegmentEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetLaunchSpeedFromThrowDistance
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// float                              MaxThrowDistance                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              GravityMagnitude                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnMathUtilities::GetLaunchSpeedFromThrowDistance(float MaxThrowDistance, float GravityMagnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetLaunchSpeedFromThrowDistance");

	Params::UQtnMathUtilities_GetLaunchSpeedFromThrowDistance_Params Parms{};

	Parms.MaxThrowDistance = MaxThrowDistance;
	Parms.GravityMagnitude = GravityMagnitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetFuturePosition
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    MovingPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PerceivedPosition                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PerceivedVelocity                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FutureSeconds                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckForWalls                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::GetFuturePosition(class AQtnPawn* MovingPawn, struct FVector& PerceivedPosition, struct FVector& PerceivedVelocity, float FutureSeconds, bool CheckForWalls)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetFuturePosition");

	Params::UQtnMathUtilities_GetFuturePosition_Params Parms{};

	Parms.MovingPawn = MovingPawn;
	Parms.PerceivedPosition = PerceivedPosition;
	Parms.PerceivedVelocity = PerceivedVelocity;
	Parms.FutureSeconds = FutureSeconds;
	Parms.CheckForWalls = CheckForWalls;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetCardinalRotation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     SelfLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PositionInFront                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnCardinalDirection   CardinalDirection                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UQtnMathUtilities::GetCardinalRotation(struct FVector& SelfLocation, struct FVector& PositionInFront, enum class EQtnCardinalDirection CardinalDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetCardinalRotation");

	Params::UQtnMathUtilities_GetCardinalRotation_Params Parms{};

	Parms.SelfLocation = SelfLocation;
	Parms.PositionInFront = PositionInFront;
	Parms.CardinalDirection = CardinalDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetCardinalDirectionFromMovement
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ForwardVector                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     WorldMovement                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsValid                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnCardinalDirection   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnCardinalDirection UQtnMathUtilities::GetCardinalDirectionFromMovement(const struct FVector& ForwardVector, struct FVector& WorldMovement, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetCardinalDirectionFromMovement");

	Params::UQtnMathUtilities_GetCardinalDirectionFromMovement_Params Parms{};

	Parms.ForwardVector = ForwardVector;
	Parms.WorldMovement = WorldMovement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetCardinalDirection
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      SelfActor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsValid                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnCardinalDirection   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnCardinalDirection UQtnMathUtilities::GetCardinalDirection(class AActor* SelfActor, struct FVector& Location, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetCardinalDirection");

	Params::UQtnMathUtilities_GetCardinalDirection_Params Parms{};

	Parms.SelfActor = SelfActor;
	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetCameraAimAssistVelocity
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     ProjectileVelocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ProjectileSpeed                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TraceDistanceCm                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Gravity                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AimAssistRadius                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GetCameraAimAssistVelocity(struct FVector* ProjectileVelocity, struct FVector& MuzzlePosition, float ProjectileSpeed, class AQtnPlayerController* LocalPlayerController, float TraceDistanceCm, const struct FVector& Gravity, float AimAssistRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetCameraAimAssistVelocity");

	Params::UQtnMathUtilities_GetCameraAimAssistVelocity_Params Parms{};

	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileSpeed = ProjectileSpeed;
	Parms.LocalPlayerController = LocalPlayerController;
	Parms.TraceDistanceCm = TraceDistanceCm;
	Parms.Gravity = Gravity;
	Parms.AimAssistRadius = AimAssistRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ProjectileVelocity != nullptr)
		*ProjectileVelocity = std::move(Parms.ProjectileVelocity);

}


// Function QtnGame.QtnMathUtilities.GetBestPawnWithinViewCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            PawnsToCheck                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                     ViewLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ViewDirection                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             ConeHalfAngleDegrees                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ViewDistance                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadBodies                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnMathUtilities::GetBestPawnWithinViewCone(TArray<class AQtnPawn*>& PawnsToCheck, struct FVector& ViewLocation, struct FVector& ViewDirection, struct FQtnRangedFloat& ConeHalfAngleDegrees, float ViewDistance, bool IgnoreDeadBodies)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetBestPawnWithinViewCone");

	Params::UQtnMathUtilities_GetBestPawnWithinViewCone_Params Parms{};

	Parms.PawnsToCheck = PawnsToCheck;
	Parms.ViewLocation = ViewLocation;
	Parms.ViewDirection = ViewDirection;
	Parms.ConeHalfAngleDegrees = ConeHalfAngleDegrees;
	Parms.ViewDistance = ViewDistance;
	Parms.IgnoreDeadBodies = IgnoreDeadBodies;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetBestPawnFromLocationWithLOS
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            PawnsToCheck                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                     FromLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartLOSLocation                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      IgnoreActorForLOS                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadBodies                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnMathUtilities::GetBestPawnFromLocationWithLOS(TArray<class AQtnPawn*>& PawnsToCheck, struct FVector& FromLocation, struct FVector& StartLOSLocation, class AActor* IgnoreActorForLOS, bool IgnoreDeadBodies)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetBestPawnFromLocationWithLOS");

	Params::UQtnMathUtilities_GetBestPawnFromLocationWithLOS_Params Parms{};

	Parms.PawnsToCheck = PawnsToCheck;
	Parms.FromLocation = FromLocation;
	Parms.StartLOSLocation = StartLOSLocation;
	Parms.IgnoreActorForLOS = IgnoreActorForLOS;
	Parms.IgnoreDeadBodies = IgnoreDeadBodies;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetBestActorWithinViewCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>              ActorsToCheck                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                     ViewLocation                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ViewDirection                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             ConeHalfAngleDegrees                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ViewDistance                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnMathUtilities::GetBestActorWithinViewCone(TArray<class AActor*>& ActorsToCheck, struct FVector& ViewLocation, struct FVector& ViewDirection, struct FQtnRangedFloat& ConeHalfAngleDegrees, float ViewDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetBestActorWithinViewCone");

	Params::UQtnMathUtilities_GetBestActorWithinViewCone_Params Parms{};

	Parms.ActorsToCheck = ActorsToCheck;
	Parms.ViewLocation = ViewLocation;
	Parms.ViewDirection = ViewDirection;
	Parms.ConeHalfAngleDegrees = ConeHalfAngleDegrees;
	Parms.ViewDistance = ViewDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetAttackMotion
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      AttackingActor                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartPoint                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndPoint                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnAttackMotion        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnAttackMotion UQtnMathUtilities::GetAttackMotion(class AActor* AttackingActor, struct FVector& StartPoint, struct FVector& EndPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetAttackMotion");

	Params::UQtnMathUtilities_GetAttackMotion_Params Parms{};

	Parms.AttackingActor = AttackingActor;
	Parms.StartPoint = StartPoint;
	Parms.EndPoint = EndPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetAimingArc
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// TArray<struct FVector>             OutputVectors                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                              ThresholdIndex                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      AimingActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartPoint                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartVelocity                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Gravity                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SimDurationSeconds                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       SweepChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaSecondsStep                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UsePhysicsSweeps                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SphereCheckRadius                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LinearDampening                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ThresholdDistance                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GetAimingArc(TArray<struct FVector>* OutputVectors, int32* ThresholdIndex, class AActor* AimingActor, struct FVector& StartPoint, struct FVector& StartVelocity, const struct FVector& Gravity, float SimDurationSeconds, enum class ECollisionChannel SweepChannel, float DeltaSecondsStep, bool UsePhysicsSweeps, float SphereCheckRadius, float LinearDampening, float ThresholdDistance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetAimingArc");

	Params::UQtnMathUtilities_GetAimingArc_Params Parms{};

	Parms.AimingActor = AimingActor;
	Parms.StartPoint = StartPoint;
	Parms.StartVelocity = StartVelocity;
	Parms.Gravity = Gravity;
	Parms.SimDurationSeconds = SimDurationSeconds;
	Parms.SweepChannel = SweepChannel;
	Parms.DeltaSecondsStep = DeltaSecondsStep;
	Parms.UsePhysicsSweeps = UsePhysicsSweeps;
	Parms.SphereCheckRadius = SphereCheckRadius;
	Parms.LinearDampening = LinearDampening;
	Parms.ThresholdDistance = ThresholdDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputVectors != nullptr)
		*OutputVectors = std::move(Parms.OutputVectors);

	if (ThresholdIndex != nullptr)
		*ThresholdIndex = Parms.ThresholdIndex;

}


// Function QtnGame.QtnMathUtilities.GetAdjustedAimWithinCone2D
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     OriginalAim                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ConeDirection                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ConeHalfAngleDegrees                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::GetAdjustedAimWithinCone2D(struct FVector& OriginalAim, struct FVector& ConeDirection, float ConeHalfAngleDegrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetAdjustedAimWithinCone2D");

	Params::UQtnMathUtilities_GetAdjustedAimWithinCone2D_Params Parms{};

	Parms.OriginalAim = OriginalAim;
	Parms.ConeDirection = ConeDirection;
	Parms.ConeHalfAngleDegrees = ConeHalfAngleDegrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GetAdjustedAimWithinCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     OriginalAim                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ConeDirection                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ConeHalfAngleDegrees                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::GetAdjustedAimWithinCone(struct FVector& OriginalAim, struct FVector& ConeDirection, float ConeHalfAngleDegrees)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GetAdjustedAimWithinCone");

	Params::UQtnMathUtilities_GetAdjustedAimWithinCone_Params Parms{};

	Parms.OriginalAim = OriginalAim;
	Parms.ConeDirection = ConeDirection;
	Parms.ConeHalfAngleDegrees = ConeHalfAngleDegrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.GatherPawnsWithinRadiusFlags_BP
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    QueryingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamAttitude                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPawn*>            Pawns                                                            (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IgnoreQueryingPawn                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadPawns                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherPawnsWithinRadiusFlags_BP(class AQtnPawn* QueryingPawn, const struct FVector& Origin, float Radius, int32 TeamAttitude, TArray<class AQtnPawn*>* Pawns, bool IgnoreQueryingPawn, bool IgnoreDeadPawns, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherPawnsWithinRadiusFlags_BP");

	Params::UQtnMathUtilities_GatherPawnsWithinRadiusFlags_BP_Params Parms{};

	Parms.QueryingPawn = QueryingPawn;
	Parms.Origin = Origin;
	Parms.Radius = Radius;
	Parms.TeamAttitude = TeamAttitude;
	Parms.IgnoreQueryingPawn = IgnoreQueryingPawn;
	Parms.IgnoreDeadPawns = IgnoreDeadPawns;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Pawns != nullptr)
		*Pawns = std::move(Parms.Pawns);

}


// Function QtnGame.QtnMathUtilities.GatherPawnsWithinRadius
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    QueryingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTeamAttitude        TeamAttitude                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPawn*>            Pawns                                                            (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IgnoreQueryingPawn                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadPawns                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherPawnsWithinRadius(class AQtnPawn* QueryingPawn, const struct FVector& Origin, float Radius, enum class EQtnTeamAttitude TeamAttitude, TArray<class AQtnPawn*>* Pawns, bool IgnoreQueryingPawn, bool IgnoreDeadPawns, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherPawnsWithinRadius");

	Params::UQtnMathUtilities_GatherPawnsWithinRadius_Params Parms{};

	Parms.QueryingPawn = QueryingPawn;
	Parms.Origin = Origin;
	Parms.Radius = Radius;
	Parms.TeamAttitude = TeamAttitude;
	Parms.IgnoreQueryingPawn = IgnoreQueryingPawn;
	Parms.IgnoreDeadPawns = IgnoreDeadPawns;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Pawns != nullptr)
		*Pawns = std::move(Parms.Pawns);

}


// Function QtnGame.QtnMathUtilities.GatherPawnsWithinCapsule
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    QueryingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     CapsuleBase                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     CapsuleTip                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              CapsuleRadius                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTeamAttitude        TeamAttitude                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPawn*>            Pawns                                                            (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IgnoreQueryingPawn                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadPawns                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherPawnsWithinCapsule(class AQtnPawn* QueryingPawn, const struct FVector& CapsuleBase, const struct FVector& CapsuleTip, float CapsuleRadius, enum class EQtnTeamAttitude TeamAttitude, TArray<class AQtnPawn*>* Pawns, bool IgnoreQueryingPawn, bool IgnoreDeadPawns, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherPawnsWithinCapsule");

	Params::UQtnMathUtilities_GatherPawnsWithinCapsule_Params Parms{};

	Parms.QueryingPawn = QueryingPawn;
	Parms.CapsuleBase = CapsuleBase;
	Parms.CapsuleTip = CapsuleTip;
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.TeamAttitude = TeamAttitude;
	Parms.IgnoreQueryingPawn = IgnoreQueryingPawn;
	Parms.IgnoreDeadPawns = IgnoreDeadPawns;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Pawns != nullptr)
		*Pawns = std::move(Parms.Pawns);

}


// Function QtnGame.QtnMathUtilities.GatherEnemiesWithinViewCone
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    QueryingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ViewLocation                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ViewDirection                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             ConeHalfAngleDegrees                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ViewDistance                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPawn*>            EnemyPawns                                                       (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadPawns                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherEnemiesWithinViewCone(class AQtnPawn* QueryingPawn, const struct FVector& ViewLocation, struct FVector& ViewDirection, struct FQtnRangedFloat& ConeHalfAngleDegrees, float ViewDistance, TArray<class AQtnPawn*>* EnemyPawns, bool IgnoreDeadPawns, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherEnemiesWithinViewCone");

	Params::UQtnMathUtilities_GatherEnemiesWithinViewCone_Params Parms{};

	Parms.QueryingPawn = QueryingPawn;
	Parms.ViewLocation = ViewLocation;
	Parms.ViewDirection = ViewDirection;
	Parms.ConeHalfAngleDegrees = ConeHalfAngleDegrees;
	Parms.ViewDistance = ViewDistance;
	Parms.IgnoreDeadPawns = IgnoreDeadPawns;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EnemyPawns != nullptr)
		*EnemyPawns = std::move(Parms.EnemyPawns);

}


// Function QtnGame.QtnMathUtilities.GatherEnemiesWithinRadius
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    QueryingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPawn*>            EnemyPawns                                                       (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadPawns                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherEnemiesWithinRadius(class AQtnPawn* QueryingPawn, const struct FVector& Origin, float Radius, TArray<class AQtnPawn*>* EnemyPawns, bool IgnoreDeadPawns, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherEnemiesWithinRadius");

	Params::UQtnMathUtilities_GatherEnemiesWithinRadius_Params Parms{};

	Parms.QueryingPawn = QueryingPawn;
	Parms.Origin = Origin;
	Parms.Radius = Radius;
	Parms.IgnoreDeadPawns = IgnoreDeadPawns;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EnemyPawns != nullptr)
		*EnemyPawns = std::move(Parms.EnemyPawns);

}


// Function QtnGame.QtnMathUtilities.GatherEnemiesWithinCapsule
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    QueryingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     CapsuleBase                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     CapsuleTip                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              CapsuleRadius                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPawn*>            EnemyPawns                                                       (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IgnoreDeadPawns                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherEnemiesWithinCapsule(class AQtnPawn* QueryingPawn, const struct FVector& CapsuleBase, const struct FVector& CapsuleTip, float CapsuleRadius, TArray<class AQtnPawn*>* EnemyPawns, bool IgnoreDeadPawns, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherEnemiesWithinCapsule");

	Params::UQtnMathUtilities_GatherEnemiesWithinCapsule_Params Parms{};

	Parms.QueryingPawn = QueryingPawn;
	Parms.CapsuleBase = CapsuleBase;
	Parms.CapsuleTip = CapsuleTip;
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.IgnoreDeadPawns = IgnoreDeadPawns;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (EnemyPawns != nullptr)
		*EnemyPawns = std::move(Parms.EnemyPawns);

}


// Function QtnGame.QtnMathUtilities.GatherActorsWithinRadius
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              OtherActors                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               IgnoreQueryingActor                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OnlyDamageReceptorActors                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherActorsWithinRadius(class AActor* QueryingActor, const struct FVector& Origin, float Radius, TArray<class AActor*>* OtherActors, bool IgnoreQueryingActor, bool OnlyDamageReceptorActors, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherActorsWithinRadius");

	Params::UQtnMathUtilities_GatherActorsWithinRadius_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.Origin = Origin;
	Parms.Radius = Radius;
	Parms.IgnoreQueryingActor = IgnoreQueryingActor;
	Parms.OnlyDamageReceptorActors = OnlyDamageReceptorActors;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OtherActors != nullptr)
		*OtherActors = std::move(Parms.OtherActors);

}


// Function QtnGame.QtnMathUtilities.GatherActorsWithinCapsule
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     CapsuleBase                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     CapsuleTip                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              CapsuleRadius                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              OtherActors                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               IgnoreQueryingActor                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OnlyDamageReceptorActors                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByGeo                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::GatherActorsWithinCapsule(class AActor* QueryingActor, const struct FVector& CapsuleBase, const struct FVector& CapsuleTip, float CapsuleRadius, TArray<class AActor*>* OtherActors, bool IgnoreQueryingActor, bool OnlyDamageReceptorActors, bool blockedByGeo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "GatherActorsWithinCapsule");

	Params::UQtnMathUtilities_GatherActorsWithinCapsule_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.CapsuleBase = CapsuleBase;
	Parms.CapsuleTip = CapsuleTip;
	Parms.CapsuleRadius = CapsuleRadius;
	Parms.IgnoreQueryingActor = IgnoreQueryingActor;
	Parms.OnlyDamageReceptorActors = OnlyDamageReceptorActors;
	Parms.blockedByGeo = blockedByGeo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OtherActors != nullptr)
		*OtherActors = std::move(Parms.OtherActors);

}


// Function QtnGame.QtnMathUtilities.FindSomethingCoolToBreak
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzleDirection                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    TargetPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDamageReceptorComponent* DamageReceptor                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnMathUtilities::FindSomethingCoolToBreak(struct FVector& MuzzlePosition, struct FVector& MuzzleDirection, class AQtnPawn* TargetPawn, struct FVector& Origin, float Radius, class UQtnDamageReceptorComponent** DamageReceptor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "FindSomethingCoolToBreak");

	Params::UQtnMathUtilities_FindSomethingCoolToBreak_Params Parms{};

	Parms.MuzzlePosition = MuzzlePosition;
	Parms.MuzzleDirection = MuzzleDirection;
	Parms.TargetPawn = TargetPawn;
	Parms.Origin = Origin;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DamageReceptor != nullptr)
		*DamageReceptor = Parms.DamageReceptor;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.CreateVerticesFromSpline
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class USplineComponent*            Spline                                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                BaseColor                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                ThresholdColor                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>             OutVerts                                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>           OutUvs                                                           (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FLinearColor>        OutVertColors                                                    (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                              AimWidth                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ThresholdIndex                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::CreateVerticesFromSpline(class USplineComponent* Spline, struct FLinearColor& BaseColor, struct FLinearColor& ThresholdColor, TArray<struct FVector>& OutVerts, TArray<struct FVector2D>& OutUvs, TArray<struct FLinearColor>& OutVertColors, float AimWidth, int32 ThresholdIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "CreateVerticesFromSpline");

	Params::UQtnMathUtilities_CreateVerticesFromSpline_Params Parms{};

	Parms.Spline = Spline;
	Parms.BaseColor = BaseColor;
	Parms.ThresholdColor = ThresholdColor;
	Parms.OutVerts = OutVerts;
	Parms.OutUvs = OutUvs;
	Parms.OutVertColors = OutVertColors;
	Parms.AimWidth = AimWidth;
	Parms.ThresholdIndex = ThresholdIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMathUtilities.CreateTriangleIndicesFromSpline
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class USplineComponent*            Spline                                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      OutIndices                                                       (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnMathUtilities::CreateTriangleIndicesFromSpline(class USplineComponent* Spline, TArray<int32>& OutIndices)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "CreateTriangleIndicesFromSpline");

	Params::UQtnMathUtilities_CreateTriangleIndicesFromSpline_Params Parms{};

	Parms.Spline = Spline;
	Parms.OutIndices = OutIndices;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMathUtilities.ConvertSecondsToTimeDisplay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              TotalSecondsToConvert                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Days                                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Hours                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Minutes                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Seconds                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::ConvertSecondsToTimeDisplay(float TotalSecondsToConvert, int32* Days, int32* Hours, int32* Minutes, int32* Seconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "ConvertSecondsToTimeDisplay");

	Params::UQtnMathUtilities_ConvertSecondsToTimeDisplay_Params Parms{};

	Parms.TotalSecondsToConvert = TotalSecondsToConvert;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Days != nullptr)
		*Days = Parms.Days;

	if (Hours != nullptr)
		*Hours = Parms.Hours;

	if (Minutes != nullptr)
		*Minutes = Parms.Minutes;

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;

}


// Function QtnGame.QtnMathUtilities.ConvertDirectionToDegreesAndMagnitude
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   Direction                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Degrees                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Magnitude                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMathUtilities::ConvertDirectionToDegreesAndMagnitude(struct FVector2D& Direction, float* Degrees, float* Magnitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "ConvertDirectionToDegreesAndMagnitude");

	Params::UQtnMathUtilities_ConvertDirectionToDegreesAndMagnitude_Params Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Degrees != nullptr)
		*Degrees = Parms.Degrees;

	if (Magnitude != nullptr)
		*Magnitude = Parms.Magnitude;

}


// Function QtnGame.QtnMathUtilities.CanBeConsideredGroundForPawn
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     HitNormal                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    TestPawn                                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::CanBeConsideredGroundForPawn(struct FVector& HitNormal, class AQtnPawn* TestPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "CanBeConsideredGroundForPawn");

	Params::UQtnMathUtilities_CanBeConsideredGroundForPawn_Params Parms{};

	Parms.HitNormal = HitNormal;
	Parms.TestPawn = TestPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.CanBeConsideredGround
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     HitNormal                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              WalkableFloorAngle                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMathUtilities::CanBeConsideredGround(struct FVector& HitNormal, float WalkableFloorAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "CanBeConsideredGround");

	Params::UQtnMathUtilities_CanBeConsideredGround_Params Parms{};

	Parms.HitNormal = HitNormal;
	Parms.WalkableFloorAngle = WalkableFloorAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.AdjustMuzzlePositionForWalls
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    ShootingPawn                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OriginalMuzzlePosition                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WallDetected                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::AdjustMuzzlePositionForWalls(class AQtnPawn* ShootingPawn, struct FVector& OriginalMuzzlePosition, bool* WallDetected)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "AdjustMuzzlePositionForWalls");

	Params::UQtnMathUtilities_AdjustMuzzlePositionForWalls_Params Parms{};

	Parms.ShootingPawn = ShootingPawn;
	Parms.OriginalMuzzlePosition = OriginalMuzzlePosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (WallDetected != nullptr)
		*WallDetected = Parms.WallDetected;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMathUtilities.AdjustAimLocationForMiss
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     AimLocation                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             LateralMissRange                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             OverheadMissRange                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnMathUtilities::AdjustAimLocationForMiss(struct FVector& MuzzlePosition, struct FVector& AimLocation, struct FQtnRangedFloat& LateralMissRange, struct FQtnRangedFloat& OverheadMissRange)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMathUtilities", "AdjustAimLocationForMiss");

	Params::UQtnMathUtilities_AdjustAimLocationForMiss_Params Parms{};

	Parms.MuzzlePosition = MuzzlePosition;
	Parms.AimLocation = AimLocation;
	Parms.LateralMissRange = LateralMissRange;
	Parms.OverheadMissRange = OverheadMissRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnMentalFSM
// (None)

class UClass* UQtnMentalFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalFSM");

	return Clss;
}


// QtnMentalFSM QtnGame.Default__QtnMentalFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalFSM* UQtnMentalFSM::GetDefaultObj()
{
	static class UQtnMentalFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalFSM*>(UQtnMentalFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalState
// (None)

class UClass* UQtnMentalState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalState");

	return Clss;
}


// QtnMentalState QtnGame.Default__QtnMentalState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalState* UQtnMentalState::GetDefaultObj()
{
	static class UQtnMentalState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalState*>(UQtnMentalState::StaticClass()->DefaultObject);

	return Default;
}


// DelegateFunction QtnGame.QtnMentalState.QtnInitMentalStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnMentalState*             SelfMentalState                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::QtnInitMentalStateEvent__DelegateSignature(class UQtnMentalState* SelfMentalState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "QtnInitMentalStateEvent__DelegateSignature");

	Params::UQtnMentalState_QtnInitMentalStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfMentalState = SelfMentalState;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnMentalState.QtnExitMentalStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnMentalState*             SelfMentalState                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnMentalState> NextMentalStateClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::QtnExitMentalStateEvent__DelegateSignature(class UQtnMentalState* SelfMentalState, TSubclassOf<class UQtnMentalState> NextMentalStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "QtnExitMentalStateEvent__DelegateSignature");

	Params::UQtnMentalState_QtnExitMentalStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfMentalState = SelfMentalState;
	Parms.NextMentalStateClass = NextMentalStateClass;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnMentalState.QtnEnterMentalStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnMentalState*             SelfMentalState                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnMentalState*             PreviousMentalState                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::QtnEnterMentalStateEvent__DelegateSignature(class UQtnMentalState* SelfMentalState, class UQtnMentalState* PreviousMentalState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "QtnEnterMentalStateEvent__DelegateSignature");

	Params::UQtnMentalState_QtnEnterMentalStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfMentalState = SelfMentalState;
	Parms.PreviousMentalState = PreviousMentalState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnVerbStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnVerb*                    StoppedVerb                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnStopReason          StopReason                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::OnVerbStopped(class UQtnVerb* StoppedVerb, enum class EQtnStopReason StopReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnVerbStopped");

	Params::UQtnMentalState_OnVerbStopped_Params Parms{};

	Parms.StoppedVerb = StoppedVerb;
	Parms.StopReason = StopReason;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnVerbStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnVerb*                    StartedVerb                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::OnVerbStarted(class UQtnVerb* StartedVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnVerbStarted");

	Params::UQtnMentalState_OnVerbStarted_Params Parms{};

	Parms.StartedVerb = StartedVerb;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnTickMentalState
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              FDeltaSeconds                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::OnTickMentalState(float FDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnTickMentalState");

	Params::UQtnMentalState_OnTickMentalState_Params Parms{};

	Parms.FDeltaSeconds = FDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnThinkMentalState
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              TimeSinceLastThought                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::OnThinkMentalState(float TimeSinceLastThought)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnThinkMentalState");

	Params::UQtnMentalState_OnThinkMentalState_Params Parms{};

	Parms.TimeSinceLastThought = TimeSinceLastThought;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnInitMentalState
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnMentalState::OnInitMentalState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnInitMentalState");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnMentalState.OnExitMentalState
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnMentalState> NextMentalStateClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::OnExitMentalState(TSubclassOf<class UQtnMentalState> NextMentalStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnExitMentalState");

	Params::UQtnMentalState_OnExitMentalState_Params Parms{};

	Parms.NextMentalStateClass = NextMentalStateClass;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnEnterMentalState
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnMentalState*             PreviousMentalState                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::OnEnterMentalState(class UQtnMentalState* PreviousMentalState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnEnterMentalState");

	Params::UQtnMentalState_OnEnterMentalState_Params Parms{};

	Parms.PreviousMentalState = PreviousMentalState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalState::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnDebugDisplay");

	Params::UQtnMentalState_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.OnDamageApplied
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnMentalState::OnDamageApplied(struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactionInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "OnDamageApplied");

	Params::UQtnMentalState_OnDamageApplied_Params Parms{};

	Parms.DamageInfo = DamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalState.GetRelevantEnemy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnMentalState::GetRelevantEnemy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalState", "GetRelevantEnemy");

	Params::UQtnMentalState_GetRelevantEnemy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnMentalStateCombat
// (None)

class UClass* UQtnMentalStateCombat::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateCombat");

	return Clss;
}


// QtnMentalStateCombat QtnGame.Default__QtnMentalStateCombat
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateCombat* UQtnMentalStateCombat::GetDefaultObj()
{
	static class UQtnMentalStateCombat* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateCombat*>(UQtnMentalStateCombat::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMentalStateCombat.SetFavoriteAttackVerb
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        AttackVerbClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalStateCombat::SetFavoriteAttackVerb(TSubclassOf<class UQtnVerb> AttackVerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalStateCombat", "SetFavoriteAttackVerb");

	Params::UQtnMentalStateCombat_SetFavoriteAttackVerb_Params Parms{};

	Parms.AttackVerbClass = AttackVerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMentalStateCombat.HasForegroundTicket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMentalStateCombat::HasForegroundTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalStateCombat", "HasForegroundTicket");

	Params::UQtnMentalStateCombat_HasForegroundTicket_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMentalStateCombat.HasAttackTicket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMentalStateCombat::HasAttackTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalStateCombat", "HasAttackTicket");

	Params::UQtnMentalStateCombat_HasAttackTicket_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnMentalStateFlee
// (None)

class UClass* UQtnMentalStateFlee::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateFlee");

	return Clss;
}


// QtnMentalStateFlee QtnGame.Default__QtnMentalStateFlee
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateFlee* UQtnMentalStateFlee::GetDefaultObj()
{
	static class UQtnMentalStateFlee* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateFlee*>(UQtnMentalStateFlee::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStateFollowAlly
// (None)

class UClass* UQtnMentalStateFollowAlly::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateFollowAlly");

	return Clss;
}


// QtnMentalStateFollowAlly QtnGame.Default__QtnMentalStateFollowAlly
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateFollowAlly* UQtnMentalStateFollowAlly::GetDefaultObj()
{
	static class UQtnMentalStateFollowAlly* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateFollowAlly*>(UQtnMentalStateFollowAlly::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMentalStateFollowAlly.GetAlly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnMentalStateFollowAlly::GetAlly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalStateFollowAlly", "GetAlly");

	Params::UQtnMentalStateFollowAlly_GetAlly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnMentalStateIncapacitated
// (None)

class UClass* UQtnMentalStateIncapacitated::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateIncapacitated");

	return Clss;
}


// QtnMentalStateIncapacitated QtnGame.Default__QtnMentalStateIncapacitated
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateIncapacitated* UQtnMentalStateIncapacitated::GetDefaultObj()
{
	static class UQtnMentalStateIncapacitated* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateIncapacitated*>(UQtnMentalStateIncapacitated::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStateInvestigate
// (None)

class UClass* UQtnMentalStateInvestigate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateInvestigate");

	return Clss;
}


// QtnMentalStateInvestigate QtnGame.Default__QtnMentalStateInvestigate
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateInvestigate* UQtnMentalStateInvestigate::GetDefaultObj()
{
	static class UQtnMentalStateInvestigate* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateInvestigate*>(UQtnMentalStateInvestigate::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStatePatrol
// (None)

class UClass* UQtnMentalStatePatrol::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStatePatrol");

	return Clss;
}


// QtnMentalStatePatrol QtnGame.Default__QtnMentalStatePatrol
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStatePatrol* UQtnMentalStatePatrol::GetDefaultObj()
{
	static class UQtnMentalStatePatrol* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStatePatrol*>(UQtnMentalStatePatrol::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStatePlayerControlled
// (None)

class UClass* UQtnMentalStatePlayerControlled::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStatePlayerControlled");

	return Clss;
}


// QtnMentalStatePlayerControlled QtnGame.Default__QtnMentalStatePlayerControlled
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStatePlayerControlled* UQtnMentalStatePlayerControlled::GetDefaultObj()
{
	static class UQtnMentalStatePlayerControlled* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStatePlayerControlled*>(UQtnMentalStatePlayerControlled::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStateScriptedAction
// (None)

class UClass* UQtnMentalStateScriptedAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateScriptedAction");

	return Clss;
}


// QtnMentalStateScriptedAction QtnGame.Default__QtnMentalStateScriptedAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateScriptedAction* UQtnMentalStateScriptedAction::GetDefaultObj()
{
	static class UQtnMentalStateScriptedAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateScriptedAction*>(UQtnMentalStateScriptedAction::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStateScriptedBT
// (None)

class UClass* UQtnMentalStateScriptedBT::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateScriptedBT");

	return Clss;
}


// QtnMentalStateScriptedBT QtnGame.Default__QtnMentalStateScriptedBT
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateScriptedBT* UQtnMentalStateScriptedBT::GetDefaultObj()
{
	static class UQtnMentalStateScriptedBT* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateScriptedBT*>(UQtnMentalStateScriptedBT::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStateScriptedDestination
// (None)

class UClass* UQtnMentalStateScriptedDestination::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateScriptedDestination");

	return Clss;
}


// QtnMentalStateScriptedDestination QtnGame.Default__QtnMentalStateScriptedDestination
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateScriptedDestination* UQtnMentalStateScriptedDestination::GetDefaultObj()
{
	static class UQtnMentalStateScriptedDestination* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateScriptedDestination*>(UQtnMentalStateScriptedDestination::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalStateSearch
// (None)

class UClass* UQtnMentalStateSearch::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalStateSearch");

	return Clss;
}


// QtnMentalStateSearch QtnGame.Default__QtnMentalStateSearch
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalStateSearch* UQtnMentalStateSearch::GetDefaultObj()
{
	static class UQtnMentalStateSearch* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalStateSearch*>(UQtnMentalStateSearch::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubFSM
// (None)

class UClass* UQtnMentalSubFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubFSM");

	return Clss;
}


// QtnMentalSubFSM QtnGame.Default__QtnMentalSubFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubFSM* UQtnMentalSubFSM::GetDefaultObj()
{
	static class UQtnMentalSubFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubFSM*>(UQtnMentalSubFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubState
// (None)

class UClass* UQtnMentalSubState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubState");

	return Clss;
}


// QtnMentalSubState QtnGame.Default__QtnMentalSubState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubState* UQtnMentalSubState::GetDefaultObj()
{
	static class UQtnMentalSubState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubState*>(UQtnMentalSubState::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMentalSubState.RequestSubStateChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnMentalSubState>SubStateClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::RequestSubStateChange(TSubclassOf<class UQtnMentalSubState> SubStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "RequestSubStateChange");

	Params::UQtnMentalSubState_RequestSubStateChange_Params Parms{};

	Parms.SubStateClass = SubStateClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnMentalSubState.QtnInitMentalSubStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnMentalSubState*          SelfMentalSubState                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::QtnInitMentalSubStateEvent__DelegateSignature(class UQtnMentalSubState* SelfMentalSubState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "QtnInitMentalSubStateEvent__DelegateSignature");

	Params::UQtnMentalSubState_QtnInitMentalSubStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfMentalSubState = SelfMentalSubState;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnMentalSubState.QtnExitMentalSubStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnMentalSubState*          SelfMentalSubState                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnMentalSubState>NextMentalSubStateClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::QtnExitMentalSubStateEvent__DelegateSignature(class UQtnMentalSubState* SelfMentalSubState, TSubclassOf<class UQtnMentalSubState> NextMentalSubStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "QtnExitMentalSubStateEvent__DelegateSignature");

	Params::UQtnMentalSubState_QtnExitMentalSubStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfMentalSubState = SelfMentalSubState;
	Parms.NextMentalSubStateClass = NextMentalSubStateClass;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnMentalSubState.QtnEnterMentalSubStateEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnMentalSubState*          SelfMentalSubState                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnMentalSubState*          PreviousMentalSubState                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::QtnEnterMentalSubStateEvent__DelegateSignature(class UQtnMentalSubState* SelfMentalSubState, class UQtnMentalSubState* PreviousMentalSubState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "QtnEnterMentalSubStateEvent__DelegateSignature");

	Params::UQtnMentalSubState_QtnEnterMentalSubStateEvent__DelegateSignature_Params Parms{};

	Parms.SelfMentalSubState = SelfMentalSubState;
	Parms.PreviousMentalSubState = PreviousMentalSubState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnVerbStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnVerb*                    StoppedVerb                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnStopReason          StopReason                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnVerbStopped(class UQtnVerb* StoppedVerb, enum class EQtnStopReason StopReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnVerbStopped");

	Params::UQtnMentalSubState_OnVerbStopped_Params Parms{};

	Parms.StoppedVerb = StoppedVerb;
	Parms.StopReason = StopReason;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnVerbStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnVerb*                    StartedVerb                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnVerbStarted(class UQtnVerb* StartedVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnVerbStarted");

	Params::UQtnMentalSubState_OnVerbStarted_Params Parms{};

	Parms.StartedVerb = StartedVerb;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnTickMentalSubState
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              FDeltaSeconds                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnTickMentalSubState(float FDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnTickMentalSubState");

	Params::UQtnMentalSubState_OnTickMentalSubState_Params Parms{};

	Parms.FDeltaSeconds = FDeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnThinkMentalSubState
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              TimeSinceLastThought                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnThinkMentalSubState(float TimeSinceLastThought)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnThinkMentalSubState");

	Params::UQtnMentalSubState_OnThinkMentalSubState_Params Parms{};

	Parms.TimeSinceLastThought = TimeSinceLastThought;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnInitMentalSubState
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnMentalSubState::OnInitMentalSubState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnInitMentalSubState");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnMentalSubState.OnExitMentalSubState
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnMentalSubState>NextMentalSubStateClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnExitMentalSubState(TSubclassOf<class UQtnMentalSubState> NextMentalSubStateClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnExitMentalSubState");

	Params::UQtnMentalSubState_OnExitMentalSubState_Params Parms{};

	Parms.NextMentalSubStateClass = NextMentalSubStateClass;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnEnterMentalSubState
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnMentalSubState*          PreviousMentalSubState                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnEnterMentalSubState(class UQtnMentalSubState* PreviousMentalSubState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnEnterMentalSubState");

	Params::UQtnMentalSubState_OnEnterMentalSubState_Params Parms{};

	Parms.PreviousMentalSubState = PreviousMentalSubState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnDebugDisplay");

	Params::UQtnMentalSubState_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnMentalSubState.OnDamageApplied
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnMentalSubState::OnDamageApplied(struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactionInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubState", "OnDamageApplied");

	Params::UQtnMentalSubState_OnDamageApplied_Params Parms{};

	Parms.DamageInfo = DamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnMentalSubStateCombatBase
// (None)

class UClass* UQtnMentalSubStateCombatBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateCombatBase");

	return Clss;
}


// QtnMentalSubStateCombatBase QtnGame.Default__QtnMentalSubStateCombatBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateCombatBase* UQtnMentalSubStateCombatBase::GetDefaultObj()
{
	static class UQtnMentalSubStateCombatBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateCombatBase*>(UQtnMentalSubStateCombatBase::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateBackgroundTactics
// (None)

class UClass* UQtnMentalSubStateBackgroundTactics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateBackgroundTactics");

	return Clss;
}


// QtnMentalSubStateBackgroundTactics QtnGame.Default__QtnMentalSubStateBackgroundTactics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateBackgroundTactics* UQtnMentalSubStateBackgroundTactics::GetDefaultObj()
{
	static class UQtnMentalSubStateBackgroundTactics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateBackgroundTactics*>(UQtnMentalSubStateBackgroundTactics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateBTAmbient
// (None)

class UClass* UQtnMentalSubStateBTAmbient::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateBTAmbient");

	return Clss;
}


// QtnMentalSubStateBTAmbient QtnGame.Default__QtnMentalSubStateBTAmbient
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateBTAmbient* UQtnMentalSubStateBTAmbient::GetDefaultObj()
{
	static class UQtnMentalSubStateBTAmbient* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateBTAmbient*>(UQtnMentalSubStateBTAmbient::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateBTCombat
// (None)

class UClass* UQtnMentalSubStateBTCombat::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateBTCombat");

	return Clss;
}


// QtnMentalSubStateBTCombat QtnGame.Default__QtnMentalSubStateBTCombat
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateBTCombat* UQtnMentalSubStateBTCombat::GetDefaultObj()
{
	static class UQtnMentalSubStateBTCombat* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateBTCombat*>(UQtnMentalSubStateBTCombat::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMentalSubStateBTCombat.SetFavoriteAttackVerb
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        AttackVerbClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMentalSubStateBTCombat::SetFavoriteAttackVerb(TSubclassOf<class UQtnVerb> AttackVerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubStateBTCombat", "SetFavoriteAttackVerb");

	Params::UQtnMentalSubStateBTCombat_SetFavoriteAttackVerb_Params Parms{};

	Parms.AttackVerbClass = AttackVerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnMentalSubStateBTCombat.HasForegroundTicket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMentalSubStateBTCombat::HasForegroundTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubStateBTCombat", "HasForegroundTicket");

	Params::UQtnMentalSubStateBTCombat_HasForegroundTicket_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMentalSubStateBTCombat.HasAttackTicket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnMentalSubStateBTCombat::HasAttackTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMentalSubStateBTCombat", "HasAttackTicket");

	Params::UQtnMentalSubStateBTCombat_HasAttackTicket_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnMentalSubStateBTFrob
// (None)

class UClass* UQtnMentalSubStateBTFrob::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateBTFrob");

	return Clss;
}


// QtnMentalSubStateBTFrob QtnGame.Default__QtnMentalSubStateBTFrob
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateBTFrob* UQtnMentalSubStateBTFrob::GetDefaultObj()
{
	static class UQtnMentalSubStateBTFrob* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateBTFrob*>(UQtnMentalSubStateBTFrob::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateBTPawnAction
// (None)

class UClass* UQtnMentalSubStateBTPawnAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateBTPawnAction");

	return Clss;
}


// QtnMentalSubStateBTPawnAction QtnGame.Default__QtnMentalSubStateBTPawnAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateBTPawnAction* UQtnMentalSubStateBTPawnAction::GetDefaultObj()
{
	static class UQtnMentalSubStateBTPawnAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateBTPawnAction*>(UQtnMentalSubStateBTPawnAction::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateDormant
// (None)

class UClass* UQtnMentalSubStateDormant::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateDormant");

	return Clss;
}


// QtnMentalSubStateDormant QtnGame.Default__QtnMentalSubStateDormant
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateDormant* UQtnMentalSubStateDormant::GetDefaultObj()
{
	static class UQtnMentalSubStateDormant* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateDormant*>(UQtnMentalSubStateDormant::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateRangedTactics
// (None)

class UClass* UQtnMentalSubStateRangedTactics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateRangedTactics");

	return Clss;
}


// QtnMentalSubStateRangedTactics QtnGame.Default__QtnMentalSubStateRangedTactics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateRangedTactics* UQtnMentalSubStateRangedTactics::GetDefaultObj()
{
	static class UQtnMentalSubStateRangedTactics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateRangedTactics*>(UQtnMentalSubStateRangedTactics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateFleeTactics
// (None)

class UClass* UQtnMentalSubStateFleeTactics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateFleeTactics");

	return Clss;
}


// QtnMentalSubStateFleeTactics QtnGame.Default__QtnMentalSubStateFleeTactics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateFleeTactics* UQtnMentalSubStateFleeTactics::GetDefaultObj()
{
	static class UQtnMentalSubStateFleeTactics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateFleeTactics*>(UQtnMentalSubStateFleeTactics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateMeleeTactics
// (None)

class UClass* UQtnMentalSubStateMeleeTactics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateMeleeTactics");

	return Clss;
}


// QtnMentalSubStateMeleeTactics QtnGame.Default__QtnMentalSubStateMeleeTactics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateMeleeTactics* UQtnMentalSubStateMeleeTactics::GetDefaultObj()
{
	static class UQtnMentalSubStateMeleeTactics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateMeleeTactics*>(UQtnMentalSubStateMeleeTactics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateHealTactics
// (None)

class UClass* UQtnMentalSubStateHealTactics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateHealTactics");

	return Clss;
}


// QtnMentalSubStateHealTactics QtnGame.Default__QtnMentalSubStateHealTactics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateHealTactics* UQtnMentalSubStateHealTactics::GetDefaultObj()
{
	static class UQtnMentalSubStateHealTactics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateHealTactics*>(UQtnMentalSubStateHealTactics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateReviveTactics
// (None)

class UClass* UQtnMentalSubStateReviveTactics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateReviveTactics");

	return Clss;
}


// QtnMentalSubStateReviveTactics QtnGame.Default__QtnMentalSubStateReviveTactics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateReviveTactics* UQtnMentalSubStateReviveTactics::GetDefaultObj()
{
	static class UQtnMentalSubStateReviveTactics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateReviveTactics*>(UQtnMentalSubStateReviveTactics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateScriptedAction
// (None)

class UClass* UQtnMentalSubStateScriptedAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateScriptedAction");

	return Clss;
}


// QtnMentalSubStateScriptedAction QtnGame.Default__QtnMentalSubStateScriptedAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateScriptedAction* UQtnMentalSubStateScriptedAction::GetDefaultObj()
{
	static class UQtnMentalSubStateScriptedAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateScriptedAction*>(UQtnMentalSubStateScriptedAction::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnMentalSubStateSerpentine
// (None)

class UClass* UQtnMentalSubStateSerpentine::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMentalSubStateSerpentine");

	return Clss;
}


// QtnMentalSubStateSerpentine QtnGame.Default__QtnMentalSubStateSerpentine
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMentalSubStateSerpentine* UQtnMentalSubStateSerpentine::GetDefaultObj()
{
	static class UQtnMentalSubStateSerpentine* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMentalSubStateSerpentine*>(UQtnMentalSubStateSerpentine::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNarrativeDataBag
// (None)

class UClass* UQtnNarrativeDataBag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNarrativeDataBag");

	return Clss;
}


// QtnNarrativeDataBag QtnGame.Default__QtnNarrativeDataBag
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNarrativeDataBag* UQtnNarrativeDataBag::GetDefaultObj()
{
	static class UQtnNarrativeDataBag* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNarrativeDataBag*>(UQtnNarrativeDataBag::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnNarrativeDataBag.UnlockSpecificElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnNarrativeThread>NarrativeThreadArchetype                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnNarrativeElement>NarrativeElementArchetype                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnNarrativeDataBag::UnlockSpecificElement(TSubclassOf<class UQtnNarrativeThread> NarrativeThreadArchetype, TSubclassOf<class UQtnNarrativeElement> NarrativeElementArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "UnlockSpecificElement");

	Params::UQtnNarrativeDataBag_UnlockSpecificElement_Params Parms{};

	Parms.NarrativeThreadArchetype = NarrativeThreadArchetype;
	Parms.NarrativeElementArchetype = NarrativeElementArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNarrativeDataBag.UnlockNextElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnNarrativeThread>NarrativeThreadArchetype                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnNarrativeElement*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnNarrativeElement* UQtnNarrativeDataBag::UnlockNextElement(TSubclassOf<class UQtnNarrativeThread> NarrativeThreadArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "UnlockNextElement");

	Params::UQtnNarrativeDataBag_UnlockNextElement_Params Parms{};

	Parms.NarrativeThreadArchetype = NarrativeThreadArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNarrativeDataBag.ResetNarrativeThread
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnNarrativeThread>NarrativeThreadArchetype                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnNarrativeDataBag::ResetNarrativeThread(TSubclassOf<class UQtnNarrativeThread> NarrativeThreadArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "ResetNarrativeThread");

	Params::UQtnNarrativeDataBag_ResetNarrativeThread_Params Parms{};

	Parms.NarrativeThreadArchetype = NarrativeThreadArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnNarrativeDataBag.ResetAllNarrativeThreads
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnNarrativeDataBag::ResetAllNarrativeThreads()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "ResetAllNarrativeThreads");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnNarrativeDataBag.MarkElementAsPresented
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnNarrativeThread>NarrativeThreadArchetype                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnNarrativeElement>NarrativeElementArchetype                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WantPresented                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnNarrativeDataBag::MarkElementAsPresented(TSubclassOf<class UQtnNarrativeThread> NarrativeThreadArchetype, TSubclassOf<class UQtnNarrativeElement> NarrativeElementArchetype, bool WantPresented)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "MarkElementAsPresented");

	Params::UQtnNarrativeDataBag_MarkElementAsPresented_Params Parms{};

	Parms.NarrativeThreadArchetype = NarrativeThreadArchetype;
	Parms.NarrativeElementArchetype = NarrativeElementArchetype;
	Parms.WantPresented = WantPresented;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnNarrativeDataBag.HasElementBeenPresented
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnNarrativeThread>NarrativeThreadArchetype                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnNarrativeElement>NarrativeElementArchetype                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnNarrativeDataBag::HasElementBeenPresented(TSubclassOf<class UQtnNarrativeThread> NarrativeThreadArchetype, TSubclassOf<class UQtnNarrativeElement> NarrativeElementArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "HasElementBeenPresented");

	Params::UQtnNarrativeDataBag_HasElementBeenPresented_Params Parms{};

	Parms.NarrativeThreadArchetype = NarrativeThreadArchetype;
	Parms.NarrativeElementArchetype = NarrativeElementArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNarrativeDataBag.GetNextElement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnNarrativeThread>NarrativeThreadArchetype                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnNarrativeElement*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnNarrativeElement* UQtnNarrativeDataBag::GetNextElement(TSubclassOf<class UQtnNarrativeThread> NarrativeThreadArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "GetNextElement");

	Params::UQtnNarrativeDataBag_GetNextElement_Params Parms{};

	Parms.NarrativeThreadArchetype = NarrativeThreadArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNarrativeDataBag.BuildListOfUnlockedNarrativeElements
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnNarrativeThread>NarrativeThreadArchetype                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnNarrativeElementInfo>UnlockedNarrativeElementInfo                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnNarrativeDataBag::BuildListOfUnlockedNarrativeElements(TSubclassOf<class UQtnNarrativeThread> NarrativeThreadArchetype, TArray<struct FQtnNarrativeElementInfo>* UnlockedNarrativeElementInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "BuildListOfUnlockedNarrativeElements");

	Params::UQtnNarrativeDataBag_BuildListOfUnlockedNarrativeElements_Params Parms{};

	Parms.NarrativeThreadArchetype = NarrativeThreadArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (UnlockedNarrativeElementInfo != nullptr)
		*UnlockedNarrativeElementInfo = std::move(Parms.UnlockedNarrativeElementInfo);

}


// Function QtnGame.QtnNarrativeDataBag.BuildListOfKnownNarrativeThreads
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnNarrativeThread*> KnownNarrativeThreads                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnNarrativeDataBag::BuildListOfKnownNarrativeThreads(TArray<class UQtnNarrativeThread*>* KnownNarrativeThreads)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeDataBag", "BuildListOfKnownNarrativeThreads");

	Params::UQtnNarrativeDataBag_BuildListOfKnownNarrativeThreads_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (KnownNarrativeThreads != nullptr)
		*KnownNarrativeThreads = std::move(Parms.KnownNarrativeThreads);

}


// Class QtnGame.QtnNarrativeElement
// (None)

class UClass* UQtnNarrativeElement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNarrativeElement");

	return Clss;
}


// QtnNarrativeElement QtnGame.Default__QtnNarrativeElement
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNarrativeElement* UQtnNarrativeElement::GetDefaultObj()
{
	static class UQtnNarrativeElement* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNarrativeElement*>(UQtnNarrativeElement::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnNarrativeElement.GetDefaultNarrativeElement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnNarrativeElement>NarrativeElementArchetype                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnNarrativeElement*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnNarrativeElement* UQtnNarrativeElement::GetDefaultNarrativeElement(TSubclassOf<class UQtnNarrativeElement> NarrativeElementArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNarrativeElement", "GetDefaultNarrativeElement");

	Params::UQtnNarrativeElement_GetDefaultNarrativeElement_Params Parms{};

	Parms.NarrativeElementArchetype = NarrativeElementArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnNarrativeThread
// (None)

class UClass* UQtnNarrativeThread::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNarrativeThread");

	return Clss;
}


// QtnNarrativeThread QtnGame.Default__QtnNarrativeThread
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNarrativeThread* UQtnNarrativeThread::GetDefaultObj()
{
	static class UQtnNarrativeThread* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNarrativeThread*>(UQtnNarrativeThread::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavArea
// (None)

class UClass* UQtnNavArea::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavArea");

	return Clss;
}


// QtnNavArea QtnGame.Default__QtnNavArea
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavArea* UQtnNavArea::GetDefaultObj()
{
	static class UQtnNavArea* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavArea*>(UQtnNavArea::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavArea_Mantle
// (None)

class UClass* UQtnNavArea_Mantle::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavArea_Mantle");

	return Clss;
}


// QtnNavArea_Mantle QtnGame.Default__QtnNavArea_Mantle
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavArea_Mantle* UQtnNavArea_Mantle::GetDefaultObj()
{
	static class UQtnNavArea_Mantle* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavArea_Mantle*>(UQtnNavArea_Mantle::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavFilter_NoMantling
// (None)

class UClass* UQtnNavFilter_NoMantling::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavFilter_NoMantling");

	return Clss;
}


// QtnNavFilter_NoMantling QtnGame.Default__QtnNavFilter_NoMantling
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavFilter_NoMantling* UQtnNavFilter_NoMantling::GetDefaultObj()
{
	static class UQtnNavFilter_NoMantling* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavFilter_NoMantling*>(UQtnNavFilter_NoMantling::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavHelperInterface
// (None)

class UClass* IQtnNavHelperInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavHelperInterface");

	return Clss;
}


// QtnNavHelperInterface QtnGame.Default__QtnNavHelperInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnNavHelperInterface* IQtnNavHelperInterface::GetDefaultObj()
{
	static class IQtnNavHelperInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnNavHelperInterface*>(IQtnNavHelperInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnNavHelperInterface.GetNavLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IQtnNavHelperInterface::GetNavLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavHelperInterface", "GetNavLocation");

	Params::IQtnNavHelperInterface_GetNavLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnNavigationSystem
// (None)

class UClass* UQtnNavigationSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavigationSystem");

	return Clss;
}


// QtnNavigationSystem QtnGame.Default__QtnNavigationSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavigationSystem* UQtnNavigationSystem::GetDefaultObj()
{
	static class UQtnNavigationSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavigationSystem*>(UQtnNavigationSystem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnNavigationSystem.QtnIsNavMeshReadyToUse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnNavigationSystem::QtnIsNavMeshReadyToUse(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavigationSystem", "QtnIsNavMeshReadyToUse");

	Params::UQtnNavigationSystem_QtnIsNavMeshReadyToUse_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNavigationSystem.QtnHasPath
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PathStart                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PathEnd                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartProjectionExtent                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndProjectionExtent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxSearchNodes                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowPartialPaths                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnNavigationSystem::QtnHasPath(class AActor* QueryingActor, const struct FVector& PathStart, const struct FVector& PathEnd, const struct FVector& StartProjectionExtent, const struct FVector& EndProjectionExtent, TSubclassOf<class UNavigationQueryFilter> FilterClass, int32 MaxSearchNodes, bool AllowPartialPaths)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavigationSystem", "QtnHasPath");

	Params::UQtnNavigationSystem_QtnHasPath_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.PathStart = PathStart;
	Parms.PathEnd = PathEnd;
	Parms.StartProjectionExtent = StartProjectionExtent;
	Parms.EndProjectionExtent = EndProjectionExtent;
	Parms.FilterClass = FilterClass;
	Parms.MaxSearchNodes = MaxSearchNodes;
	Parms.AllowPartialPaths = AllowPartialPaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNavigationSystem.QtnGetRandomReachablePoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               FoundRandomReachablePoint                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartProjectionExtent                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreReachability                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnNavigationSystem::QtnGetRandomReachablePoint(bool* FoundRandomReachablePoint, class AActor* QueryingActor, const struct FVector& Origin, float Radius, const struct FVector& StartProjectionExtent, bool IgnoreReachability)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavigationSystem", "QtnGetRandomReachablePoint");

	Params::UQtnNavigationSystem_QtnGetRandomReachablePoint_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.Origin = Origin;
	Parms.Radius = Radius;
	Parms.StartProjectionExtent = StartProjectionExtent;
	Parms.IgnoreReachability = IgnoreReachability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundRandomReachablePoint != nullptr)
		*FoundRandomReachablePoint = Parms.FoundRandomReachablePoint;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNavigationSystem.QtnGetPointOnNavMesh
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// bool                               FoundPoint                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OriginalLocation                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectionExtent                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnNavigationSystem::QtnGetPointOnNavMesh(bool* FoundPoint, class AActor* QueryingActor, const struct FVector& OriginalLocation, const struct FVector& ProjectionExtent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavigationSystem", "QtnGetPointOnNavMesh");

	Params::UQtnNavigationSystem_QtnGetPointOnNavMesh_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.OriginalLocation = OriginalLocation;
	Parms.ProjectionExtent = ProjectionExtent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundPoint != nullptr)
		*FoundPoint = Parms.FoundPoint;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNavigationSystem.QtnFindPathSynchronously
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PathStart                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PathEnd                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartProjectionExtent                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndProjectionExtent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxSearchNodes                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowPartialPaths                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNavigationPath*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNavigationPath* UQtnNavigationSystem::QtnFindPathSynchronously(class AActor* QueryingActor, const struct FVector& PathStart, const struct FVector& PathEnd, const struct FVector& StartProjectionExtent, const struct FVector& EndProjectionExtent, TSubclassOf<class UNavigationQueryFilter> FilterClass, int32 MaxSearchNodes, bool AllowPartialPaths)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavigationSystem", "QtnFindPathSynchronously");

	Params::UQtnNavigationSystem_QtnFindPathSynchronously_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.PathStart = PathStart;
	Parms.PathEnd = PathEnd;
	Parms.StartProjectionExtent = StartProjectionExtent;
	Parms.EndProjectionExtent = EndProjectionExtent;
	Parms.FilterClass = FilterClass;
	Parms.MaxSearchNodes = MaxSearchNodes;
	Parms.AllowPartialPaths = AllowPartialPaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnNavigationSystem.QtnFindPathAsynchronously
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UNavigationPath*             PathResult                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PathStart                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PathEnd                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StartProjectionExtent                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndProjectionExtent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxSearchNodes                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowPartialPaths                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnNavigationSystem::QtnFindPathAsynchronously(class AActor* QueryingActor, const struct FLatentActionInfo& LatentInfo, class UNavigationPath** PathResult, struct FVector& PathStart, struct FVector& PathEnd, const struct FVector& StartProjectionExtent, const struct FVector& EndProjectionExtent, int32 MaxSearchNodes, bool AllowPartialPaths)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavigationSystem", "QtnFindPathAsynchronously");

	Params::UQtnNavigationSystem_QtnFindPathAsynchronously_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.LatentInfo = LatentInfo;
	Parms.PathStart = PathStart;
	Parms.PathEnd = PathEnd;
	Parms.StartProjectionExtent = StartProjectionExtent;
	Parms.EndProjectionExtent = EndProjectionExtent;
	Parms.MaxSearchNodes = MaxSearchNodes;
	Parms.AllowPartialPaths = AllowPartialPaths;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PathResult != nullptr)
		*PathResult = Parms.PathResult;

}


// Function QtnGame.QtnNavigationSystem.IsOnNavMesh
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectionExtent                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnNavigationSystem::IsOnNavMesh(class AActor* QueryingActor, const struct FVector& Location, float Radius, const struct FVector& ProjectionExtent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavigationSystem", "IsOnNavMesh");

	Params::UQtnNavigationSystem_IsOnNavMesh_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.Location = Location;
	Parms.Radius = Radius;
	Parms.ProjectionExtent = ProjectionExtent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnNavigationSystemModuleConfig
// (None)

class UClass* UQtnNavigationSystemModuleConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavigationSystemModuleConfig");

	return Clss;
}


// QtnNavigationSystemModuleConfig QtnGame.Default__QtnNavigationSystemModuleConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavigationSystemModuleConfig* UQtnNavigationSystemModuleConfig::GetDefaultObj()
{
	static class UQtnNavigationSystemModuleConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavigationSystemModuleConfig*>(UQtnNavigationSystemModuleConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavLinkCustomComponent
// (None)

class UClass* UQtnNavLinkCustomComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavLinkCustomComponent");

	return Clss;
}


// QtnNavLinkCustomComponent QtnGame.Default__QtnNavLinkCustomComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavLinkCustomComponent* UQtnNavLinkCustomComponent::GetDefaultObj()
{
	static class UQtnNavLinkCustomComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavLinkCustomComponent*>(UQtnNavLinkCustomComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnNavLinkCustomComponent.SetNavLinkEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bEnabled                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnNavLinkCustomComponent::SetNavLinkEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavLinkCustomComponent", "SetNavLinkEnabled");

	Params::UQtnNavLinkCustomComponent_SetNavLinkEnabled_Params Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnNavLinkCustomComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnNavLinkCustomComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavLinkCustomComponent", "OnDebugDisplay");

	Params::UQtnNavLinkCustomComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnNavLinkCustomComponent.IsNavLinkEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnNavLinkCustomComponent::IsNavLinkEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnNavLinkCustomComponent", "IsNavLinkEnabled");

	Params::UQtnNavLinkCustomComponent_IsNavLinkEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnNavLinkBounceComponent
// (None)

class UClass* UQtnNavLinkBounceComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavLinkBounceComponent");

	return Clss;
}


// QtnNavLinkBounceComponent QtnGame.Default__QtnNavLinkBounceComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavLinkBounceComponent* UQtnNavLinkBounceComponent::GetDefaultObj()
{
	static class UQtnNavLinkBounceComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavLinkBounceComponent*>(UQtnNavLinkBounceComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavLinkCustomProxy
// (Actor)

class UClass* AQtnNavLinkCustomProxy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavLinkCustomProxy");

	return Clss;
}


// QtnNavLinkCustomProxy QtnGame.Default__QtnNavLinkCustomProxy
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnNavLinkCustomProxy* AQtnNavLinkCustomProxy::GetDefaultObj()
{
	static class AQtnNavLinkCustomProxy* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnNavLinkCustomProxy*>(AQtnNavLinkCustomProxy::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavLinkDoorComponent
// (None)

class UClass* UQtnNavLinkDoorComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavLinkDoorComponent");

	return Clss;
}


// QtnNavLinkDoorComponent QtnGame.Default__QtnNavLinkDoorComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavLinkDoorComponent* UQtnNavLinkDoorComponent::GetDefaultObj()
{
	static class UQtnNavLinkDoorComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavLinkDoorComponent*>(UQtnNavLinkDoorComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavLinkMantleComponent
// (None)

class UClass* UQtnNavLinkMantleComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavLinkMantleComponent");

	return Clss;
}


// QtnNavLinkMantleComponent QtnGame.Default__QtnNavLinkMantleComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNavLinkMantleComponent* UQtnNavLinkMantleComponent::GetDefaultObj()
{
	static class UQtnNavLinkMantleComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNavLinkMantleComponent*>(UQtnNavLinkMantleComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNavLinkMantleProxy
// (Actor)

class UClass* AQtnNavLinkMantleProxy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNavLinkMantleProxy");

	return Clss;
}


// QtnNavLinkMantleProxy QtnGame.Default__QtnNavLinkMantleProxy
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnNavLinkMantleProxy* AQtnNavLinkMantleProxy::GetDefaultObj()
{
	static class AQtnNavLinkMantleProxy* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnNavLinkMantleProxy*>(AQtnNavLinkMantleProxy::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNewKidAnimInstance
// (None)

class UClass* UQtnNewKidAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNewKidAnimInstance");

	return Clss;
}


// QtnNewKidAnimInstance QtnGame.Default__QtnNewKidAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNewKidAnimInstance* UQtnNewKidAnimInstance::GetDefaultObj()
{
	static class UQtnNewKidAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNewKidAnimInstance*>(UQtnNewKidAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnNintendoSwitchConfig
// (None)

class UClass* UQtnNintendoSwitchConfig::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnNintendoSwitchConfig");

	return Clss;
}


// QtnNintendoSwitchConfig QtnGame.Default__QtnNintendoSwitchConfig
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnNintendoSwitchConfig* UQtnNintendoSwitchConfig::GetDefaultObj()
{
	static class UQtnNintendoSwitchConfig* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnNintendoSwitchConfig*>(UQtnNintendoSwitchConfig::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOnlineErrorCodeLibrary
// (None)

class UClass* UQtnOnlineErrorCodeLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOnlineErrorCodeLibrary");

	return Clss;
}


// QtnOnlineErrorCodeLibrary QtnGame.Default__QtnOnlineErrorCodeLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOnlineErrorCodeLibrary* UQtnOnlineErrorCodeLibrary::GetDefaultObj()
{
	static class UQtnOnlineErrorCodeLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOnlineErrorCodeLibrary*>(UQtnOnlineErrorCodeLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnOnlineErrorCodeLibrary.Conv_OnlineErrorToText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnOnlineErrorCode         Error                                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnOnlineErrorCodeLibrary::Conv_OnlineErrorToText(const struct FQtnOnlineErrorCode& Error)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineErrorCodeLibrary", "Conv_OnlineErrorToText");

	Params::UQtnOnlineErrorCodeLibrary_Conv_OnlineErrorToText_Params Parms{};

	Parms.Error = Error;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnOnlineIdentityProxy
// (None)

class UClass* UQtnOnlineIdentityProxy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOnlineIdentityProxy");

	return Clss;
}


// QtnOnlineIdentityProxy QtnGame.Default__QtnOnlineIdentityProxy
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOnlineIdentityProxy* UQtnOnlineIdentityProxy::GetDefaultObj()
{
	static class UQtnOnlineIdentityProxy* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOnlineIdentityProxy*>(UQtnOnlineIdentityProxy::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOnlineManager
// (None)

class UClass* UQtnOnlineManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOnlineManager");

	return Clss;
}


// QtnOnlineManager QtnGame.Default__QtnOnlineManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOnlineManager* UQtnOnlineManager::GetDefaultObj()
{
	static class UQtnOnlineManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOnlineManager*>(UQtnOnlineManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnOnlineManager.UpdateHostSessionGameModeMode_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnGameModeType        GameMode                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnOnlineManager::UpdateHostSessionGameModeMode_ServerOnly(enum class EQtnGameModeType GameMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "UpdateHostSessionGameModeMode_ServerOnly");

	Params::UQtnOnlineManager_UpdateHostSessionGameModeMode_ServerOnly_Params Parms{};

	Parms.GameMode = GameMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineManager.UpdateHostSession_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnGameModeType        GameMode                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxUnlockedArc                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentArc                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnDifficulty          Difficulty                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnOnlineManager::UpdateHostSession_ServerOnly(enum class EQtnGameModeType GameMode, int32 MaxUnlockedArc, int32 CurrentArc, enum class EQtnDifficulty Difficulty)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "UpdateHostSession_ServerOnly");

	Params::UQtnOnlineManager_UpdateHostSession_ServerOnly_Params Parms{};

	Parms.GameMode = GameMode;
	Parms.MaxUnlockedArc = MaxUnlockedArc;
	Parms.CurrentArc = CurrentArc;
	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineManager.StartMatchmaking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsLan                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnGameModeType        GameMode                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxUnlockedArc                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentArc                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnDifficulty          Difficulty                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AvoidSpoilers                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 OnComplete                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnOnlineManager::StartMatchmaking(bool bIsLan, enum class EQtnGameModeType GameMode, int32 MaxUnlockedArc, int32 CurrentArc, enum class EQtnDifficulty Difficulty, bool AvoidSpoilers, FDelegateProperty_ OnComplete)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "StartMatchmaking");

	Params::UQtnOnlineManager_StartMatchmaking_Params Parms{};

	Parms.bIsLan = bIsLan;
	Parms.GameMode = GameMode;
	Parms.MaxUnlockedArc = MaxUnlockedArc;
	Parms.CurrentArc = CurrentArc;
	Parms.Difficulty = Difficulty;
	Parms.AvoidSpoilers = AvoidSpoilers;
	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineManager.MatchmakingWaitingConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// FDelegateProperty_                 OnComplete                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnOnlineManager::MatchmakingWaitingConnection(FDelegateProperty_ OnComplete)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "MatchmakingWaitingConnection");

	Params::UQtnOnlineManager_MatchmakingWaitingConnection_Params Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineManager.MacthmakingWaitingDetermineHost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// FDelegateProperty_                 OnComplete                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnOnlineManager::MacthmakingWaitingDetermineHost(FDelegateProperty_ OnComplete)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "MacthmakingWaitingDetermineHost");

	Params::UQtnOnlineManager_MacthmakingWaitingDetermineHost_Params Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineManager.IsPlayFabPartyReady
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnOnlineManager::IsPlayFabPartyReady()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "IsPlayFabPartyReady");

	Params::UQtnOnlineManager_IsPlayFabPartyReady_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineManager.IsNetworkConnected
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnOnlineManager::IsNetworkConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "IsNetworkConnected");

	Params::UQtnOnlineManager_IsNetworkConnected_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineManager.HandleOnSessionChanged
// (Final, Native, Public)
// Parameters:
// enum class EQtnSessionState        NewSessionState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnSessionPrivacy      Privacy                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsLan                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnOnlineManager::HandleOnSessionChanged(enum class EQtnSessionState NewSessionState, enum class EQtnSessionPrivacy Privacy, bool bIsLan)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "HandleOnSessionChanged");

	Params::UQtnOnlineManager_HandleOnSessionChanged_Params Parms{};

	Parms.NewSessionState = NewSessionState;
	Parms.Privacy = Privacy;
	Parms.bIsLan = bIsLan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineManager.GetMatchmakingState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EOnlineMangerMatchmakingStateReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EOnlineMangerMatchmakingState UQtnOnlineManager::GetMatchmakingState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "GetMatchmakingState");

	Params::UQtnOnlineManager_GetMatchmakingState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineManager.CancelMatchmaking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// FDelegateProperty_                 OnComplete                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnOnlineManager::CancelMatchmaking(FDelegateProperty_ OnComplete)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineManager", "CancelMatchmaking");

	Params::UQtnOnlineManager_CancelMatchmaking_Params Parms{};

	Parms.OnComplete = OnComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnOnlineNodes
// (None)

class UClass* UQtnOnlineNodes::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOnlineNodes");

	return Clss;
}


// QtnOnlineNodes QtnGame.Default__QtnOnlineNodes
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOnlineNodes* UQtnOnlineNodes::GetDefaultObj()
{
	static class UQtnOnlineNodes* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOnlineNodes*>(UQtnOnlineNodes::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnOnlineNodes.QtnIsLanSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnOnlineNodes::QtnIsLanSession(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnIsLanSession");

	Params::UQtnOnlineNodes_QtnIsLanSession_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineNodes.QtnGetSessionState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnSessionState        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnSessionState UQtnOnlineNodes::QtnGetSessionState(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnGetSessionState");

	Params::UQtnOnlineNodes_QtnGetSessionState_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineNodes.QtnGetSessionPrivacy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnSessionPrivacy      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnSessionPrivacy UQtnOnlineNodes::QtnGetSessionPrivacy(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnGetSessionPrivacy");

	Params::UQtnOnlineNodes_QtnGetSessionPrivacy_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOnlineNodes.QtnClearOnSessionStateChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 OnChanged                                                        (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UQtnOnlineNodes::QtnClearOnSessionStateChanged(class UObject* WorldContextObject, FDelegateProperty_ OnChanged)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnClearOnSessionStateChanged");

	Params::UQtnOnlineNodes_QtnClearOnSessionStateChanged_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OnChanged = OnChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineNodes.QtnClearOnInviteAcceptedByExternalUi
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 OnAccepted                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UQtnOnlineNodes::QtnClearOnInviteAcceptedByExternalUi(class UObject* WorldContextObject, FDelegateProperty_ OnAccepted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnClearOnInviteAcceptedByExternalUi");

	Params::UQtnOnlineNodes_QtnClearOnInviteAcceptedByExternalUi_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OnAccepted = OnAccepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineNodes.QtnClearOnInviteAccepted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 OnAccepted                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UQtnOnlineNodes::QtnClearOnInviteAccepted(class UObject* WorldContextObject, FDelegateProperty_ OnAccepted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnClearOnInviteAccepted");

	Params::UQtnOnlineNodes_QtnClearOnInviteAccepted_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OnAccepted = OnAccepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineNodes.QtnBindOnSessionStateChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 OnChanged                                                        (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UQtnOnlineNodes::QtnBindOnSessionStateChanged(class UObject* WorldContextObject, FDelegateProperty_ OnChanged)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnBindOnSessionStateChanged");

	Params::UQtnOnlineNodes_QtnBindOnSessionStateChanged_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OnChanged = OnChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineNodes.QtnBindOnInviteAcceptedByExternalUi
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 OnAccepted                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UQtnOnlineNodes::QtnBindOnInviteAcceptedByExternalUi(class UObject* WorldContextObject, FDelegateProperty_ OnAccepted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnBindOnInviteAcceptedByExternalUi");

	Params::UQtnOnlineNodes_QtnBindOnInviteAcceptedByExternalUi_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OnAccepted = OnAccepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOnlineNodes.QtnBindOnInviteAccepted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 OnAccepted                                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UQtnOnlineNodes::QtnBindOnInviteAccepted(class UObject* WorldContextObject, FDelegateProperty_ OnAccepted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineNodes", "QtnBindOnInviteAccepted");

	Params::UQtnOnlineNodes_QtnBindOnInviteAccepted_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OnAccepted = OnAccepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnHostParty
// (None)

class UClass* UQtnHostParty::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnHostParty");

	return Clss;
}


// QtnHostParty QtnGame.Default__QtnHostParty
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnHostParty* UQtnHostParty::GetDefaultObj()
{
	static class UQtnHostParty* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnHostParty*>(UQtnHostParty::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnHostParty.QtnHostParty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnSessionPrivacy      Privacy                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bLan                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxArc                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentArc                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnDifficulty          Difficulty                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnGameModeType        IsHordeMode                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnHostParty*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnHostParty* UQtnHostParty::QtnHostParty(class UObject* WorldContextObject, enum class EQtnSessionPrivacy Privacy, bool bLan, int32 MaxArc, int32 CurrentArc, enum class EQtnDifficulty Difficulty, enum class EQtnGameModeType IsHordeMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHostParty", "QtnHostParty");

	Params::UQtnHostParty_QtnHostParty_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Privacy = Privacy;
	Parms.bLan = bLan;
	Parms.MaxArc = MaxArc;
	Parms.CurrentArc = CurrentArc;
	Parms.Difficulty = Difficulty;
	Parms.IsHordeMode = IsHordeMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnHostParty.OnComplete
// (Final, Native, Private)
// Parameters:
// enum class EQtnSessionPrivacy      NewPrivacy                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnHostPartyResult     Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnOnlineErrorCode         ErrorCode                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnHostParty::OnComplete(enum class EQtnSessionPrivacy NewPrivacy, enum class EQtnHostPartyResult Result, const struct FQtnOnlineErrorCode& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnHostParty", "OnComplete");

	Params::UQtnHostParty_OnComplete_Params Parms{};

	Parms.NewPrivacy = NewPrivacy;
	Parms.Result = Result;
	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnJoinParty
// (None)

class UClass* UQtnJoinParty::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnJoinParty");

	return Clss;
}


// QtnJoinParty QtnGame.Default__QtnJoinParty
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnJoinParty* UQtnJoinParty::GetDefaultObj()
{
	static class UQtnJoinParty* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnJoinParty*>(UQtnJoinParty::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnJoinParty.QtnJoinParty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsLan                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnGameModeType        GameMode                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxArc                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentArc                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnDifficulty          Difficulty                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AvoidSpoilers                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowsHordeMode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnJoinParty*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnJoinParty* UQtnJoinParty::QtnJoinParty(class UObject* WorldContextObject, bool bIsLan, enum class EQtnGameModeType GameMode, int32 MaxArc, int32 CurrentArc, enum class EQtnDifficulty Difficulty, bool AvoidSpoilers, bool AllowsHordeMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJoinParty", "QtnJoinParty");

	Params::UQtnJoinParty_QtnJoinParty_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsLan = bIsLan;
	Parms.GameMode = GameMode;
	Parms.MaxArc = MaxArc;
	Parms.CurrentArc = CurrentArc;
	Parms.Difficulty = Difficulty;
	Parms.AvoidSpoilers = AvoidSpoilers;
	Parms.AllowsHordeMode = AllowsHordeMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnJoinParty.OnComplete
// (Final, Native, Private)
// Parameters:
// enum class EQtnJoinPartyResult     Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnOnlineErrorCode         ErrorCode                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnJoinParty::OnComplete(enum class EQtnJoinPartyResult Result, const struct FQtnOnlineErrorCode& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnJoinParty", "OnComplete");

	Params::UQtnJoinParty_OnComplete_Params Parms{};

	Parms.Result = Result;
	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnDisbandParty
// (None)

class UClass* UQtnDisbandParty::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnDisbandParty");

	return Clss;
}


// QtnDisbandParty QtnGame.Default__QtnDisbandParty
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnDisbandParty* UQtnDisbandParty::GetDefaultObj()
{
	static class UQtnDisbandParty* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnDisbandParty*>(UQtnDisbandParty::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnDisbandParty.QtnDisbandParty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDisbandParty*            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDisbandParty* UQtnDisbandParty::QtnDisbandParty(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDisbandParty", "QtnDisbandParty");

	Params::UQtnDisbandParty_QtnDisbandParty_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnDisbandParty.OnComplete
// (Final, Native, Private)
// Parameters:
// enum class EQtnDisbandPartyResult  Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnDisbandParty::OnComplete(enum class EQtnDisbandPartyResult Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnDisbandParty", "OnComplete");

	Params::UQtnDisbandParty_OnComplete_Params Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnStartMatchmaking
// (None)

class UClass* UQtnStartMatchmaking::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnStartMatchmaking");

	return Clss;
}


// QtnStartMatchmaking QtnGame.Default__QtnStartMatchmaking
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnStartMatchmaking* UQtnStartMatchmaking::GetDefaultObj()
{
	static class UQtnStartMatchmaking* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnStartMatchmaking*>(UQtnStartMatchmaking::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnStartMatchmaking.QtnStartMatchmaking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsLan                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnGameModeType        GameMode                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxArc                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentArc                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnDifficulty          Difficulty                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AvoidSpoilers                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnStartMatchmaking*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnStartMatchmaking* UQtnStartMatchmaking::QtnStartMatchmaking(class UObject* WorldContextObject, bool bIsLan, enum class EQtnGameModeType GameMode, int32 MaxArc, int32 CurrentArc, enum class EQtnDifficulty Difficulty, bool AvoidSpoilers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStartMatchmaking", "QtnStartMatchmaking");

	Params::UQtnStartMatchmaking_QtnStartMatchmaking_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIsLan = bIsLan;
	Parms.GameMode = GameMode;
	Parms.MaxArc = MaxArc;
	Parms.CurrentArc = CurrentArc;
	Parms.Difficulty = Difficulty;
	Parms.AvoidSpoilers = AvoidSpoilers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStartMatchmaking.OnComplete
// (Final, Native, Private)
// Parameters:
// enum class EQtnMatchmakingResult   Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PendingConnectionsNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStartMatchmaking::OnComplete(enum class EQtnMatchmakingResult Result, int32 PendingConnectionsNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStartMatchmaking", "OnComplete");

	Params::UQtnStartMatchmaking_OnComplete_Params Parms{};

	Parms.Result = Result;
	Parms.PendingConnectionsNum = PendingConnectionsNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnCancelMatchmaking
// (None)

class UClass* UQtnCancelMatchmaking::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnCancelMatchmaking");

	return Clss;
}


// QtnCancelMatchmaking QtnGame.Default__QtnCancelMatchmaking
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnCancelMatchmaking* UQtnCancelMatchmaking::GetDefaultObj()
{
	static class UQtnCancelMatchmaking* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnCancelMatchmaking*>(UQtnCancelMatchmaking::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnCancelMatchmaking.QtnCancelMatchmaking
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnCancelMatchmaking*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnCancelMatchmaking* UQtnCancelMatchmaking::QtnCancelMatchmaking(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCancelMatchmaking", "QtnCancelMatchmaking");

	Params::UQtnCancelMatchmaking_QtnCancelMatchmaking_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnCancelMatchmaking.OnComplete
// (Final, Native, Private)
// Parameters:
// enum class EQtnMatchmakingResult   Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnCancelMatchmaking::OnComplete(enum class EQtnMatchmakingResult Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnCancelMatchmaking", "OnComplete");

	Params::UQtnCancelMatchmaking_OnComplete_Params Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnMatchmakingWaitingConnection
// (None)

class UClass* UQtnMatchmakingWaitingConnection::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMatchmakingWaitingConnection");

	return Clss;
}


// QtnMatchmakingWaitingConnection QtnGame.Default__QtnMatchmakingWaitingConnection
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMatchmakingWaitingConnection* UQtnMatchmakingWaitingConnection::GetDefaultObj()
{
	static class UQtnMatchmakingWaitingConnection* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMatchmakingWaitingConnection*>(UQtnMatchmakingWaitingConnection::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMatchmakingWaitingConnection.QtnMatchmakingWaitingConntection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnMatchmakingWaitingConnection*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnMatchmakingWaitingConnection* UQtnMatchmakingWaitingConnection::QtnMatchmakingWaitingConntection(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMatchmakingWaitingConnection", "QtnMatchmakingWaitingConntection");

	Params::UQtnMatchmakingWaitingConnection_QtnMatchmakingWaitingConntection_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMatchmakingWaitingConnection.OnComplete
// (Final, Native, Private)
// Parameters:
// enum class EQtnMatchmakingResult   Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMatchmakingWaitingConnection::OnComplete(enum class EQtnMatchmakingResult Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMatchmakingWaitingConnection", "OnComplete");

	Params::UQtnMatchmakingWaitingConnection_OnComplete_Params Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnMatchmakingWaitingDetermineHost
// (None)

class UClass* UQtnMatchmakingWaitingDetermineHost::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnMatchmakingWaitingDetermineHost");

	return Clss;
}


// QtnMatchmakingWaitingDetermineHost QtnGame.Default__QtnMatchmakingWaitingDetermineHost
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnMatchmakingWaitingDetermineHost* UQtnMatchmakingWaitingDetermineHost::GetDefaultObj()
{
	static class UQtnMatchmakingWaitingDetermineHost* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnMatchmakingWaitingDetermineHost*>(UQtnMatchmakingWaitingDetermineHost::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnMatchmakingWaitingDetermineHost.QtnMatchmakingWaitingDetermineHost
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnMatchmakingWaitingDetermineHost*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnMatchmakingWaitingDetermineHost* UQtnMatchmakingWaitingDetermineHost::QtnMatchmakingWaitingDetermineHost(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMatchmakingWaitingDetermineHost", "QtnMatchmakingWaitingDetermineHost");

	Params::UQtnMatchmakingWaitingDetermineHost_QtnMatchmakingWaitingDetermineHost_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnMatchmakingWaitingDetermineHost.OnComplete
// (Final, Native, Private)
// Parameters:
// bool                               bIsHost                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnMatchmakingWaitingDetermineHost::OnComplete(bool bIsHost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnMatchmakingWaitingDetermineHost", "OnComplete");

	Params::UQtnMatchmakingWaitingDetermineHost_OnComplete_Params Parms{};

	Parms.bIsHost = bIsHost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnOnlineSession
// (None)

class UClass* UQtnOnlineSession::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOnlineSession");

	return Clss;
}


// QtnOnlineSession QtnGame.Default__QtnOnlineSession
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOnlineSession* UQtnOnlineSession::GetDefaultObj()
{
	static class UQtnOnlineSession* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOnlineSession*>(UQtnOnlineSession::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOnlineUtilities
// (None)

class UClass* UQtnOnlineUtilities::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOnlineUtilities");

	return Clss;
}


// QtnOnlineUtilities QtnGame.Default__QtnOnlineUtilities
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOnlineUtilities* UQtnOnlineUtilities::GetDefaultObj()
{
	static class UQtnOnlineUtilities* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOnlineUtilities*>(UQtnOnlineUtilities::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnOnlineUtilities.GetServerSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBlueprintSessionResult     Result                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EQtnServerSetting       ServerSetting                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnOnlineUtilities::GetServerSetting(struct FBlueprintSessionResult& Result, enum class EQtnServerSetting ServerSetting)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOnlineUtilities", "GetServerSetting");

	Params::UQtnOnlineUtilities_GetServerSetting_Params Parms{};

	Parms.Result = Result;
	Parms.ServerSetting = ServerSetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSaveLoadState
// (None)

class UClass* UQtnSaveLoadState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSaveLoadState");

	return Clss;
}


// QtnSaveLoadState QtnGame.Default__QtnSaveLoadState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSaveLoadState* UQtnSaveLoadState::GetDefaultObj()
{
	static class UQtnSaveLoadState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSaveLoadState*>(UQtnSaveLoadState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOptionsLoadState
// (None)

class UClass* UQtnOptionsLoadState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOptionsLoadState");

	return Clss;
}


// QtnOptionsLoadState QtnGame.Default__QtnOptionsLoadState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOptionsLoadState* UQtnOptionsLoadState::GetDefaultObj()
{
	static class UQtnOptionsLoadState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOptionsLoadState*>(UQtnOptionsLoadState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOptionsSaveState
// (None)

class UClass* UQtnOptionsSaveState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOptionsSaveState");

	return Clss;
}


// QtnOptionsSaveState QtnGame.Default__QtnOptionsSaveState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOptionsSaveState* UQtnOptionsSaveState::GetDefaultObj()
{
	static class UQtnOptionsSaveState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOptionsSaveState*>(UQtnOptionsSaveState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOutcomeCalculator
// (None)

class UClass* UQtnOutcomeCalculator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOutcomeCalculator");

	return Clss;
}


// QtnOutcomeCalculator QtnGame.Default__QtnOutcomeCalculator
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOutcomeCalculator* UQtnOutcomeCalculator::GetDefaultObj()
{
	static class UQtnOutcomeCalculator* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOutcomeCalculator*>(UQtnOutcomeCalculator::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnOutcomeCalculator.K2_CalculateOutcome
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnPlayerOutcomeResult     ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnPlayerOutcomeResult UQtnOutcomeCalculator::K2_CalculateOutcome(struct FQtnEventMessage& EventMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOutcomeCalculator", "K2_CalculateOutcome");

	Params::UQtnOutcomeCalculator_K2_CalculateOutcome_Params Parms{};

	Parms.EventMessage = EventMessage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class QtnGame.QtnOutcomeTrackingSubsystem
// (None)

class UClass* UQtnOutcomeTrackingSubsystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOutcomeTrackingSubsystem");

	return Clss;
}


// QtnOutcomeTrackingSubsystem QtnGame.Default__QtnOutcomeTrackingSubsystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOutcomeTrackingSubsystem* UQtnOutcomeTrackingSubsystem::GetDefaultObj()
{
	static class UQtnOutcomeTrackingSubsystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOutcomeTrackingSubsystem*>(UQtnOutcomeTrackingSubsystem::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnOutcomeTrackingSubsystem.ResetAllSessionOutcomes_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                LifetimeTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnOutcomeTrackingSubsystem::ResetAllSessionOutcomes_ServerOnly(const struct FGameplayTag& LifetimeTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOutcomeTrackingSubsystem", "ResetAllSessionOutcomes_ServerOnly");

	Params::UQtnOutcomeTrackingSubsystem_ResetAllSessionOutcomes_ServerOnly_Params Parms{};

	Parms.LifetimeTag = LifetimeTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOutcomeTrackingSubsystem.OnQtnEventOccured
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnOutcomeTrackingSubsystem::OnQtnEventOccured(struct FQtnEventMessage& EventMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOutcomeTrackingSubsystem", "OnQtnEventOccured");

	Params::UQtnOutcomeTrackingSubsystem_OnQtnEventOccured_Params Parms{};

	Parms.EventMessage = EventMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOutcomeTrackingSubsystem.ManuallyAddPlayerOutcomeValue_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetPlayer                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                OutcomeTag                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer       LifetimeTags                                                     (Parm, NativeAccessSpecifierPublic)
// struct FQtnPlayerOutcomeResult     Result                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnOutcomeTrackingSubsystem::ManuallyAddPlayerOutcomeValue_ServerOnly(class AQtnBodyPawn* TargetPlayer, const struct FGameplayTag& OutcomeTag, const struct FGameplayTagContainer& LifetimeTags, struct FQtnPlayerOutcomeResult& Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOutcomeTrackingSubsystem", "ManuallyAddPlayerOutcomeValue_ServerOnly");

	Params::UQtnOutcomeTrackingSubsystem_ManuallyAddPlayerOutcomeValue_ServerOnly_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;
	Parms.OutcomeTag = OutcomeTag;
	Parms.LifetimeTags = LifetimeTags;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnOutcomeTrackingSubsystem.GetPlayerOutcomeValue_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                TargetPlayer                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                OutcomeTag                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                LifetimeTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnPlayerOutcomeSummary    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnPlayerOutcomeSummary UQtnOutcomeTrackingSubsystem::GetPlayerOutcomeValue_ServerOnly(class AQtnBodyPawn* TargetPlayer, const struct FGameplayTag& OutcomeTag, const struct FGameplayTag& LifetimeTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOutcomeTrackingSubsystem", "GetPlayerOutcomeValue_ServerOnly");

	Params::UQtnOutcomeTrackingSubsystem_GetPlayerOutcomeValue_ServerOnly_Params Parms{};

	Parms.TargetPlayer = TargetPlayer;
	Parms.OutcomeTag = OutcomeTag;
	Parms.LifetimeTag = LifetimeTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOutcomeTrackingSubsystem.GetOutcomeTrackingSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnOutcomeTrackingSubsystem*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnOutcomeTrackingSubsystem* UQtnOutcomeTrackingSubsystem::GetOutcomeTrackingSubsystem(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOutcomeTrackingSubsystem", "GetOutcomeTrackingSubsystem");

	Params::UQtnOutcomeTrackingSubsystem_GetOutcomeTrackingSubsystem_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnOutcomeTrackingSubsystem.GetGlobalOutcomeValue_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                OutcomeTag                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                LifetimeTag                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnPlayerOutcomeSummary    ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnPlayerOutcomeSummary UQtnOutcomeTrackingSubsystem::GetGlobalOutcomeValue_ServerOnly(const struct FGameplayTag& OutcomeTag, const struct FGameplayTag& LifetimeTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOutcomeTrackingSubsystem", "GetGlobalOutcomeValue_ServerOnly");

	Params::UQtnOutcomeTrackingSubsystem_GetGlobalOutcomeValue_ServerOnly_Params Parms{};

	Parms.OutcomeTag = OutcomeTag;
	Parms.LifetimeTag = LifetimeTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnOutlineFX
// (None)

class UClass* UQtnOutlineFX::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOutlineFX");

	return Clss;
}


// QtnOutlineFX QtnGame.Default__QtnOutlineFX
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOutlineFX* UQtnOutlineFX::GetDefaultObj()
{
	static class UQtnOutlineFX* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOutlineFX*>(UQtnOutlineFX::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOutlineFXInterface
// (None)

class UClass* IQtnOutlineFXInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOutlineFXInterface");

	return Clss;
}


// QtnOutlineFXInterface QtnGame.Default__QtnOutlineFXInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnOutlineFXInterface* IQtnOutlineFXInterface::GetDefaultObj()
{
	static class IQtnOutlineFXInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnOutlineFXInterface*>(IQtnOutlineFXInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOverlayFX
// (None)

class UClass* UQtnOverlayFX::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOverlayFX");

	return Clss;
}


// QtnOverlayFX QtnGame.Default__QtnOverlayFX
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOverlayFX* UQtnOverlayFX::GetDefaultObj()
{
	static class UQtnOverlayFX* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOverlayFX*>(UQtnOverlayFX::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOverlayFXInterface
// (None)

class UClass* IQtnOverlayFXInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOverlayFXInterface");

	return Clss;
}


// QtnOverlayFXInterface QtnGame.Default__QtnOverlayFXInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnOverlayFXInterface* IQtnOverlayFXInterface::GetDefaultObj()
{
	static class IQtnOverlayFXInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnOverlayFXInterface*>(IQtnOverlayFXInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnOverlayFXInterface.GetOverlayMeshes
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<class UMeshComponent*>      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UMeshComponent*> IQtnOverlayFXInterface::GetOverlayMeshes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnOverlayFXInterface", "GetOverlayMeshes");

	Params::IQtnOverlayFXInterface_GetOverlayMeshes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnOverlayInstancedStaticMeshComponent
// (SceneComponent, PrimitiveComponent, StaticMeshComponent)

class UClass* UQtnOverlayInstancedStaticMeshComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOverlayInstancedStaticMeshComponent");

	return Clss;
}


// QtnOverlayInstancedStaticMeshComponent QtnGame.Default__QtnOverlayInstancedStaticMeshComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOverlayInstancedStaticMeshComponent* UQtnOverlayInstancedStaticMeshComponent::GetDefaultObj()
{
	static class UQtnOverlayInstancedStaticMeshComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOverlayInstancedStaticMeshComponent*>(UQtnOverlayInstancedStaticMeshComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOverlayMeshInterface
// (None)

class UClass* IQtnOverlayMeshInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOverlayMeshInterface");

	return Clss;
}


// QtnOverlayMeshInterface QtnGame.Default__QtnOverlayMeshInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnOverlayMeshInterface* IQtnOverlayMeshInterface::GetDefaultObj()
{
	static class IQtnOverlayMeshInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnOverlayMeshInterface*>(IQtnOverlayMeshInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOverlaySkeletalMeshComponent
// (SceneComponent, PrimitiveComponent, SkinnedMeshComponent, SkeletalMeshComponent)

class UClass* UQtnOverlaySkeletalMeshComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOverlaySkeletalMeshComponent");

	return Clss;
}


// QtnOverlaySkeletalMeshComponent QtnGame.Default__QtnOverlaySkeletalMeshComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOverlaySkeletalMeshComponent* UQtnOverlaySkeletalMeshComponent::GetDefaultObj()
{
	static class UQtnOverlaySkeletalMeshComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOverlaySkeletalMeshComponent*>(UQtnOverlaySkeletalMeshComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnOverlayStaticMeshComponent
// (SceneComponent, PrimitiveComponent, StaticMeshComponent)

class UClass* UQtnOverlayStaticMeshComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnOverlayStaticMeshComponent");

	return Clss;
}


// QtnOverlayStaticMeshComponent QtnGame.Default__QtnOverlayStaticMeshComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnOverlayStaticMeshComponent* UQtnOverlayStaticMeshComponent::GetDefaultObj()
{
	static class UQtnOverlayStaticMeshComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnOverlayStaticMeshComponent*>(UQtnOverlayStaticMeshComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPakChunk
// (None)

class UClass* UQtnPakChunk::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPakChunk");

	return Clss;
}


// QtnPakChunk QtnGame.Default__QtnPakChunk
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPakChunk* UQtnPakChunk::GetDefaultObj()
{
	static class UQtnPakChunk* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPakChunk*>(UQtnPakChunk::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPathFollowingComponent
// (None)

class UClass* UQtnPathFollowingComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPathFollowingComponent");

	return Clss;
}


// QtnPathFollowingComponent QtnGame.Default__QtnPathFollowingComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPathFollowingComponent* UQtnPathFollowingComponent::GetDefaultObj()
{
	static class UQtnPathFollowingComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPathFollowingComponent*>(UQtnPathFollowingComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPathFollowingComponent.IsPathfindingBlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ElapsedTime                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPathFollowingComponent::IsPathfindingBlocked(float* ElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPathFollowingComponent", "IsPathfindingBlocked");

	Params::UQtnPathFollowingComponent_IsPathfindingBlocked_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ElapsedTime != nullptr)
		*ElapsedTime = Parms.ElapsedTime;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPathFollowingComponent.IsAtDestination
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   Leeway                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPathFollowingComponent::IsAtDestination(const struct FVector2D& Leeway)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPathFollowingComponent", "IsAtDestination");

	Params::UQtnPathFollowingComponent_IsAtDestination_Params Parms{};

	Parms.Leeway = Leeway;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPathFollowingComponent.HasPathfindingFailed
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ElapsedTime                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPathFollowingComponent::HasPathfindingFailed(float* ElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPathFollowingComponent", "HasPathfindingFailed");

	Params::UQtnPathFollowingComponent_HasPathfindingFailed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ElapsedTime != nullptr)
		*ElapsedTime = Parms.ElapsedTime;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPathFollowingComponent.GetAIDestinationPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnPathFollowingComponent::GetAIDestinationPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPathFollowingComponent", "GetAIDestinationPoint");

	Params::UQtnPathFollowingComponent_GetAIDestinationPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPathFollowingComponent.GetAIDestinationActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnPathFollowingComponent::GetAIDestinationActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPathFollowingComponent", "GetAIDestinationActor");

	Params::UQtnPathFollowingComponent_GetAIDestinationActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPathFollowingComponent.CanInterruptPathFollowing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPathFollowingComponent::CanInterruptPathFollowing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPathFollowingComponent", "CanInterruptPathFollowing");

	Params::UQtnPathFollowingComponent_CanInterruptPathFollowing_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnPatrolManager
// (None)

class UClass* UQtnPatrolManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPatrolManager");

	return Clss;
}


// QtnPatrolManager QtnGame.Default__QtnPatrolManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPatrolManager* UQtnPatrolManager::GetDefaultObj()
{
	static class UQtnPatrolManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPatrolManager*>(UQtnPatrolManager::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPatrolRoute
// (Actor)

class UClass* AQtnPatrolRoute::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPatrolRoute");

	return Clss;
}


// QtnPatrolRoute QtnGame.Default__QtnPatrolRoute
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPatrolRoute* AQtnPatrolRoute::GetDefaultObj()
{
	static class AQtnPatrolRoute* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPatrolRoute*>(AQtnPatrolRoute::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPatrolRouteComponent
// (None)

class UClass* UQtnPatrolRouteComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPatrolRouteComponent");

	return Clss;
}


// QtnPatrolRouteComponent QtnGame.Default__QtnPatrolRouteComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPatrolRouteComponent* UQtnPatrolRouteComponent::GetDefaultObj()
{
	static class UQtnPatrolRouteComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPatrolRouteComponent*>(UQtnPatrolRouteComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPatrolRouteComponent.GetClosestWaypoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     Position                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DistanceFromWaypoint                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnWaypoint*                ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnWaypoint* UQtnPatrolRouteComponent::GetClosestWaypoint(struct FVector& Position, float* DistanceFromWaypoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPatrolRouteComponent", "GetClosestWaypoint");

	Params::UQtnPatrolRouteComponent_GetClosestWaypoint_Params Parms{};

	Parms.Position = Position;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DistanceFromWaypoint != nullptr)
		*DistanceFromWaypoint = Parms.DistanceFromWaypoint;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnPerk
// (None)

class UClass* UQtnPerk::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPerk");

	return Clss;
}


// QtnPerk QtnGame.Default__QtnPerk
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPerk* UQtnPerk::GetDefaultObj()
{
	static class UQtnPerk* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPerk*>(UQtnPerk::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPerk.RemoveLoadoutLevel_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LoadoutLevelsToRemove                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::RemoveLoadoutLevel_ServerOnly(class AQtnBodyPawn* TargetBodyPawn, int32 LoadoutLevelsToRemove)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "RemoveLoadoutLevel_ServerOnly");

	Params::UQtnPerk_RemoveLoadoutLevel_ServerOnly_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;
	Parms.LoadoutLevelsToRemove = LoadoutLevelsToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.RemoveLoadoutInstance_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LoadoutSourceSlot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::RemoveLoadoutInstance_ServerOnly(class AQtnBodyPawn* TargetBodyPawn, int32 LoadoutSourceSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "RemoveLoadoutInstance_ServerOnly");

	Params::UQtnPerk_RemoveLoadoutInstance_ServerOnly_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;
	Parms.LoadoutSourceSlot = LoadoutSourceSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.OnRep_OwningPerkComponent
// (Final, Native, Protected)
// Parameters:

void UQtnPerk::OnRep_OwningPerkComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "OnRep_OwningPerkComponent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.OnRep_ActiveInstances
// (Final, Native, Public)
// Parameters:

void UQtnPerk::OnRep_ActiveInstances()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "OnRep_ActiveInstances");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.OnPerkStackChangeEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PreviousLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::OnPerkStackChangeEvent(class AQtnBodyPawn* TargetBodyPawn, int32 PreviousLevel, int32 NewLevel, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "OnPerkStackChangeEvent");

	Params::UQtnPerk_OnPerkStackChangeEvent_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;
	Parms.PreviousLevel = PreviousLevel;
	Parms.NewLevel = NewLevel;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPerk.OnGameEventEvent_ServerOnly
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnEventMessage            EventMessage                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnPerk::OnGameEventEvent_ServerOnly(struct FQtnEventMessage& EventMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "OnGameEventEvent_ServerOnly");

	Params::UQtnPerk_OnGameEventEvent_ServerOnly_Params Parms{};

	Parms.EventMessage = EventMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "OnDebugDisplay");

	Params::UQtnPerk_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPerk.OnDeactivatePerkEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::OnDeactivatePerkEvent(class AQtnBodyPawn* TargetBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "OnDeactivatePerkEvent");

	Params::UQtnPerk_OnDeactivatePerkEvent_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPerk.OnActivatePerkEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::OnActivatePerkEvent(class AQtnBodyPawn* TargetBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "OnActivatePerkEvent");

	Params::UQtnPerk_OnActivatePerkEvent_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPerk.LoadFromSaveData_ServerOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnSavedPerkLoadoutData    LoadoutData                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnPerk::LoadFromSaveData_ServerOnly(class AQtnBodyPawn* TargetBodyPawn, struct FQtnSavedPerkLoadoutData& LoadoutData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "LoadFromSaveData_ServerOnly");

	Params::UQtnPerk_LoadFromSaveData_ServerOnly_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;
	Parms.LoadoutData = LoadoutData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.GetValueOfPerk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ValueIndex                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnPerk::GetValueOfPerk(int32 ValueIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetValueOfPerk");

	Params::UQtnPerk_GetValueOfPerk_Params Parms{};

	Parms.ValueIndex = ValueIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.GetReplicatedLoadoutIndices
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                      ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<int32> UQtnPerk::GetReplicatedLoadoutIndices()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetReplicatedLoadoutIndices");

	Params::UQtnPerk_GetReplicatedLoadoutIndices_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.GetReplicatedActiveInstances
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnPerk::GetReplicatedActiveInstances()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetReplicatedActiveInstances");

	Params::UQtnPerk_GetReplicatedActiveInstances_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.GetPerkValueAtInstanceCount
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                              ValueIndex                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InstanceCount                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnPerk::GetPerkValueAtInstanceCount(int32 ValueIndex, int32 InstanceCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetPerkValueAtInstanceCount");

	Params::UQtnPerk_GetPerkValueAtInstanceCount_Params Parms{};

	Parms.ValueIndex = ValueIndex;
	Parms.InstanceCount = InstanceCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.GetPerkSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnPerkSettings            ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnPerkSettings UQtnPerk::GetPerkSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetPerkSettings");

	Params::UQtnPerk_GetPerkSettings_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.GetOwningPerkComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnPerkComponent*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPerkComponent* UQtnPerk::GetOwningPerkComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetOwningPerkComponent");

	Params::UQtnPerk_GetOwningPerkComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.GetFormattedValueAtIndexAtInstanceCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ArrayIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InstanceCount                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnPerk::GetFormattedValueAtIndexAtInstanceCount(int32 ArrayIndex, int32 InstanceCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetFormattedValueAtIndexAtInstanceCount");

	Params::UQtnPerk_GetFormattedValueAtIndexAtInstanceCount_Params Parms{};

	Parms.ArrayIndex = ArrayIndex;
	Parms.InstanceCount = InstanceCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.GetFormattedValueAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ArrayIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnPerk::GetFormattedValueAtIndex(int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "GetFormattedValueAtIndex");

	Params::UQtnPerk_GetFormattedValueAtIndex_Params Parms{};

	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.CreateSavedLoadoutData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnSavedPerkLoadoutData    ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnSavedPerkLoadoutData UQtnPerk::CreateSavedLoadoutData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "CreateSavedLoadoutData");

	Params::UQtnPerk_CreateSavedLoadoutData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerk.CalculateDamageValues
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UQtnVerb*                    SourceVerb                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InBaseDamage                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnDamageType>  DamageType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutDamageScalar                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutBonusDamage                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::CalculateDamageValues(class UQtnVerb* SourceVerb, class AActor* TargetActor, float InBaseDamage, TSubclassOf<class UQtnDamageType> DamageType, float* OutDamageScalar, float* OutBonusDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "CalculateDamageValues");

	Params::UQtnPerk_CalculateDamageValues_Params Parms{};

	Parms.SourceVerb = SourceVerb;
	Parms.TargetActor = TargetActor;
	Parms.InBaseDamage = InBaseDamage;
	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDamageScalar != nullptr)
		*OutDamageScalar = Parms.OutDamageScalar;

	if (OutBonusDamage != nullptr)
		*OutBonusDamage = Parms.OutBonusDamage;

}


// Function QtnGame.QtnPerk.BeginListeningToEvent_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                EventTag                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::BeginListeningToEvent_ServerOnly(struct FGameplayTag& EventTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "BeginListeningToEvent_ServerOnly");

	Params::UQtnPerk_BeginListeningToEvent_ServerOnly_Params Parms{};

	Parms.EventTag = EventTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.AddLoadoutLevel_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LoadoutLevelsToAdd                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::AddLoadoutLevel_ServerOnly(class AQtnBodyPawn* TargetBodyPawn, int32 LoadoutLevelsToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "AddLoadoutLevel_ServerOnly");

	Params::UQtnPerk_AddLoadoutLevel_ServerOnly_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;
	Parms.LoadoutLevelsToAdd = LoadoutLevelsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerk.AddLoadoutInstance_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LoadoutSourceSlot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerk::AddLoadoutInstance_ServerOnly(class AQtnBodyPawn* TargetBodyPawn, int32 LoadoutSourceSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerk", "AddLoadoutInstance_ServerOnly");

	Params::UQtnPerk_AddLoadoutInstance_ServerOnly_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;
	Parms.LoadoutSourceSlot = LoadoutSourceSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPerkComponent
// (None)

class UClass* UQtnPerkComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPerkComponent");

	return Clss;
}


// QtnPerkComponent QtnGame.Default__QtnPerkComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPerkComponent* UQtnPerkComponent::GetDefaultObj()
{
	static class UQtnPerkComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPerkComponent*>(UQtnPerkComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPerkComponent.ServerResetPerks
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:

void UQtnPerkComponent::ServerResetPerks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "ServerResetPerks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.ServerLoadPerk
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FQtnSavedPerkLoadoutData    PerkSaveData                                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnPerkComponent::ServerLoadPerk(struct FQtnSavedPerkLoadoutData& PerkSaveData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "ServerLoadPerk");

	Params::UQtnPerkComponent_ServerLoadPerk_Params Parms{};

	Parms.PerkSaveData = PerkSaveData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.ServerDeactivatePerks
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class UQtnPerk>>PerkClasses                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<int32>                      SourceLoadoutSlots                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnPerkComponent::ServerDeactivatePerks(TArray<TSubclassOf<class UQtnPerk>>& PerkClasses, TArray<int32>& SourceLoadoutSlots)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "ServerDeactivatePerks");

	Params::UQtnPerkComponent_ServerDeactivatePerks_Params Parms{};

	Parms.PerkClasses = PerkClasses;
	Parms.SourceLoadoutSlots = SourceLoadoutSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.ServerDeactivatePerk
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SourceLoadoutSlot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkComponent::ServerDeactivatePerk(TSubclassOf<class UQtnPerk> PerkClass, int32 SourceLoadoutSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "ServerDeactivatePerk");

	Params::UQtnPerkComponent_ServerDeactivatePerk_Params Parms{};

	Parms.PerkClass = PerkClass;
	Parms.SourceLoadoutSlot = SourceLoadoutSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.ServerActivatePerk
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SourceLoadoutSlot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkComponent::ServerActivatePerk(TSubclassOf<class UQtnPerk> PerkClass, int32 SourceLoadoutSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "ServerActivatePerk");

	Params::UQtnPerkComponent_ServerActivatePerk_Params Parms{};

	Parms.PerkClass = PerkClass;
	Parms.SourceLoadoutSlot = SourceLoadoutSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.OnRep_Perks
// (Final, Native, Protected)
// Parameters:

void UQtnPerkComponent::OnRep_Perks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "OnRep_Perks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "OnDebugDisplay");

	Params::UQtnPerkComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPerkComponent.LoadPerk_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnSavedPerkLoadoutData    PerkSaveData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnPerkComponent::LoadPerk_ServerOnly(struct FQtnSavedPerkLoadoutData& PerkSaveData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "LoadPerk_ServerOnly");

	Params::UQtnPerkComponent_LoadPerk_ServerOnly_Params Parms{};

	Parms.PerkSaveData = PerkSaveData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.IsPerkLoadoutActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SourceLoadoutSlot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPerkComponent::IsPerkLoadoutActive(TSubclassOf<class UQtnPerk> PerkClass, int32 SourceLoadoutSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "IsPerkLoadoutActive");

	Params::UQtnPerkComponent_IsPerkLoadoutActive_Params Parms{};

	Parms.PerkClass = PerkClass;
	Parms.SourceLoadoutSlot = SourceLoadoutSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkComponent.IsPerkActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPerkComponent::IsPerkActive(TSubclassOf<class UQtnPerk> PerkClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "IsPerkActive");

	Params::UQtnPerkComponent_IsPerkActive_Params Parms{};

	Parms.PerkClass = PerkClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkComponent.GetPerkInstanceCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnPerkComponent::GetPerkInstanceCount(TSubclassOf<class UQtnPerk> PerkClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "GetPerkInstanceCount");

	Params::UQtnPerkComponent_GetPerkInstanceCount_Params Parms{};

	Parms.PerkClass = PerkClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkComponent.GetOwningBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnPerkComponent::GetOwningBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "GetOwningBodyPawn");

	Params::UQtnPerkComponent_GetOwningBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkComponent.GetAllPerks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnPerk*>            ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class UQtnPerk*> UQtnPerkComponent::GetAllPerks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "GetAllPerks");

	Params::UQtnPerkComponent_GetAllPerks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkComponent.FindPerk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPerk*                    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPerk* UQtnPerkComponent::FindPerk(TSubclassOf<class UQtnPerk> PerkClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "FindPerk");

	Params::UQtnPerkComponent_FindPerk_Params Parms{};

	Parms.PerkClass = PerkClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkComponent.DeactivatePerk_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SourceLoadoutSlot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkComponent::DeactivatePerk_ServerOnly(TSubclassOf<class UQtnPerk> PerkClass, int32 SourceLoadoutSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "DeactivatePerk_ServerOnly");

	Params::UQtnPerkComponent_DeactivatePerk_ServerOnly_Params Parms{};

	Parms.PerkClass = PerkClass;
	Parms.SourceLoadoutSlot = SourceLoadoutSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.ClientPerkStacksChanged
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void UQtnPerkComponent::ClientPerkStacksChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "ClientPerkStacksChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkComponent.CalculatePlayerLevelFromPerks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnPerkComponent::CalculatePlayerLevelFromPerks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "CalculatePlayerLevelFromPerks");

	Params::UQtnPerkComponent_CalculatePlayerLevelFromPerks_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkComponent.CalculateDamageValues
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerb*                    SourceVerb                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InBaseDamage                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnDamageType>  DamageType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutDamageScalar                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutBonusDamage                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkComponent::CalculateDamageValues(class UQtnVerb* SourceVerb, class AActor* TargetActor, float InBaseDamage, TSubclassOf<class UQtnDamageType> DamageType, float* OutDamageScalar, float* OutBonusDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "CalculateDamageValues");

	Params::UQtnPerkComponent_CalculateDamageValues_Params Parms{};

	Parms.SourceVerb = SourceVerb;
	Parms.TargetActor = TargetActor;
	Parms.InBaseDamage = InBaseDamage;
	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDamageScalar != nullptr)
		*OutDamageScalar = Parms.OutDamageScalar;

	if (OutBonusDamage != nullptr)
		*OutBonusDamage = Parms.OutBonusDamage;

}


// Function QtnGame.QtnPerkComponent.ActivatePerk_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SourceLoadoutSlot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkComponent::ActivatePerk_ServerOnly(TSubclassOf<class UQtnPerk> PerkClass, int32 SourceLoadoutSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkComponent", "ActivatePerk_ServerOnly");

	Params::UQtnPerkComponent_ActivatePerk_ServerOnly_Params Parms{};

	Parms.PerkClass = PerkClass;
	Parms.SourceLoadoutSlot = SourceLoadoutSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPerkMap
// (None)

class UClass* UQtnPerkMap::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPerkMap");

	return Clss;
}


// QtnPerkMap QtnGame.Default__QtnPerkMap
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPerkMap* UQtnPerkMap::GetDefaultObj()
{
	static class UQtnPerkMap* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPerkMap*>(UQtnPerkMap::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPerkMap.SetSimulationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                 PerkWidget                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnPerkMapSimulationStateSimState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkMap::SetSimulationState(class UUserWidget* PerkWidget, enum class EQtnPerkMapSimulationState SimState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkMap", "SetSimulationState");

	Params::UQtnPerkMap_SetSimulationState_Params Parms{};

	Parms.PerkWidget = PerkWidget;
	Parms.SimState = SimState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkMap.SetBuildState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                 PerkWidget                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkMap::SetBuildState(class UUserWidget* PerkWidget, bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkMap", "SetBuildState");

	Params::UQtnPerkMap_SetBuildState_Params Parms{};

	Parms.PerkWidget = PerkWidget;
	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPerkMap.CheckPerkMapForIslands
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                 DisconnectedWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseSimulationState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnPerkMapIsland>   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FQtnPerkMapIsland> UQtnPerkMap::CheckPerkMapForIslands(class UUserWidget* DisconnectedWidget, bool UseSimulationState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkMap", "CheckPerkMapForIslands");

	Params::UQtnPerkMap_CheckPerkMapForIslands_Params Parms{};

	Parms.DisconnectedWidget = DisconnectedWidget;
	Parms.UseSimulationState = UseSimulationState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPerkMap.AddPerkWidgetToMap
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                 PerkWidget                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UUserWidget*>         ConnectedWidgets                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnPerk>        PerkClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ConnectedToSource                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPerkMap::AddPerkWidgetToMap(class UUserWidget* PerkWidget, TArray<class UUserWidget*>& ConnectedWidgets, TSubclassOf<class UQtnPerk> PerkClass, bool ConnectedToSource)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPerkMap", "AddPerkWidgetToMap");

	Params::UQtnPerkMap_AddPerkWidgetToMap_Params Parms{};

	Parms.PerkWidget = PerkWidget;
	Parms.ConnectedWidgets = ConnectedWidgets;
	Parms.PerkClass = PerkClass;
	Parms.ConnectedToSource = ConnectedToSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPlatformUtilitiesBlueprintLibrary
// (None)

class UClass* UQtnPlatformUtilitiesBlueprintLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlatformUtilitiesBlueprintLibrary");

	return Clss;
}


// QtnPlatformUtilitiesBlueprintLibrary QtnGame.Default__QtnPlatformUtilitiesBlueprintLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlatformUtilitiesBlueprintLibrary* UQtnPlatformUtilitiesBlueprintLibrary::GetDefaultObj()
{
	static class UQtnPlatformUtilitiesBlueprintLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlatformUtilitiesBlueprintLibrary*>(UQtnPlatformUtilitiesBlueprintLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlatformUtilitiesBlueprintLibrary.UseSwitchQuality
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPlatformUtilitiesBlueprintLibrary::UseSwitchQuality()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlatformUtilitiesBlueprintLibrary", "UseSwitchQuality");

	Params::UQtnPlatformUtilitiesBlueprintLibrary_UseSwitchQuality_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlatformUtilitiesBlueprintLibrary.ShowDebugMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:

void UQtnPlatformUtilitiesBlueprintLibrary::ShowDebugMenu()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlatformUtilitiesBlueprintLibrary", "ShowDebugMenu");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlatformUtilitiesBlueprintLibrary.CollectGarbageWithParams
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                               FullPurge                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlatformUtilitiesBlueprintLibrary::CollectGarbageWithParams(bool FullPurge)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlatformUtilitiesBlueprintLibrary", "CollectGarbageWithParams");

	Params::UQtnPlatformUtilitiesBlueprintLibrary_CollectGarbageWithParams_Params Parms{};

	Parms.FullPurge = FullPurge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlatformUtilitiesBlueprintLibrary.BranchUseSwitchQuality
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EQtnUtilitiesSwitchQualityBranch                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlatformUtilitiesBlueprintLibrary::BranchUseSwitchQuality(enum class EQtnUtilitiesSwitchQuality* Branch)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlatformUtilitiesBlueprintLibrary", "BranchUseSwitchQuality");

	Params::UQtnPlatformUtilitiesBlueprintLibrary_BranchUseSwitchQuality_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Branch != nullptr)
		*Branch = Parms.Branch;

}


// Class QtnGame.QtnPlayerControlFSM
// (None)

class UClass* UQtnPlayerControlFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerControlFSM");

	return Clss;
}


// QtnPlayerControlFSM QtnGame.Default__QtnPlayerControlFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerControlFSM* UQtnPlayerControlFSM::GetDefaultObj()
{
	static class UQtnPlayerControlFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerControlFSM*>(UQtnPlayerControlFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerController
// (Actor, PlayerController)

class UClass* AQtnPlayerController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerController");

	return Clss;
}


// QtnPlayerController QtnGame.Default__QtnPlayerController
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPlayerController* AQtnPlayerController::GetDefaultObj()
{
	static class AQtnPlayerController* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPlayerController*>(AQtnPlayerController::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerController.UntoggleSprint_LocalOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPlayerController::UntoggleSprint_LocalOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "UntoggleSprint_LocalOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.SetTelepathicMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                        Message                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AQtnPlayerController::SetTelepathicMessage(class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "SetTelepathicMessage");

	Params::AQtnPlayerController_SetTelepathicMessage_Params Parms{};

	Parms.Message = Message;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerController.SetProcessGyroAiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bProcessGyroAiming                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::SetProcessGyroAiming(bool bProcessGyroAiming)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "SetProcessGyroAiming");

	Params::AQtnPlayerController_SetProcessGyroAiming_Params Parms{};

	Parms.bProcessGyroAiming = bProcessGyroAiming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.SetLobbyReadyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Ready                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::SetLobbyReadyState(bool Ready)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "SetLobbyReadyState");

	Params::AQtnPlayerController_SetLobbyReadyState_Params Parms{};

	Parms.Ready = Ready;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ServerSetStartLocation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ServerSetStartLocation(const struct FVector& StartLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ServerSetStartLocation");

	Params::AQtnPlayerController_ServerSetStartLocation_Params Parms{};

	Parms.StartLocation = StartLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ServerRemoveUIPauseRequest
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ServerRemoveUIPauseRequest(TSubclassOf<class UQtnScreen> ScreenClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ServerRemoveUIPauseRequest");

	Params::AQtnPlayerController_ServerRemoveUIPauseRequest_Params Parms{};

	Parms.ScreenClass = ScreenClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ServerKickSelfForDisconnection
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AQtnPlayerController::ServerKickSelfForDisconnection()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ServerKickSelfForDisconnection");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ServerAddUIPauseRequest
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ServerAddUIPauseRequest(TSubclassOf<class UQtnScreen> ScreenClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ServerAddUIPauseRequest");

	Params::AQtnPlayerController_ServerAddUIPauseRequest_Params Parms{};

	Parms.ScreenClass = ScreenClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ServerAcknowledgePendingBodyToOccupy
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AQtnPlayerController::ServerAcknowledgePendingBodyToOccupy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ServerAcknowledgePendingBodyToOccupy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ResetViewTargetToBody
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               PreserveCameraLook                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BlendTime                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EViewTargetBlendFunctionBlendFunc                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BlendExp                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               LockOutgoing                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ResetViewTargetToBody(bool PreserveCameraLook, float BlendTime, enum class EViewTargetBlendFunction BlendFunc, float BlendExp, bool LockOutgoing)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ResetViewTargetToBody");

	Params::AQtnPlayerController_ResetViewTargetToBody_Params Parms{};

	Parms.PreserveCameraLook = PreserveCameraLook;
	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;
	Parms.LockOutgoing = LockOutgoing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.RemoveSprintInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::RemoveSprintInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "RemoveSprintInhibitor");

	Params::AQtnPlayerController_RemoveSprintInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.RemoveInputContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnInputContext>InputContextClass                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::RemoveInputContext(TSubclassOf<class UQtnInputContext> InputContextClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "RemoveInputContext");

	Params::AQtnPlayerController_RemoveInputContext_Params Parms{};

	Parms.InputContextClass = InputContextClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.RemoveGameMovementInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::RemoveGameMovementInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "RemoveGameMovementInhibitor");

	Params::AQtnPlayerController_RemoveGameMovementInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.RemoveGameLookInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::RemoveGameLookInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "RemoveGameLookInhibitor");

	Params::AQtnPlayerController_RemoveGameLookInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.RemoveGameActionInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::RemoveGameActionInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "RemoveGameActionInhibitor");

	Params::AQtnPlayerController_RemoveGameActionInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.RemoveForceFeedbackInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::RemoveForceFeedbackInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "RemoveForceFeedbackInhibitor");

	Params::AQtnPlayerController_RemoveForceFeedbackInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.QueueClientTravel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        LevelName                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAbsolute                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Options                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::QueueClientTravel(class FName LevelName, bool bAbsolute, const class FString& Options)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "QueueClientTravel");

	Params::AQtnPlayerController_QueueClientTravel_Params Parms{};

	Parms.LevelName = LevelName;
	Parms.bAbsolute = bAbsolute;
	Parms.Options = Options;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.PushInputContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnInputContext>InputContextClass                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::PushInputContext(TSubclassOf<class UQtnInputContext> InputContextClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "PushInputContext");

	Params::AQtnPlayerController_PushInputContext_Params Parms{};

	Parms.InputContextClass = InputContextClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.PopInputContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPlayerController::PopInputContext()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "PopInputContext");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.OnRep_ServerTravelPending
// (Final, Native, Public)
// Parameters:

void AQtnPlayerController::OnRep_ServerTravelPending()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "OnRep_ServerTravelPending");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.OnRep_PendingBodyToOccupy
// (Final, Native, Public)
// Parameters:

void AQtnPlayerController::OnRep_PendingBodyToOccupy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "OnRep_PendingBodyToOccupy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.OnPlayerControllerUnOccupy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::OnPlayerControllerUnOccupy(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "OnPlayerControllerUnOccupy");

	Params::AQtnPlayerController_OnPlayerControllerUnOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerController.OnPlayerControllerOccupy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FirstTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::OnPlayerControllerOccupy(class AQtnBodyPawn* OccupiedBodyPawn, bool FirstTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "OnPlayerControllerOccupy");

	Params::AQtnPlayerController_OnPlayerControllerOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.FirstTime = FirstTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerController.OnPlayerControllerDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::OnPlayerControllerDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "OnPlayerControllerDebugDisplay");

	Params::AQtnPlayerController_OnPlayerControllerDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerController.OnLocalPlayerScriptedControlChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               IsUnderScriptedControl                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::OnLocalPlayerScriptedControlChanged(bool IsUnderScriptedControl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "OnLocalPlayerScriptedControlChanged");

	Params::AQtnPlayerController_OnLocalPlayerScriptedControlChanged_Params Parms{};

	Parms.IsUnderScriptedControl = IsUnderScriptedControl;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerController.IsTravelPending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerController::IsTravelPending()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "IsTravelPending");

	Params::AQtnPlayerController_IsTravelPending_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.IsSprintInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerController::IsSprintInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "IsSprintInhibited");

	Params::AQtnPlayerController_IsSprintInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.IsInputActionAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        InputAction                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerController::IsInputActionAllowed(class FName InputAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "IsInputActionAllowed");

	Params::AQtnPlayerController_IsInputActionAllowed_Params Parms{};

	Parms.InputAction = InputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.IsGameMovementInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerController::IsGameMovementInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "IsGameMovementInhibited");

	Params::AQtnPlayerController_IsGameMovementInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.IsGameLookInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerController::IsGameLookInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "IsGameLookInhibited");

	Params::AQtnPlayerController_IsGameLookInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.IsGameActionInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerController::IsGameActionInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "IsGameActionInhibited");

	Params::AQtnPlayerController_IsGameActionInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.IsForceFeedbackInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerController::IsForceFeedbackInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "IsForceFeedbackInhibited");

	Params::AQtnPlayerController_IsForceFeedbackInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.HandleInventoryItemRemoved
// (Final, Native, Public)
// Parameters:
// class AQtnItem*                    PRemovedItem                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::HandleInventoryItemRemoved(class AQtnItem* PRemovedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "HandleInventoryItemRemoved");

	Params::AQtnPlayerController_HandleInventoryItemRemoved_Params Parms{};

	Parms.PRemovedItem = PRemovedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.HandleInventoryItemAdded
// (Final, Native, Public)
// Parameters:
// class AQtnItem*                    PAddedItem                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::HandleInventoryItemAdded(class AQtnItem* PAddedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "HandleInventoryItemAdded");

	Params::AQtnPlayerController_HandleInventoryItemAdded_Params Parms{};

	Parms.PAddedItem = PAddedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.GetTrackedThreats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPawn*> AQtnPlayerController::GetTrackedThreats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetTrackedThreats");

	Params::AQtnPlayerController_GetTrackedThreats_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetSprintInhibitors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UObject*>             ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class UObject*> AQtnPlayerController::GetSprintInhibitors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetSprintInhibitors");

	Params::AQtnPlayerController_GetSprintInhibitors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetPlayerUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerUI*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerUI* AQtnPlayerController::GetPlayerUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetPlayerUI");

	Params::AQtnPlayerController_GetPlayerUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* AQtnPlayerController::GetPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetPlayerState");

	Params::AQtnPlayerController_GetPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnPlayerController::GetPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetPlayerPawn");

	Params::AQtnPlayerController_GetPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetOriginalBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerController::GetOriginalBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetOriginalBodyPawn");

	Params::AQtnPlayerController_GetOriginalBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetOccupiedBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerController::GetOccupiedBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetOccupiedBodyPawn");

	Params::AQtnPlayerController_GetOccupiedBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetLocalPlayerControllerBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerController*        LocalPlayerController                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::GetLocalPlayerControllerBP(class UObject* SelfReference, class AQtnPlayerController** LocalPlayerController, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetLocalPlayerControllerBP");

	Params::AQtnPlayerController_GetLocalPlayerControllerBP_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LocalPlayerController != nullptr)
		*LocalPlayerController = Parms.LocalPlayerController;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnPlayerController.GetContextualInputAxisScalar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        InputAxis                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPlayerController::GetContextualInputAxisScalar(class FName InputAxis)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetContextualInputAxisScalar");

	Params::AQtnPlayerController_GetContextualInputAxisScalar_Params Parms{};

	Parms.InputAxis = InputAxis;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.GetContextualInputAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        InputAction                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AQtnPlayerController::GetContextualInputAction(class FName InputAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "GetContextualInputAction");

	Params::AQtnPlayerController_GetContextualInputAction_Params Parms{};

	Parms.InputAction = InputAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.ExecuteConsoleCommand
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      Cmd                                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AQtnPlayerController::ExecuteConsoleCommand(const class FString& Cmd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ExecuteConsoleCommand");

	Params::AQtnPlayerController_ExecuteConsoleCommand_Params Parms{};

	Parms.Cmd = Cmd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerController.ClientSetScriptedControlResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               WantScriptedControl                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ClientSetScriptedControlResponse(bool WantScriptedControl)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientSetScriptedControlResponse");

	Params::AQtnPlayerController_ClientSetScriptedControlResponse_Params Parms{};

	Parms.WantScriptedControl = WantScriptedControl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientSaveProgressData
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AQtnPlayerController::ClientSaveProgressData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientSaveProgressData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientRespondToPawnUnHijack
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AQtnPawn*                    PHijackedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ClientRespondToPawnUnHijack(class AQtnPawn* PHijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientRespondToPawnUnHijack");

	Params::AQtnPlayerController_ClientRespondToPawnUnHijack_Params Parms{};

	Parms.PHijackedPawn = PHijackedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientRespondToPawnHijack
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AQtnPawn*                    PHijackedPawn                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ClientRespondToPawnHijack(class AQtnPawn* PHijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientRespondToPawnHijack");

	Params::AQtnPlayerController_ClientRespondToPawnHijack_Params Parms{};

	Parms.PHijackedPawn = PHijackedPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientRemoveEnemyThreat
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AQtnPawn*                    PEnemyThreat                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ClientRemoveEnemyThreat(class AQtnPawn* PEnemyThreat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientRemoveEnemyThreat");

	Params::AQtnPlayerController_ClientRemoveEnemyThreat_Params Parms{};

	Parms.PEnemyThreat = PEnemyThreat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientPreSeamlessTravel
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AQtnPlayerController::ClientPreSeamlessTravel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientPreSeamlessTravel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientPostLogin
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AQtnPlayerController::ClientPostLogin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientPostLogin");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientPerceiveSelfNoise
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                              Intensity                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ClientPerceiveSelfNoise(float Intensity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientPerceiveSelfNoise");

	Params::AQtnPlayerController_ClientPerceiveSelfNoise_Params Parms{};

	Parms.Intensity = Intensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientLoadProgressData
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AQtnPlayerController::ClientLoadProgressData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientLoadProgressData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.ClientAddEnemyThreat
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AQtnPawn*                    PEnemyThreat                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::ClientAddEnemyThreat(class AQtnPawn* PEnemyThreat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "ClientAddEnemyThreat");

	Params::AQtnPlayerController_ClientAddEnemyThreat_Params Parms{};

	Parms.PEnemyThreat = PEnemyThreat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.CheckSprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              DeltaSeconds                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnPerk>        EnergeticPerkClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnAttributeStamina>StaminaAttributeClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    MovementSprintTutorialArchetype                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        MovementSprintTutorialGoalIdentity                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::CheckSprint(float DeltaSeconds, TSubclassOf<class UQtnPerk> EnergeticPerkClass, TSubclassOf<class UQtnAttributeStamina> StaminaAttributeClass, TSubclassOf<class UQtnTutorial> MovementSprintTutorialArchetype, class FName MovementSprintTutorialGoalIdentity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "CheckSprint");

	Params::AQtnPlayerController_CheckSprint_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.EnergeticPerkClass = EnergeticPerkClass;
	Parms.StaminaAttributeClass = StaminaAttributeClass;
	Parms.MovementSprintTutorialArchetype = MovementSprintTutorialArchetype;
	Parms.MovementSprintTutorialGoalIdentity = MovementSprintTutorialGoalIdentity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.AddSprintInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::AddSprintInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "AddSprintInhibitor");

	Params::AQtnPlayerController_AddSprintInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.AddGameMovementInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::AddGameMovementInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "AddGameMovementInhibitor");

	Params::AQtnPlayerController_AddGameMovementInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.AddGameLookInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::AddGameLookInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "AddGameLookInhibitor");

	Params::AQtnPlayerController_AddGameLookInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.AddGameActionInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::AddGameActionInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "AddGameActionInhibitor");

	Params::AQtnPlayerController_AddGameActionInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerController.AddForceFeedbackInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerController::AddForceFeedbackInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerController", "AddForceFeedbackInhibitor");

	Params::AQtnPlayerController_AddForceFeedbackInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPlayerControlState
// (None)

class UClass* UQtnPlayerControlState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerControlState");

	return Clss;
}


// QtnPlayerControlState QtnGame.Default__QtnPlayerControlState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerControlState* UQtnPlayerControlState::GetDefaultObj()
{
	static class UQtnPlayerControlState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerControlState*>(UQtnPlayerControlState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerControlStateBeforeOccupy
// (None)

class UClass* UQtnPlayerControlStateBeforeOccupy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerControlStateBeforeOccupy");

	return Clss;
}


// QtnPlayerControlStateBeforeOccupy QtnGame.Default__QtnPlayerControlStateBeforeOccupy
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerControlStateBeforeOccupy* UQtnPlayerControlStateBeforeOccupy::GetDefaultObj()
{
	static class UQtnPlayerControlStateBeforeOccupy* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerControlStateBeforeOccupy*>(UQtnPlayerControlStateBeforeOccupy::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerControlStateDisembodied
// (None)

class UClass* UQtnPlayerControlStateDisembodied::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerControlStateDisembodied");

	return Clss;
}


// QtnPlayerControlStateDisembodied QtnGame.Default__QtnPlayerControlStateDisembodied
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerControlStateDisembodied* UQtnPlayerControlStateDisembodied::GetDefaultObj()
{
	static class UQtnPlayerControlStateDisembodied* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerControlStateDisembodied*>(UQtnPlayerControlStateDisembodied::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerControlStateHijacking
// (None)

class UClass* UQtnPlayerControlStateHijacking::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerControlStateHijacking");

	return Clss;
}


// QtnPlayerControlStateHijacking QtnGame.Default__QtnPlayerControlStateHijacking
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerControlStateHijacking* UQtnPlayerControlStateHijacking::GetDefaultObj()
{
	static class UQtnPlayerControlStateHijacking* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerControlStateHijacking*>(UQtnPlayerControlStateHijacking::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerControlStateOccupying
// (None)

class UClass* UQtnPlayerControlStateOccupying::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerControlStateOccupying");

	return Clss;
}


// QtnPlayerControlStateOccupying QtnGame.Default__QtnPlayerControlStateOccupying
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerControlStateOccupying* UQtnPlayerControlStateOccupying::GetDefaultObj()
{
	static class UQtnPlayerControlStateOccupying* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerControlStateOccupying*>(UQtnPlayerControlStateOccupying::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerControlStateTravelPending
// (None)

class UClass* UQtnPlayerControlStateTravelPending::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerControlStateTravelPending");

	return Clss;
}


// QtnPlayerControlStateTravelPending QtnGame.Default__QtnPlayerControlStateTravelPending
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerControlStateTravelPending* UQtnPlayerControlStateTravelPending::GetDefaultObj()
{
	static class UQtnPlayerControlStateTravelPending* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerControlStateTravelPending*>(UQtnPlayerControlStateTravelPending::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerDataBag
// (None)

class UClass* UQtnPlayerDataBag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerDataBag");

	return Clss;
}


// QtnPlayerDataBag QtnGame.Default__QtnPlayerDataBag
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerDataBag* UQtnPlayerDataBag::GetDefaultObj()
{
	static class UQtnPlayerDataBag* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerDataBag*>(UQtnPlayerDataBag::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerDataBag.OnUnAssociatePlayerData
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerDataBag::OnUnAssociatePlayerData(class AQtnPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerDataBag", "OnUnAssociatePlayerData");

	Params::UQtnPlayerDataBag_OnUnAssociatePlayerData_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerDataBag.OnAssociatePlayerData
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerDataBag::OnAssociatePlayerData(class AQtnPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerDataBag", "OnAssociatePlayerData");

	Params::UQtnPlayerDataBag_OnAssociatePlayerData_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerDataBag.HasWorldCustomization
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnWorldCustomization>WorldCustomization                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPlayerDataBag::HasWorldCustomization(TSubclassOf<class UQtnWorldCustomization> WorldCustomization)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerDataBag", "HasWorldCustomization");

	Params::UQtnPlayerDataBag_HasWorldCustomization_Params Parms{};

	Parms.WorldCustomization = WorldCustomization;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerDataBag.GetAvailableWorldCustomizations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnWorldCustomization>baseClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UQtnWorldCustomization>>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UQtnWorldCustomization>> UQtnPlayerDataBag::GetAvailableWorldCustomizations(TSubclassOf<class UQtnWorldCustomization> baseClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerDataBag", "GetAvailableWorldCustomizations");

	Params::UQtnPlayerDataBag_GetAvailableWorldCustomizations_Params Parms{};

	Parms.baseClass = baseClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnPlayerNameplateManagerComponent
// (None)

class UClass* UQtnPlayerNameplateManagerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerNameplateManagerComponent");

	return Clss;
}


// QtnPlayerNameplateManagerComponent QtnGame.Default__QtnPlayerNameplateManagerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerNameplateManagerComponent* UQtnPlayerNameplateManagerComponent::GetDefaultObj()
{
	static class UQtnPlayerNameplateManagerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerNameplateManagerComponent*>(UQtnPlayerNameplateManagerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerNameplateManagerComponent.SetupActorNameplate
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Offset                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::SetupActorNameplate(class AQtnPawn* TargetPawn, struct FVector& Offset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "SetupActorNameplate");

	Params::UQtnPlayerNameplateManagerComponent_SetupActorNameplate_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.SetNameplatesScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Scale                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::SetNameplatesScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "SetNameplatesScale");

	Params::UQtnPlayerNameplateManagerComponent_SetNameplatesScale_Params Parms{};

	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.SetNameplatesHidden
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               IsHidden                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::SetNameplatesHidden(bool IsHidden)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "SetNameplatesHidden");

	Params::UQtnPlayerNameplateManagerComponent_SetNameplatesHidden_Params Parms{};

	Parms.IsHidden = IsHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.RemoveNameplateVisibilityInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     InhibitorObject                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::RemoveNameplateVisibilityInhibitor(class UObject* InhibitorObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "RemoveNameplateVisibilityInhibitor");

	Params::UQtnPlayerNameplateManagerComponent_RemoveNameplateVisibilityInhibitor_Params Parms{};

	Parms.InhibitorObject = InhibitorObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnPlayerNameplateManagerComponent.QtnNameplateScalingEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                              NewScale                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::QtnNameplateScalingEvent__DelegateSignature(float NewScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "QtnNameplateScalingEvent__DelegateSignature");

	Params::UQtnPlayerNameplateManagerComponent_QtnNameplateScalingEvent__DelegateSignature_Params Parms{};

	Parms.NewScale = NewScale;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.GetQtnPlayerNameplateManagerComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPlayerNameplateManagerComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPlayerNameplateManagerComponent* UQtnPlayerNameplateManagerComponent::GetQtnPlayerNameplateManagerComponent(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "GetQtnPlayerNameplateManagerComponent");

	Params::UQtnPlayerNameplateManagerComponent_GetQtnPlayerNameplateManagerComponent_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.GetNameplatesScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnPlayerNameplateManagerComponent::GetNameplatesScale()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "GetNameplatesScale");

	Params::UQtnPlayerNameplateManagerComponent_GetNameplatesScale_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.EditorHelper_SetWidgetClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     ClassToSet                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::EditorHelper_SetWidgetClass(TSubclassOf<class UUserWidget> ClassToSet)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "EditorHelper_SetWidgetClass");

	Params::UQtnPlayerNameplateManagerComponent_EditorHelper_SetWidgetClass_Params Parms{};

	Parms.ClassToSet = ClassToSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.DestroyActorNameplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::DestroyActorNameplate(class AQtnPawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "DestroyActorNameplate");

	Params::UQtnPlayerNameplateManagerComponent_DestroyActorNameplate_Params Parms{};

	Parms.TargetPawn = TargetPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.AreNameplatesHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPlayerNameplateManagerComponent::AreNameplatesHidden()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "AreNameplatesHidden");

	Params::UQtnPlayerNameplateManagerComponent_AreNameplatesHidden_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerNameplateManagerComponent.AddNameplateVisibilityInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     InhibitorObject                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateManagerComponent::AddNameplateVisibilityInhibitor(class UObject* InhibitorObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateManagerComponent", "AddNameplateVisibilityInhibitor");

	Params::UQtnPlayerNameplateManagerComponent_AddNameplateVisibilityInhibitor_Params Parms{};

	Parms.InhibitorObject = InhibitorObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPlayerNameplateWidget
// (None)

class UClass* UQtnPlayerNameplateWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerNameplateWidget");

	return Clss;
}


// QtnPlayerNameplateWidget QtnGame.Default__QtnPlayerNameplateWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerNameplateWidget* UQtnPlayerNameplateWidget::GetDefaultObj()
{
	static class UQtnPlayerNameplateWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerNameplateWidget*>(UQtnPlayerNameplateWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerNameplateWidget.OnUpdateNameplateScale
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                              WidgetScale                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateWidget::OnUpdateNameplateScale(float WidgetScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateWidget", "OnUpdateNameplateScale");

	Params::UQtnPlayerNameplateWidget_OnUpdateNameplateScale_Params Parms{};

	Parms.WidgetScale = WidgetScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerNameplateWidget.OnInitializeNameplateWidgetEvent
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    Target                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerNameplateWidget::OnInitializeNameplateWidgetEvent(class AQtnPawn* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerNameplateWidget", "OnInitializeNameplateWidgetEvent");

	Params::UQtnPlayerNameplateWidget_OnInitializeNameplateWidgetEvent_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPlayerPawn
// (Actor, Pawn)

class UClass* AQtnPlayerPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerPawn");

	return Clss;
}


// QtnPlayerPawn QtnGame.Default__QtnPlayerPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPlayerPawn* AQtnPlayerPawn::GetDefaultObj()
{
	static class AQtnPlayerPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPlayerPawn*>(AQtnPlayerPawn::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerPawn.SetSuppression_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantSuppression                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::SetSuppression_ServerOnly(bool WantSuppression)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "SetSuppression_ServerOnly");

	Params::AQtnPlayerPawn_SetSuppression_ServerOnly_Params Parms{};

	Parms.WantSuppression = WantSuppression;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerToggleGhostCheat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AQtnPlayerPawn::ServerToggleGhostCheat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerToggleGhostCheat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerToggleFlyCheat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AQtnPlayerPawn::ServerToggleFlyCheat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerToggleFlyCheat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetPotentiallyRelevantBodyPawn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnBodyPawn*                PBodyPawn                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsPotentiallyRelevant                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetPotentiallyRelevantBodyPawn(class AQtnBodyPawn* PBodyPawn, bool IsPotentiallyRelevant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetPotentiallyRelevantBodyPawn");

	Params::AQtnPlayerPawn_ServerSetPotentiallyRelevantBodyPawn_Params Parms{};

	Parms.PBodyPawn = PBodyPawn;
	Parms.IsPotentiallyRelevant = IsPotentiallyRelevant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetPassiveEscape
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// bool                               WantPassiveEscape                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetPassiveEscape(bool WantPassiveEscape)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetPassiveEscape");

	Params::AQtnPlayerPawn_ServerSetPassiveEscape_Params Parms{};

	Parms.WantPassiveEscape = WantPassiveEscape;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionWorldMovement
// (Final, Net, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                     WorldMovement                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionWorldMovement(const struct FVector& WorldMovement)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionWorldMovement");

	Params::AQtnPlayerPawn_ServerSetIntentionWorldMovement_Params Parms{};

	Parms.WorldMovement = WorldMovement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionWorldLook
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              WorldLookYaw                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              WorldLookPitch                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bodyYawAlso                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionWorldLook(float WorldLookYaw, float WorldLookPitch, bool bodyYawAlso)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionWorldLook");

	Params::AQtnPlayerPawn_ServerSetIntentionWorldLook_Params Parms{};

	Parms.WorldLookYaw = WorldLookYaw;
	Parms.WorldLookPitch = WorldLookPitch;
	Parms.bodyYawAlso = bodyYawAlso;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionWorldBodyYaw
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              WorldBodyYaw                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionWorldBodyYaw(float WorldBodyYaw)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionWorldBodyYaw");

	Params::AQtnPlayerPawn_ServerSetIntentionWorldBodyYaw_Params Parms{};

	Parms.WorldBodyYaw = WorldBodyYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionTargetedObject
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UObject*                     PTargetedObject                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionTargetedObject(class UObject* PTargetedObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionTargetedObject");

	Params::AQtnPlayerPawn_ServerSetIntentionTargetedObject_Params Parms{};

	Parms.PTargetedObject = PTargetedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionStance
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// enum class EQtnBodyStance          Stance                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionStance(enum class EQtnBodyStance Stance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionStance");

	Params::AQtnPlayerPawn_ServerSetIntentionStance_Params Parms{};

	Parms.Stance = Stance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionRelativeLookYaw
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              RelativeLookYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionRelativeLookYaw(float RelativeLookYaw)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionRelativeLookYaw");

	Params::AQtnPlayerPawn_ServerSetIntentionRelativeLookYaw_Params Parms{};

	Parms.RelativeLookYaw = RelativeLookYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionEquippedItemRanged
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AQtnItem*                    PEquippedClassRanged                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionEquippedItemRanged(class AQtnItem* PEquippedClassRanged)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionEquippedItemRanged");

	Params::AQtnPlayerPawn_ServerSetIntentionEquippedItemRanged_Params Parms{};

	Parms.PEquippedClassRanged = PEquippedClassRanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetIntentionEquippedItemMelee
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AQtnItem*                    PEquippedClassMelee                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetIntentionEquippedItemMelee(class AQtnItem* PEquippedClassMelee)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetIntentionEquippedItemMelee");

	Params::AQtnPlayerPawn_ServerSetIntentionEquippedItemMelee_Params Parms{};

	Parms.PEquippedClassMelee = PEquippedClassMelee;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetHijackedPawn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnPawn*                    PPawnToHijack                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetHijackedPawn(class AQtnPawn* PPawnToHijack)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetHijackedPawn");

	Params::AQtnPlayerPawn_ServerSetHijackedPawn_Params Parms{};

	Parms.PPawnToHijack = PPawnToHijack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerSetBodyActionPressed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Pressed                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerSetBodyActionPressed(enum class EQtnUIBodyActionEnum BodyAction, bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerSetBodyActionPressed");

	Params::AQtnPlayerPawn_ServerSetBodyActionPressed_Params Parms{};

	Parms.BodyAction = BodyAction;
	Parms.Pressed = Pressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerPlayerUnOccupy
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnBodyPawn*                POccupiedBodyPawn                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ServerPlayerUnOccupy(class AQtnBodyPawn* POccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerPlayerUnOccupy");

	Params::AQtnPlayerPawn_ServerPlayerUnOccupy_Params Parms{};

	Parms.POccupiedBodyPawn = POccupiedBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ServerEnsureDevCheats
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AQtnPlayerPawn::ServerEnsureDevCheats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ServerEnsureDevCheats");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnPlayerPawn.QtnPlayerPawnUnOccupyEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::QtnPlayerPawnUnOccupyEvent__DelegateSignature(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "QtnPlayerPawnUnOccupyEvent__DelegateSignature");

	Params::AQtnPlayerPawn_QtnPlayerPawnUnOccupyEvent__DelegateSignature_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPlayerPawn.QtnPlayerPawnSuppressionEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Suppressed                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::QtnPlayerPawnSuppressionEvent__DelegateSignature(class AQtnBodyPawn* OccupiedBodyPawn, bool Suppressed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "QtnPlayerPawnSuppressionEvent__DelegateSignature");

	Params::AQtnPlayerPawn_QtnPlayerPawnSuppressionEvent__DelegateSignature_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.Suppressed = Suppressed;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPlayerPawn.QtnPlayerPawnOccupyEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FirstTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::QtnPlayerPawnOccupyEvent__DelegateSignature(class AQtnBodyPawn* OccupiedBodyPawn, bool FirstTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "QtnPlayerPawnOccupyEvent__DelegateSignature");

	Params::AQtnPlayerPawn_QtnPlayerPawnOccupyEvent__DelegateSignature_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.FirstTime = FirstTime;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnPlayerPawn.QtnPlayerPawnEquipEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnItem*                    EquippedItem                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::QtnPlayerPawnEquipEvent__DelegateSignature(class AQtnItem* EquippedItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "QtnPlayerPawnEquipEvent__DelegateSignature");

	Params::AQtnPlayerPawn_QtnPlayerPawnEquipEvent__DelegateSignature_Params Parms{};

	Parms.EquippedItem = EquippedItem;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerPawn.OnRep_OriginalBodyPawn
// (Final, Native, Private)
// Parameters:

void AQtnPlayerPawn::OnRep_OriginalBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "OnRep_OriginalBodyPawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.OnRep_IsConsciousnessSuppressed
// (Final, Native, Private)
// Parameters:

void AQtnPlayerPawn::OnRep_IsConsciousnessSuppressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "OnRep_IsConsciousnessSuppressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.OnRep_HijackedPawn
// (Final, Native, Private)
// Parameters:

void AQtnPlayerPawn::OnRep_HijackedPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "OnRep_HijackedPawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.OnPlayerPawnUnOccupy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::OnPlayerPawnUnOccupy(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "OnPlayerPawnUnOccupy");

	Params::AQtnPlayerPawn_OnPlayerPawnUnOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerPawn.OnPlayerPawnOccupy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FirstTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::OnPlayerPawnOccupy(class AQtnBodyPawn* OccupiedBodyPawn, bool FirstTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "OnPlayerPawnOccupy");

	Params::AQtnPlayerPawn_OnPlayerPawnOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.FirstTime = FirstTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerPawn.NotifyLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        NotificationText                                                 (ConstParm, Parm, NativeAccessSpecifierPublic)
// enum class EQtnNotificationType    NotificationType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::NotifyLocalPlayer(class UObject* SelfReference, class FText NotificationText, enum class EQtnNotificationType NotificationType, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "NotifyLocalPlayer");

	Params::AQtnPlayerPawn_NotifyLocalPlayer_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.NotificationText = NotificationText;
	Parms.NotificationType = NotificationType;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.MulticastSetGhostCheat
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               WantGhost                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::MulticastSetGhostCheat(bool WantGhost)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "MulticastSetGhostCheat");

	Params::AQtnPlayerPawn_MulticastSetGhostCheat_Params Parms{};

	Parms.WantGhost = WantGhost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.MulticastSetFlyCheat
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               WantFly                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::MulticastSetFlyCheat(bool WantFly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "MulticastSetFlyCheat");

	Params::AQtnPlayerPawn_MulticastSetFlyCheat_Params Parms{};

	Parms.WantFly = WantFly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.LocalSetIntentionStance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnBodyStance          Stance                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::LocalSetIntentionStance(enum class EQtnBodyStance Stance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "LocalSetIntentionStance");

	Params::AQtnPlayerPawn_LocalSetIntentionStance_Params Parms{};

	Parms.Stance = Stance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.IsCurrentlyInAMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerPawn::IsCurrentlyInAMission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "IsCurrentlyInAMission");

	Params::AQtnPlayerPawn_IsCurrentlyInAMission_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.IsConsciousnessSuppressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerPawn::IsConsciousnessSuppressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "IsConsciousnessSuppressed");

	Params::AQtnPlayerPawn_IsConsciousnessSuppressed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.IsBodyPawnPotentiallyRelevantToLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AQtnBodyPawn*                PBodyPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerPawn::IsBodyPawnPotentiallyRelevantToLocalPlayer(class AQtnBodyPawn* PBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "IsBodyPawnPotentiallyRelevantToLocalPlayer");

	Params::AQtnPlayerPawn_IsBodyPawnPotentiallyRelevantToLocalPlayer_Params Parms{};

	Parms.PBodyPawn = PBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.IsBodyPawnPotentiallyRelevantToAnyPlayer_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AQtnBodyPawn*                PBodyPawn                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerPawn::IsBodyPawnPotentiallyRelevantToAnyPlayer_ServerOnly(class AQtnBodyPawn* PBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "IsBodyPawnPotentiallyRelevantToAnyPlayer_ServerOnly");

	Params::AQtnPlayerPawn_IsBodyPawnPotentiallyRelevantToAnyPlayer_ServerOnly_Params Parms{};

	Parms.PBodyPawn = PBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.HasOptedInToPassiveEscape
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerPawn::HasOptedInToPassiveEscape()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "HasOptedInToPassiveEscape");

	Params::AQtnPlayerPawn_HasOptedInToPassiveEscape_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.HandleBodyAliveChange_ServerOnly
// (Final, Native, Private)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      AlivenessInstigator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       OldBodyAliveness                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       bodyAliveness                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::HandleBodyAliveChange_ServerOnly(class AQtnBodyPawn* bodyPawn, class AActor* AlivenessInstigator, enum class EQtnBodyAliveness OldBodyAliveness, enum class EQtnBodyAliveness bodyAliveness, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "HandleBodyAliveChange_ServerOnly");

	Params::AQtnPlayerPawn_HandleBodyAliveChange_ServerOnly_Params Parms{};

	Parms.bodyPawn = bodyPawn;
	Parms.AlivenessInstigator = AlivenessInstigator;
	Parms.OldBodyAliveness = OldBodyAliveness;
	Parms.bodyAliveness = bodyAliveness;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.GetTelepathicMessageInfo
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class FText                        Text                                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               bSeen                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::GetTelepathicMessageInfo(class FText* Text, bool* bSeen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetTelepathicMessageInfo");

	Params::AQtnPlayerPawn_GetTelepathicMessageInfo_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = Parms.Text;

	if (bSeen != nullptr)
		*bSeen = Parms.bSeen;

}


// Function QtnGame.QtnPlayerPawn.GetTeamSurvivalRatio
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumSurvivors                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TeamSize                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPlayerPawn::GetTeamSurvivalRatio(class UObject* SelfReference, int32* NumSurvivors, int32* TeamSize)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetTeamSurvivalRatio");

	Params::AQtnPlayerPawn_GetTeamSurvivalRatio_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NumSurvivors != nullptr)
		*NumSurvivors = Parms.NumSurvivors;

	if (TeamSize != nullptr)
		*TeamSize = Parms.TeamSize;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetQtnPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* AQtnPlayerPawn::GetQtnPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetQtnPlayerState");

	Params::AQtnPlayerPawn_GetQtnPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetQtnPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* AQtnPlayerPawn::GetQtnPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetQtnPlayerController");

	Params::AQtnPlayerPawn_GetQtnPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetPlayerUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerUI*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerUI* AQtnPlayerPawn::GetPlayerUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetPlayerUI");

	Params::AQtnPlayerPawn_GetPlayerUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetOriginalBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerPawn::GetOriginalBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetOriginalBodyPawn");

	Params::AQtnPlayerPawn_GetOriginalBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetOccupiedBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerPawn::GetOccupiedBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetOccupiedBodyPawn");

	Params::AQtnPlayerPawn_GetOccupiedBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetNumberOfPlayers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AQtnPlayerPawn::GetNumberOfPlayers(class UObject* SelfReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetNumberOfPlayers");

	Params::AQtnPlayerPawn_GetNumberOfPlayers_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetLocalPlayerPawn
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnPlayerPawn::GetLocalPlayerPawn(class UObject* SelfReference, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetLocalPlayerPawn");

	Params::AQtnPlayerPawn_GetLocalPlayerPawn_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetLocalPlayerOriginalBody
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerPawn::GetLocalPlayerOriginalBody(class UObject* SelfReference, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetLocalPlayerOriginalBody");

	Params::AQtnPlayerPawn_GetLocalPlayerOriginalBody_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetLocalPlayerOccupiedBody
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerPawn::GetLocalPlayerOccupiedBody(class UObject* SelfReference, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetLocalPlayerOccupiedBody");

	Params::AQtnPlayerPawn_GetLocalPlayerOccupiedBody_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetLocalPlayerInformation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerController*        PlayerController                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                PlayerUI                                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerState*             QtnPlayerState                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHosting                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::GetLocalPlayerInformation(class UObject* SelfReference, class AQtnBodyPawn** OccupiedBodyPawn, class AQtnPlayerPawn** PlayerPawn, class AQtnPlayerController** PlayerController, class AQtnPlayerUI** PlayerUI, class AQtnPlayerState** QtnPlayerState, bool* IsHosting, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetLocalPlayerInformation");

	Params::AQtnPlayerPawn_GetLocalPlayerInformation_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OccupiedBodyPawn != nullptr)
		*OccupiedBodyPawn = Parms.OccupiedBodyPawn;

	if (PlayerPawn != nullptr)
		*PlayerPawn = Parms.PlayerPawn;

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;

	if (PlayerUI != nullptr)
		*PlayerUI = Parms.PlayerUI;

	if (QtnPlayerState != nullptr)
		*QtnPlayerState = Parms.QtnPlayerState;

	if (IsHosting != nullptr)
		*IsHosting = Parms.IsHosting;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnPlayerPawn.GetLocalPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* AQtnPlayerPawn::GetLocalPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetLocalPlayerController");

	Params::AQtnPlayerPawn_GetLocalPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetHijackedPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* AQtnPlayerPawn::GetHijackedPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetHijackedPawn");

	Params::AQtnPlayerPawn_GetHijackedPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetDevCheatsComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnDevCheatsComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDevCheatsComponent* AQtnPlayerPawn::GetDevCheatsComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetDevCheatsComponent");

	Params::AQtnPlayerPawn_GetDevCheatsComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetCurrentlyControlledPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* AQtnPlayerPawn::GetCurrentlyControlledPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetCurrentlyControlledPawn");

	Params::AQtnPlayerPawn_GetCurrentlyControlledPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetAvailableBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerPawn::GetAvailableBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetAvailableBodyPawn");

	Params::AQtnPlayerPawn_GetAvailableBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerPawn.GetAllQtnPlayerBodies
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnBodyPawn*>        FoundPlayerBodies                                                (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::GetAllQtnPlayerBodies(class UObject* SelfReference, TArray<class AQtnBodyPawn*>* FoundPlayerBodies)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetAllQtnPlayerBodies");

	Params::AQtnPlayerPawn_GetAllQtnPlayerBodies_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundPlayerBodies != nullptr)
		*FoundPlayerBodies = std::move(Parms.FoundPlayerBodies);

}


// Function QtnGame.QtnPlayerPawn.GetAllPlayerPawns
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPlayerPawn*>      FoundPlayerPawns                                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::GetAllPlayerPawns(class UObject* SelfReference, TArray<class AQtnPlayerPawn*>* FoundPlayerPawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "GetAllPlayerPawns");

	Params::AQtnPlayerPawn_GetAllPlayerPawns_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundPlayerPawns != nullptr)
		*FoundPlayerPawns = std::move(Parms.FoundPlayerPawns);

}


// Function QtnGame.QtnPlayerPawn.ClientSetIntentionEquippedItemRanged
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AQtnItem*                    PEquippedItemRanged                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UNSET                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ClientSetIntentionEquippedItemRanged(class AQtnItem* PEquippedItemRanged, bool UNSET)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ClientSetIntentionEquippedItemRanged");

	Params::AQtnPlayerPawn_ClientSetIntentionEquippedItemRanged_Params Parms{};

	Parms.PEquippedItemRanged = PEquippedItemRanged;
	Parms.UNSET = UNSET;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ClientSetIntentionEquippedItemMelee
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AQtnItem*                    PEquippedItemMelee                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UNSET                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ClientSetIntentionEquippedItemMelee(class AQtnItem* PEquippedItemMelee, bool UNSET)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ClientSetIntentionEquippedItemMelee");

	Params::AQtnPlayerPawn_ClientSetIntentionEquippedItemMelee_Params Parms{};

	Parms.PEquippedItemMelee = PEquippedItemMelee;
	Parms.UNSET = UNSET;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ClientSetIntentionAction
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// struct FQtnActionIntention         ActionIntention                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPlayerPawn::ClientSetIntentionAction(const struct FQtnActionIntention& ActionIntention)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ClientSetIntentionAction");

	Params::AQtnPlayerPawn_ClientSetIntentionAction_Params Parms{};

	Parms.ActionIntention = ActionIntention;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerPawn.ClearHijackedpawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPlayerPawn::ClearHijackedpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerPawn", "ClearHijackedpawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPlayerPawnMovement
// (None)

class UClass* UQtnPlayerPawnMovement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerPawnMovement");

	return Clss;
}


// QtnPlayerPawnMovement QtnGame.Default__QtnPlayerPawnMovement
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerPawnMovement* UQtnPlayerPawnMovement::GetDefaultObj()
{
	static class UQtnPlayerPawnMovement* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerPawnMovement*>(UQtnPlayerPawnMovement::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnPlayerRunProgress
// (None)

class UClass* UQtnPlayerRunProgress::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerRunProgress");

	return Clss;
}


// QtnPlayerRunProgress QtnGame.Default__QtnPlayerRunProgress
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPlayerRunProgress* UQtnPlayerRunProgress::GetDefaultObj()
{
	static class UQtnPlayerRunProgress* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPlayerRunProgress*>(UQtnPlayerRunProgress::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerRunProgress.OnRunProgressReset_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnPlayerRunProgress::OnRunProgressReset_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnRunProgressReset_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnPlayerRunProgress.OnRunProgressCheckpoint_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FlushMissionProgress                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerRunProgress::OnRunProgressCheckpoint_ServerOnly(class AQtnBodyPawn* PlayerBody, bool FlushMissionProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnRunProgressCheckpoint_ServerOnly");

	Params::UQtnPlayerRunProgress_OnRunProgressCheckpoint_ServerOnly_Params Parms{};

	Parms.PlayerBody = PlayerBody;
	Parms.FlushMissionProgress = FlushMissionProgress;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerRunProgress.OnReadyForGameplay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               HasCheckpointHappened                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerRunProgress::OnReadyForGameplay_ServerOnly(class AQtnPlayerPawn* PlayerPawn, class AQtnBodyPawn* PlayerBody, bool HasCheckpointHappened)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnReadyForGameplay_ServerOnly");

	Params::UQtnPlayerRunProgress_OnReadyForGameplay_ServerOnly_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.PlayerBody = PlayerBody;
	Parms.HasCheckpointHappened = HasCheckpointHappened;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerRunProgress.OnPlayerRunProgressInit_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnPlayerRunProgress::OnPlayerRunProgressInit_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnPlayerRunProgressInit_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnPlayerRunProgress.OnMapEndPlay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               TravelPending                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerRunProgress::OnMapEndPlay_ServerOnly(bool TravelPending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnMapEndPlay_ServerOnly");

	Params::UQtnPlayerRunProgress_OnMapEndPlay_ServerOnly_Params Parms{};

	Parms.TravelPending = TravelPending;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerRunProgress.OnMapBeginPlay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnPlayerRunProgress::OnMapBeginPlay_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnMapBeginPlay_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnPlayerRunProgress.OnExitWorld_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerRunProgress::OnExitWorld_ServerOnly(class AQtnPlayerPawn* PlayerPawn, class AQtnBodyPawn* PlayerBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnExitWorld_ServerOnly");

	Params::UQtnPlayerRunProgress_OnExitWorld_ServerOnly_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.PlayerBody = PlayerBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerRunProgress.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnPlayerRunProgress::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "OnDebugDisplay");

	Params::UQtnPlayerRunProgress_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerRunProgress.HasCheckpointHappened_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnPlayerRunProgress::HasCheckpointHappened_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "HasCheckpointHappened_ServerOnly");

	Params::UQtnPlayerRunProgress_HasCheckpointHappened_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerRunProgress.GetPlayerSubProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnPlayerRunProgress>SubProgressArchetype                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPlayerRunProgress*       ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPlayerRunProgress* UQtnPlayerRunProgress::GetPlayerSubProgress_ServerOnly(TSubclassOf<class UQtnPlayerRunProgress> SubProgressArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "GetPlayerSubProgress_ServerOnly");

	Params::UQtnPlayerRunProgress_GetPlayerSubProgress_ServerOnly_Params Parms{};

	Parms.SubProgressArchetype = SubProgressArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerRunProgress.GetAssociatedPlayerState_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* UQtnPlayerRunProgress::GetAssociatedPlayerState_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "GetAssociatedPlayerState_ServerOnly");

	Params::UQtnPlayerRunProgress_GetAssociatedPlayerState_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerRunProgress.GetAssociatedPlayerBody_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnPlayerRunProgress::GetAssociatedPlayerBody_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "GetAssociatedPlayerBody_ServerOnly");

	Params::UQtnPlayerRunProgress_GetAssociatedPlayerBody_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerRunProgress.AddPlayerSubProgress_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnPlayerRunProgress>SubProgressArchetype                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnPlayerRunProgress*       ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPlayerRunProgress* UQtnPlayerRunProgress::AddPlayerSubProgress_ServerOnly(TSubclassOf<class UQtnPlayerRunProgress> SubProgressArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerRunProgress", "AddPlayerSubProgress_ServerOnly");

	Params::UQtnPlayerRunProgress_AddPlayerSubProgress_ServerOnly_Params Parms{};

	Parms.SubProgressArchetype = SubProgressArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnPlayerStart
// (Actor)

class UClass* AQtnPlayerStart::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerStart");

	return Clss;
}


// QtnPlayerStart QtnGame.Default__QtnPlayerStart
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPlayerStart* AQtnPlayerStart::GetDefaultObj()
{
	static class AQtnPlayerStart* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPlayerStart*>(AQtnPlayerStart::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerStart.IsPlayerStartValid
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int32                              Arc                                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerStart::IsPlayerStartValid(int32 Arc)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerStart", "IsPlayerStartValid");

	Params::AQtnPlayerStart_IsPlayerStartValid_Params Parms{};

	Parms.Arc = Arc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnPlayerState
// (Actor)

class UClass* AQtnPlayerState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerState");

	return Clss;
}


// QtnPlayerState QtnGame.Default__QtnPlayerState
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPlayerState* AQtnPlayerState::GetDefaultObj()
{
	static class AQtnPlayerState* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPlayerState*>(AQtnPlayerState::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerState.StaticGetLocalPlayerState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* AQtnPlayerState::StaticGetLocalPlayerState(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "StaticGetLocalPlayerState");

	Params::AQtnPlayerState_StaticGetLocalPlayerState_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.ServerSetLobbyReadyState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Ready                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerState::ServerSetLobbyReadyState(bool Ready)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "ServerSetLobbyReadyState");

	Params::AQtnPlayerState_ServerSetLobbyReadyState_Params Parms{};

	Parms.Ready = Ready;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerState.ServerAcknowledgeSaveLoadReadiness
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AQtnPlayerState::ServerAcknowledgeSaveLoadReadiness()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "ServerAcknowledgeSaveLoadReadiness");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerState.QtnGetUniqueId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl            ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl AQtnPlayerState::QtnGetUniqueId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "QtnGetUniqueId");

	Params::AQtnPlayerState_QtnGetUniqueId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.OnRep_LobbyReadyState
// (Final, Native, Public)
// Parameters:

void AQtnPlayerState::OnRep_LobbyReadyState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "OnRep_LobbyReadyState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerState.MatchesQtnUniqueId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl            InUniqueId                                                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerState::MatchesQtnUniqueId(struct FUniqueNetIdRepl& InUniqueId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "MatchesQtnUniqueId");

	Params::AQtnPlayerState_MatchesQtnUniqueId_Params Parms{};

	Parms.InUniqueId = InUniqueId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.IsPlayerTalking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerState::IsPlayerTalking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "IsPlayerTalking");

	Params::AQtnPlayerState_IsPlayerTalking_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.IsLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerState::IsLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "IsLocalPlayer");

	Params::AQtnPlayerState_IsLocalPlayer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.IsHost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerState::IsHost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "IsHost");

	Params::AQtnPlayerState_IsHost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.GotBannedByHost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerState::GotBannedByHost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "GotBannedByHost");

	Params::AQtnPlayerState_GotBannedByHost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.GetRelevantPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnPlayerState::GetRelevantPing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "GetRelevantPing");

	Params::AQtnPlayerState_GetRelevantPing_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.GetOwningPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnPlayerState::GetOwningPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "GetOwningPlayerPawn");

	Params::AQtnPlayerState_GetOwningPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.GetKnownPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* AQtnPlayerState::GetKnownPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "GetKnownPlayerController");

	Params::AQtnPlayerState_GetKnownPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.GetHumanReadableName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AQtnPlayerState::GetHumanReadableName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "GetHumanReadableName");

	Params::AQtnPlayerState_GetHumanReadableName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.GetAuthoritativePlayerArrayIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AQtnPlayerState::GetAuthoritativePlayerArrayIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "GetAuthoritativePlayerArrayIndex");

	Params::AQtnPlayerState_GetAuthoritativePlayerArrayIndex_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerState.GetAllPlayerStates
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPlayerState*>     CurrentPlayerStates                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AQtnPlayerState::GetAllPlayerStates(class UObject* SelfReference, TArray<class AQtnPlayerState*>* CurrentPlayerStates)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "GetAllPlayerStates");

	Params::AQtnPlayerState_GetAllPlayerStates_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CurrentPlayerStates != nullptr)
		*CurrentPlayerStates = std::move(Parms.CurrentPlayerStates);

}


// Function QtnGame.QtnPlayerState.ClientNotifyKicked
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               banFromReentering                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        KickReason                                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AQtnPlayerState::ClientNotifyKicked(bool banFromReentering, class FText& KickReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerState", "ClientNotifyKicked");

	Params::AQtnPlayerState_ClientNotifyKicked_Params Parms{};

	Parms.banFromReentering = banFromReentering;
	Parms.KickReason = KickReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPlayerUI
// (Actor)

class UClass* AQtnPlayerUI::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPlayerUI");

	return Clss;
}


// QtnPlayerUI QtnGame.Default__QtnPlayerUI
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPlayerUI* AQtnPlayerUI::GetDefaultObj()
{
	static class AQtnPlayerUI* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPlayerUI*>(AQtnPlayerUI::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPlayerUI.UnRegisterScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::UnRegisterScreen(TSubclassOf<class UQtnScreen> ScreenClass, enum class EQtnScreenStackEnum ScreenStackIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "UnRegisterScreen");

	Params::AQtnPlayerUI_UnRegisterScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;
	Parms.ScreenStackIndex = ScreenStackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.ToggleScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::ToggleScreen(TSubclassOf<class UQtnScreen> ScreenClass, enum class EQtnScreenStackEnum ScreenStackIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "ToggleScreen");

	Params::AQtnPlayerUI_ToggleScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;
	Parms.ScreenStackIndex = ScreenStackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.ShowScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::ShowScreen(TSubclassOf<class UQtnScreen> ScreenClass, enum class EQtnScreenStackEnum ScreenStackIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "ShowScreen");

	Params::AQtnPlayerUI_ShowScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;
	Parms.ScreenStackIndex = ScreenStackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.ShowPopUpMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                        TextToShow                                                       (Parm, NativeAccessSpecifierPublic)
// float                              PopUpTime                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsQueued                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::ShowPopUpMessage(class FText TextToShow, float PopUpTime, bool IsQueued)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "ShowPopUpMessage");

	Params::AQtnPlayerUI_ShowPopUpMessage_Params Parms{};

	Parms.TextToShow = TextToShow;
	Parms.PopUpTime = PopUpTime;
	Parms.IsQueued = IsQueued;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.ShowHint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                        HintText                                                         (Parm, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowEvenIfUIDisabled                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::ShowHint(class FText HintText, float Duration, bool ShowEvenIfUIDisabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "ShowHint");

	Params::AQtnPlayerUI_ShowHint_Params Parms{};

	Parms.HintText = HintText;
	Parms.Duration = Duration;
	Parms.ShowEvenIfUIDisabled = ShowEvenIfUIDisabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.RegisterScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* AQtnPlayerUI::RegisterScreen(TSubclassOf<class UQtnScreen> ScreenClass, enum class EQtnScreenStackEnum ScreenStackIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "RegisterScreen");

	Params::AQtnPlayerUI_RegisterScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;
	Parms.ScreenStackIndex = ScreenStackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.QueueSimpleModalDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                        Title                                                            (Parm, NativeAccessSpecifierPublic)
// class FText                        Message                                                          (Parm, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* AQtnPlayerUI::QueueSimpleModalDialog(class FText Title, class FText Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QueueSimpleModalDialog");

	Params::AQtnPlayerUI_QueueSimpleModalDialog_Params Parms{};

	Parms.Title = Title;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.QueueNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                        NotificationText                                                 (Parm, NativeAccessSpecifierPublic)
// float                              MinNotificationDuration                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QueueNotification(class FText NotificationText, float MinNotificationDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QueueNotification");

	Params::AQtnPlayerUI_QueueNotification_Params Parms{};

	Parms.NotificationText = NotificationText;
	Parms.MinNotificationDuration = MinNotificationDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QueueModalDialog
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                        Title                                                            (Parm, NativeAccessSpecifierPublic)
// class FText                        Message                                                          (Parm, NativeAccessSpecifierPublic)
// class UObject*                     ConfigObject                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnModalDialogType     ModalDialogType                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// FDelegateProperty_                 DialogFinishedDelegate                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               MustScrollToBottom                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* AQtnPlayerUI::QueueModalDialog(class FText Title, class FText Message, class UObject* ConfigObject, enum class EQtnModalDialogType ModalDialogType, FDelegateProperty_& DialogFinishedDelegate, bool MustScrollToBottom)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QueueModalDialog");

	Params::AQtnPlayerUI_QueueModalDialog_Params Parms{};

	Parms.Title = Title;
	Parms.Message = Message;
	Parms.ConfigObject = ConfigObject;
	Parms.ModalDialogType = ModalDialogType;
	Parms.DialogFinishedDelegate = DialogFinishedDelegate;
	Parms.MustScrollToBottom = MustScrollToBottom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.QueueErrorDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                        Title                                                            (Parm, NativeAccessSpecifierPublic)
// class FText                        Message                                                          (Parm, NativeAccessSpecifierPublic)
// struct FQtnOnlineErrorCode         ErrorCode                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QueueErrorDialog(class FText Title, class FText Message, const struct FQtnOnlineErrorCode& ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QueueErrorDialog");

	Params::AQtnPlayerUI_QueueErrorDialog_Params Parms{};

	Parms.Title = Title;
	Parms.Message = Message;
	Parms.ErrorCode = ErrorCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnToggleUI
// (Final, Exec, Native, Public)
// Parameters:

void AQtnPlayerUI::QtnToggleUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnToggleUI");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnSetUIEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantEnabled                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     UiInhibitor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QtnSetUIEnabled(bool WantEnabled, class UObject* UiInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnSetUIEnabled");

	Params::AQtnPlayerUI_QtnSetUIEnabled_Params Parms{};

	Parms.WantEnabled = WantEnabled;
	Parms.UiInhibitor = UiInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnLetThereBeLight
// (Final, Exec, Native, Public)
// Parameters:

void AQtnPlayerUI::QtnLetThereBeLight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnLetThereBeLight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnPlayerUI.QtnInputUsageChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               IsUsingMouseAndKeyboard                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QtnInputUsageChangeEvent__DelegateSignature(bool IsUsingMouseAndKeyboard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnInputUsageChangeEvent__DelegateSignature");

	Params::AQtnPlayerUI_QtnInputUsageChangeEvent__DelegateSignature_Params Parms{};

	Parms.IsUsingMouseAndKeyboard = IsUsingMouseAndKeyboard;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerUI.QtnDebugUI
// (Final, Exec, Native, Private)
// Parameters:

void AQtnPlayerUI::QtnDebugUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnDebugUI");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnDebugPageSet
// (Final, Exec, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              PageIndex                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QtnDebugPageSet(int32& PageIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnDebugPageSet");

	Params::AQtnPlayerUI_QtnDebugPageSet_Params Parms{};

	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnDebugActor
// (Final, Exec, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                      ActorName                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QtnDebugActor(class FString& ActorName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnDebugActor");

	Params::AQtnPlayerUI_QtnDebugActor_Params Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnBugItHotKey
// (Final, Native, Private)
// Parameters:

void AQtnPlayerUI::QtnBugItHotKey()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnBugItHotKey");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnBugItGo
// (Final, Exec, Native, Private)
// Parameters:
// float                              X                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Y                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Z                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Pitch                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Yaw                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Roll                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QtnBugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnBugItGo");

	Params::AQtnPlayerUI_QtnBugItGo_Params Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;
	Parms.Roll = Roll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.QtnBugIt
// (Final, Exec, Native, Private)
// Parameters:
// class FString                      ScreenShotDescription                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::QtnBugIt(const class FString& ScreenShotDescription)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "QtnBugIt");

	Params::AQtnPlayerUI_QtnBugIt_Params Parms{};

	Parms.ScreenShotDescription = ScreenShotDescription;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.OnPlayerUIUnOccupy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::OnPlayerUIUnOccupy(class AQtnBodyPawn* OccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "OnPlayerUIUnOccupy");

	Params::AQtnPlayerUI_OnPlayerUIUnOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerUI.OnPlayerUIUnHijack
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    HijackedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::OnPlayerUIUnHijack(class AQtnPawn* HijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "OnPlayerUIUnHijack");

	Params::AQtnPlayerUI_OnPlayerUIUnHijack_Params Parms{};

	Parms.HijackedPawn = HijackedPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerUI.OnPlayerUIReadyForGameplay
// (Event, Protected, BlueprintEvent)
// Parameters:

void AQtnPlayerUI::OnPlayerUIReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "OnPlayerUIReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnPlayerUI.OnPlayerUIOccupy
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnBodyPawn*                OccupiedBodyPawn                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FirstTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::OnPlayerUIOccupy(class AQtnBodyPawn* OccupiedBodyPawn, bool FirstTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "OnPlayerUIOccupy");

	Params::AQtnPlayerUI_OnPlayerUIOccupy_Params Parms{};

	Parms.OccupiedBodyPawn = OccupiedBodyPawn;
	Parms.FirstTime = FirstTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerUI.OnPlayerUIHijack
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AQtnPawn*                    HijackedPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::OnPlayerUIHijack(class AQtnPawn* HijackedPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "OnPlayerUIHijack");

	Params::AQtnPlayerUI_OnPlayerUIHijack_Params Parms{};

	Parms.HijackedPawn = HijackedPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerUI.OnDamageApplied
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AQtnPlayerUI::OnDamageApplied(struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactionInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "OnDamageApplied");

	Params::AQtnPlayerUI_OnDamageApplied_Params Parms{};

	Parms.DamageInfo = DamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnPlayerUI.IsUsingMouseAndKeyboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsUsingMouseAndKeyboard()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsUsingMouseAndKeyboard");

	Params::AQtnPlayerUI_IsUsingMouseAndKeyboard_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.IsUIHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsUIHidden()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsUIHidden");

	Params::AQtnPlayerUI_IsUIHidden_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.IsScreenActionPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EQtnUIScreenActionEnum  ScreenAction                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsScreenActionPressed(enum class EQtnUIScreenActionEnum ScreenAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsScreenActionPressed");

	Params::AQtnPlayerUI_IsScreenActionPressed_Params Parms{};

	Parms.ScreenAction = ScreenAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.IsReadyForSafeUsage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsReadyForSafeUsage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsReadyForSafeUsage");

	Params::AQtnPlayerUI_IsReadyForSafeUsage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.IsReadyForGameplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsReadyForGameplay");

	Params::AQtnPlayerUI_IsReadyForGameplay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.IsLocalPlayerUIReadyBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsLocalPlayerUIReadyBP(class UObject* SelfReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsLocalPlayerUIReadyBP");

	Params::AQtnPlayerUI_IsLocalPlayerUIReadyBP_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.IsBodyActionPressed
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnPawnIntentions          PawnIntentions                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsBodyActionPressed(struct FQtnPawnIntentions& PawnIntentions, enum class EQtnUIBodyActionEnum BodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsBodyActionPressed");

	Params::AQtnPlayerUI_IsBodyActionPressed_Params Parms{};

	Parms.PawnIntentions = PawnIntentions;
	Parms.BodyAction = BodyAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.IsAnyBodyActionPressed
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnPawnIntentions          PawnIntentions                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPlayerUI::IsAnyBodyActionPressed(struct FQtnPawnIntentions& PawnIntentions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "IsAnyBodyActionPressed");

	Params::AQtnPlayerUI_IsAnyBodyActionPressed_Params Parms{};

	Parms.PawnIntentions = PawnIntentions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.HideScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UnRegister                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::HideScreen(TSubclassOf<class UQtnScreen> ScreenClass, enum class EQtnScreenStackEnum ScreenStackIndex, bool UnRegister)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "HideScreen");

	Params::AQtnPlayerUI_HideScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;
	Parms.ScreenStackIndex = ScreenStackIndex;
	Parms.UnRegister = UnRegister;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.HideHint
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPlayerUI::HideHint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "HideHint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.HideAllScreens
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AQtnPlayerUI::HideAllScreens()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "HideAllScreens");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.HandleItemRemoveNotification
// (Final, Native, Private)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::HandleItemRemoveNotification(TSubclassOf<class AQtnItem> ItemClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "HandleItemRemoveNotification");

	Params::AQtnPlayerUI_HandleItemRemoveNotification_Params Parms{};

	Parms.ItemClass = ItemClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.HandleItemAddNotification
// (Final, Native, Private)
// Parameters:
// TSubclassOf<class AQtnItem>        ItemClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::HandleItemAddNotification(TSubclassOf<class AQtnItem> ItemClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "HandleItemAddNotification");

	Params::AQtnPlayerUI_HandleItemAddNotification_Params Parms{};

	Parms.ItemClass = ItemClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.HandleItemAddDisplayDataOnlyNotification
// (Final, Native, Private)
// Parameters:
// class FText                        InDisplayName                                                    (Parm, NativeAccessSpecifierPublic)

void AQtnPlayerUI::HandleItemAddDisplayDataOnlyNotification(class FText InDisplayName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "HandleItemAddDisplayDataOnlyNotification");

	Params::AQtnPlayerUI_HandleItemAddDisplayDataOnlyNotification_Params Parms{};

	Parms.InDisplayName = InDisplayName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.GetViewportHUD
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnViewportHUD*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnViewportHUD* AQtnPlayerUI::GetViewportHUD()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetViewportHUD");

	Params::AQtnPlayerUI_GetViewportHUD_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetTrackedThreats
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPawn*> AQtnPlayerUI::GetTrackedThreats()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetTrackedThreats");

	Params::AQtnPlayerUI_GetTrackedThreats_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetScreenThatOwnsThisWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                 UserWidget                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckSubScreens                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* AQtnPlayerUI::GetScreenThatOwnsThisWidget(class UUserWidget* UserWidget, enum class EQtnScreenStackEnum ScreenStackIndex, bool CheckSubScreens)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetScreenThatOwnsThisWidget");

	Params::AQtnPlayerUI_GetScreenThatOwnsThisWidget_Params Parms{};

	Parms.UserWidget = UserWidget;
	Parms.ScreenStackIndex = ScreenStackIndex;
	Parms.CheckSubScreens = CheckSubScreens;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnScreen>      ScreenClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckForInheritedClasses                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RegisterOnDemand                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* AQtnPlayerUI::GetScreen(TSubclassOf<class UQtnScreen> ScreenClass, enum class EQtnScreenStackEnum ScreenStackIndex, bool CheckForInheritedClasses, bool RegisterOnDemand)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetScreen");

	Params::AQtnPlayerUI_GetScreen_Params Parms{};

	Parms.ScreenClass = ScreenClass;
	Parms.ScreenStackIndex = ScreenStackIndex;
	Parms.CheckForInheritedClasses = CheckForInheritedClasses;
	Parms.RegisterOnDemand = RegisterOnDemand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetRightStickInput
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AQtnPlayerUI::GetRightStickInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetRightStickInput");

	Params::AQtnPlayerUI_GetRightStickInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetOwningQtnPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerState*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerState* AQtnPlayerUI::GetOwningQtnPlayerState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetOwningQtnPlayerState");

	Params::AQtnPlayerUI_GetOwningQtnPlayerState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetOwningQtnPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* AQtnPlayerUI::GetOwningQtnPlayerController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetOwningQtnPlayerController");

	Params::AQtnPlayerUI_GetOwningQtnPlayerController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetOwningPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPlayerPawn*              ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerPawn* AQtnPlayerUI::GetOwningPlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetOwningPlayerPawn");

	Params::AQtnPlayerUI_GetOwningPlayerPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetOccupiedBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* AQtnPlayerUI::GetOccupiedBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetOccupiedBody");

	Params::AQtnPlayerUI_GetOccupiedBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetMousePosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AQtnPlayerUI::GetMousePosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetMousePosition");

	Params::AQtnPlayerUI_GetMousePosition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetMouseDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AQtnPlayerUI::GetMouseDelta()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetMouseDelta");

	Params::AQtnPlayerUI_GetMouseDelta_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetMostRecentCustomTutorialArchetype
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnTutorial>    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnTutorial> AQtnPlayerUI::GetMostRecentCustomTutorialArchetype()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetMostRecentCustomTutorialArchetype");

	Params::AQtnPlayerUI_GetMostRecentCustomTutorialArchetype_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetMessagingHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnScreenMessagingHUD*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreenMessagingHUD* AQtnPlayerUI::GetMessagingHUD()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetMessagingHUD");

	Params::AQtnPlayerUI_GetMessagingHUD_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetLocalPlayerUIBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                LocalPlayerUI                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::GetLocalPlayerUIBP(class UObject* SelfReference, class AQtnPlayerUI** LocalPlayerUI, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetLocalPlayerUIBP");

	Params::AQtnPlayerUI_GetLocalPlayerUIBP_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LocalPlayerUI != nullptr)
		*LocalPlayerUI = Parms.LocalPlayerUI;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnPlayerUI.GetLeftStickInput
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AQtnPlayerUI::GetLeftStickInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetLeftStickInput");

	Params::AQtnPlayerUI_GetLeftStickInput_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetDebugTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnPlayerUI::GetDebugTargetActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetDebugTargetActor");

	Params::AQtnPlayerUI_GetDebugTargetActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetDebugCanvas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCanvas*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvas* AQtnPlayerUI::GetDebugCanvas()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetDebugCanvas");

	Params::AQtnPlayerUI_GetDebugCanvas_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetCursorPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AQtnPlayerUI::GetCursorPosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetCursorPosition");

	Params::AQtnPlayerUI_GetCursorPosition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetCursorDelta
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D AQtnPlayerUI::GetCursorDelta()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetCursorDelta");

	Params::AQtnPlayerUI_GetCursorDelta_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetButtonGlyphFromBodyAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnUIBodyActionEnum    BodyAction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               EncloseKeyboardKeysInBrackets                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AQtnPlayerUI::GetButtonGlyphFromBodyAction(class UObject* SelfReference, enum class EQtnUIBodyActionEnum BodyAction, bool EncloseKeyboardKeysInBrackets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetButtonGlyphFromBodyAction");

	Params::AQtnPlayerUI_GetButtonGlyphFromBodyAction_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.BodyAction = BodyAction;
	Parms.EncloseKeyboardKeysInBrackets = EncloseKeyboardKeysInBrackets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetBugItInfoFromBP
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AQtnPlayerUI::GetBugItInfoFromBP()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetBugItInfoFromBP");

	Params::AQtnPlayerUI_GetBugItInfoFromBP_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.GetAffordanceInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnAffordanceInfo          AffordanceInfo                                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void AQtnPlayerUI::GetAffordanceInfo(struct FQtnAffordanceInfo* AffordanceInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetAffordanceInfo");

	Params::AQtnPlayerUI_GetAffordanceInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AffordanceInfo != nullptr)
		*AffordanceInfo = std::move(Parms.AffordanceInfo);

}


// Function QtnGame.QtnPlayerUI.GetActiveScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnScreenStackEnum     ScreenStackIndex                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnScreen*                  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnScreen* AQtnPlayerUI::GetActiveScreen(enum class EQtnScreenStackEnum ScreenStackIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "GetActiveScreen");

	Params::AQtnPlayerUI_GetActiveScreen_Params Parms{};

	Parms.ScreenStackIndex = ScreenStackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPlayerUI.ForceInputChangeEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::ForceInputChangeEvent(class UObject* SelfReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "ForceInputChangeEvent");

	Params::AQtnPlayerUI_ForceInputChangeEvent_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.DebugActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ActorToDebug                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::DebugActor(class AActor* ActorToDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "DebugActor");

	Params::AQtnPlayerUI_DebugActor_Params Parms{};

	Parms.ActorToDebug = ActorToDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.BugItGo
// (Final, Exec, Native, Private)
// Parameters:
// float                              X                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Y                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Z                                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Pitch                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Yaw                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Roll                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "BugItGo");

	Params::AQtnPlayerUI_BugItGo_Params Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;
	Parms.Roll = Roll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPlayerUI.BugIt
// (Final, Exec, Native, Private)
// Parameters:
// class FString                      ScreenShotDescription                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnPlayerUI::BugIt(const class FString& ScreenShotDescription)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPlayerUI", "BugIt");

	Params::AQtnPlayerUI_BugIt_Params Parms{};

	Parms.ScreenShotDescription = ScreenShotDescription;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnPoolableActor
// (Actor)

class UClass* AQtnPoolableActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPoolableActor");

	return Clss;
}


// QtnPoolableActor QtnGame.Default__QtnPoolableActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnPoolableActor* AQtnPoolableActor::GetDefaultObj()
{
	static class AQtnPoolableActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnPoolableActor*>(AQtnPoolableActor::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnPoolableActor.OnReusedFromPool
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnPoolableActor::OnReusedFromPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPoolableActor", "OnReusedFromPool");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnPoolableActor.OnRep_PoollingInfo
// (Final, Native, Public)
// Parameters:

void AQtnPoolableActor::OnRep_PoollingInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPoolableActor", "OnRep_PoollingInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnPoolableActor.OnReclaimToPool
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnPoolableActor::OnReclaimToPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPoolableActor", "OnReclaimToPool");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnPoolableActor.IsPoolingEnabled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnPoolableActor::IsPoolingEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPoolableActor", "IsPoolingEnabled");

	Params::AQtnPoolableActor_IsPoolingEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnPoolableActor.GetPoolingState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnActorPoolingState   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnActorPoolingState AQtnPoolableActor::GetPoolingState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnPoolableActor", "GetPoolingState");

	Params::AQtnPoolableActor_GetPoolingState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnPostProcessFX
// (None)

class UClass* UQtnPostProcessFX::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnPostProcessFX");

	return Clss;
}


// QtnPostProcessFX QtnGame.Default__QtnPostProcessFX
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnPostProcessFX* UQtnPostProcessFX::GetDefaultObj()
{
	static class UQtnPostProcessFX* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnPostProcessFX*>(UQtnPostProcessFX::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnProgressLoadState
// (None)

class UClass* UQtnProgressLoadState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProgressLoadState");

	return Clss;
}


// QtnProgressLoadState QtnGame.Default__QtnProgressLoadState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnProgressLoadState* UQtnProgressLoadState::GetDefaultObj()
{
	static class UQtnProgressLoadState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnProgressLoadState*>(UQtnProgressLoadState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnProgressSaveData
// (None)

class UClass* UQtnProgressSaveData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProgressSaveData");

	return Clss;
}


// QtnProgressSaveData QtnGame.Default__QtnProgressSaveData
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnProgressSaveData* UQtnProgressSaveData::GetDefaultObj()
{
	static class UQtnProgressSaveData* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnProgressSaveData*>(UQtnProgressSaveData::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnProgressSaveData.GetTutorialDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnTutorialDataBag*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnTutorialDataBag* UQtnProgressSaveData::GetTutorialDataBag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProgressSaveData", "GetTutorialDataBag");

	Params::UQtnProgressSaveData_GetTutorialDataBag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProgressSaveData.GetPlayerDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnPlayerDataBag*           ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnPlayerDataBag* UQtnProgressSaveData::GetPlayerDataBag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProgressSaveData", "GetPlayerDataBag");

	Params::UQtnProgressSaveData_GetPlayerDataBag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProgressSaveData.GetNarrativeDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnNarrativeDataBag*        ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnNarrativeDataBag* UQtnProgressSaveData::GetNarrativeDataBag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProgressSaveData", "GetNarrativeDataBag");

	Params::UQtnProgressSaveData_GetNarrativeDataBag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProgressSaveData.GetBodyDataBag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnBodyDataBag*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnBodyDataBag* UQtnProgressSaveData::GetBodyDataBag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProgressSaveData", "GetBodyDataBag");

	Params::UQtnProgressSaveData_GetBodyDataBag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnProgressSaveState
// (None)

class UClass* UQtnProgressSaveState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProgressSaveState");

	return Clss;
}


// QtnProgressSaveState QtnGame.Default__QtnProgressSaveState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnProgressSaveState* UQtnProgressSaveState::GetDefaultObj()
{
	static class UQtnProgressSaveState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnProgressSaveState*>(UQtnProgressSaveState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnProjectile
// (Actor)

class UClass* AQtnProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProjectile");

	return Clss;
}


// QtnProjectile QtnGame.Default__QtnProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnProjectile* AQtnProjectile::GetDefaultObj()
{
	static class AQtnProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnProjectile*>(AQtnProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnProjectile.SetSweepDebugging
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               SetToDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::SetSweepDebugging(bool SetToDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "SetSweepDebugging");

	Params::AQtnProjectile_SetSweepDebugging_Params Parms{};

	Parms.SetToDebug = SetToDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.SetProjectileVelocity_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     NewVelocity                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::SetProjectileVelocity_ServerOnly(const struct FVector& NewVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "SetProjectileVelocity_ServerOnly");

	Params::AQtnProjectile_SetProjectileVelocity_ServerOnly_Params Parms{};

	Parms.NewVelocity = NewVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.SetProjectileGravityScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              GravityScale                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::SetProjectileGravityScale(float GravityScale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "SetProjectileGravityScale");

	Params::AQtnProjectile_SetProjectileGravityScale_Params Parms{};

	Parms.GravityScale = GravityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.ReflectProjectileAtPawn_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnVerb*                    ReflectingVerb                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReflectingActor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    NewCulprit                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    TargetPawn                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::ReflectProjectileAtPawn_ServerOnly(class UQtnVerb* ReflectingVerb, class AActor* ReflectingActor, class AQtnPawn* NewCulprit, class AQtnPawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "ReflectProjectileAtPawn_ServerOnly");

	Params::AQtnProjectile_ReflectProjectileAtPawn_ServerOnly_Params Parms{};

	Parms.ReflectingVerb = ReflectingVerb;
	Parms.ReflectingActor = ReflectingActor;
	Parms.NewCulprit = NewCulprit;
	Parms.TargetPawn = TargetPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.ReflectProjectile_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UQtnVerb*                    ReflectingVerb                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReflectingActor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    NewCulprit                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NewVelocity                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::ReflectProjectile_ServerOnly(class UQtnVerb* ReflectingVerb, class AActor* ReflectingActor, class AQtnPawn* NewCulprit, struct FVector& NewVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "ReflectProjectile_ServerOnly");

	Params::AQtnProjectile_ReflectProjectile_ServerOnly_Params Parms{};

	Parms.ReflectingVerb = ReflectingVerb;
	Parms.ReflectingActor = ReflectingActor;
	Parms.NewCulprit = NewCulprit;
	Parms.NewVelocity = NewVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.OnRep_SourceVerb
// (Final, Native, Protected)
// Parameters:

void AQtnProjectile::OnRep_SourceVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnRep_SourceVerb");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.OnRep_LaunchVelocity
// (Final, Native, Protected)
// Parameters:

void AQtnProjectile::OnRep_LaunchVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnRep_LaunchVelocity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.OnRep_LaunchingActor
// (Final, Native, Protected)
// Parameters:

void AQtnProjectile::OnRep_LaunchingActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnRep_LaunchingActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.OnReflection_ServerOnly
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UQtnVerb*                    ReflectingVerb                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReflectingActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    NewCulprit                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NewVelocity                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::OnReflection_ServerOnly(class UQtnVerb* ReflectingVerb, class AActor* ReflectingActor, class AQtnPawn* NewCulprit, struct FVector& NewVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnReflection_ServerOnly");

	Params::AQtnProjectile_OnReflection_ServerOnly_Params Parms{};

	Parms.ReflectingVerb = ReflectingVerb;
	Parms.ReflectingActor = ReflectingActor;
	Parms.NewCulprit = NewCulprit;
	Parms.NewVelocity = NewVelocity;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnProjectile.OnQtnReadyForGameplay
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnProjectile::OnQtnReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnQtnReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnProjectile.OnInitProjectile
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      SourceOwner                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    InSourceVerb                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     InitialVelocity                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::OnInitProjectile(class AActor* SourceOwner, class UQtnVerb* InSourceVerb, const struct FVector& InitialVelocity, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnInitProjectile");

	Params::AQtnProjectile_OnInitProjectile_Params Parms{};

	Parms.SourceOwner = SourceOwner;
	Parms.InSourceVerb = InSourceVerb;
	Parms.InitialVelocity = InitialVelocity;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnProjectile.OnFinalizeImpactEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::OnFinalizeImpactEvent(const struct FHitResult& HitResult, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnFinalizeImpactEvent");

	Params::AQtnProjectile_OnFinalizeImpactEvent_Params Parms{};

	Parms.HitResult = HitResult;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnProjectile.OnBlocked_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnVerb*                    blockingVerb                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      blockingActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    blockingPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::OnBlocked_ServerOnly(class UQtnVerb* blockingVerb, class AActor* blockingActor, class AQtnPawn* blockingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnBlocked_ServerOnly");

	Params::AQtnProjectile_OnBlocked_ServerOnly_Params Parms{};

	Parms.blockingVerb = blockingVerb;
	Parms.blockingActor = blockingActor;
	Parms.blockingPawn = blockingPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnProjectile.OnActorPreHit_ServerOnly
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                      ActorAboutToBeHit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IgnoreCollision                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::OnActorPreHit_ServerOnly(class AActor* ActorAboutToBeHit, struct FHitResult& HitResult, bool* IgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "OnActorPreHit_ServerOnly");

	Params::AQtnProjectile_OnActorPreHit_ServerOnly_Params Parms{};

	Parms.ActorAboutToBeHit = ActorAboutToBeHit;
	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IgnoreCollision != nullptr)
		*IgnoreCollision = Parms.IgnoreCollision;

}


// Function QtnGame.QtnProjectile.MulticastProjectileImpact
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnProjectile::MulticastProjectileImpact(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "MulticastProjectileImpact");

	Params::AQtnProjectile_MulticastProjectileImpact_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.IsValidActorToHit
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnProjectile::IsValidActorToHit(class AActor* TargetActor, struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "IsValidActorToHit");

	Params::AQtnProjectile_IsValidActorToHit_Params Parms{};

	Parms.TargetActor = TargetActor;
	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.IsReadyForGameplay
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnProjectile::IsReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "IsReadyForGameplay");

	Params::AQtnProjectile_IsReadyForGameplay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.IncrementReflectionCount_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AQtnProjectile::IncrementReflectionCount_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "IncrementReflectionCount_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.HandleDestroyProjectileEvent
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnProjectile::HandleDestroyProjectileEvent(struct FHitResult& HitResult, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "HandleDestroyProjectileEvent");

	Params::AQtnProjectile_HandleDestroyProjectileEvent_Params Parms{};

	Parms.HitResult = HitResult;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetSourceVerb
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* AQtnProjectile::GetSourceVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetSourceVerb");

	Params::AQtnProjectile_GetSourceVerb_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetSourceActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnProjectile::GetSourceActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetSourceActor");

	Params::AQtnProjectile_GetSourceActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetReflectionCount_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AQtnProjectile::GetReflectionCount_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetReflectionCount_ServerOnly");

	Params::AQtnProjectile_GetReflectionCount_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetProjectileVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnProjectile::GetProjectileVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetProjectileVelocity");

	Params::AQtnProjectile_GetProjectileVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetProjectileMovement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnProjectileMovementComponent*ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnProjectileMovementComponent* AQtnProjectile::GetProjectileMovement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetProjectileMovement");

	Params::AQtnProjectile_GetProjectileMovement_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetProjectileGravity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnProjectile::GetProjectileGravity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetProjectileGravity");

	Params::AQtnProjectile_GetProjectileGravity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetKnockbackDuration
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnProjectile::GetKnockbackDuration(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetKnockbackDuration");

	Params::AQtnProjectile_GetKnockbackDuration_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetKnockbackAmount
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AQtnProjectile::GetKnockbackAmount(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetKnockbackAmount");

	Params::AQtnProjectile_GetKnockbackAmount_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetDamageRadii
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedFloat             DamageRadii                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnProjectile::GetDamageRadii(struct FQtnRangedFloat* DamageRadii)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetDamageRadii");

	Params::AQtnProjectile_GetDamageRadii_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DamageRadii != nullptr)
		*DamageRadii = std::move(Parms.DamageRadii);

}


// Function QtnGame.QtnProjectile.GetDamageAmount
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BaseDamage                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AQtnProjectile::GetDamageAmount(class AActor* TargetActor, float* BaseDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetDamageAmount");

	Params::AQtnProjectile_GetDamageAmount_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (BaseDamage != nullptr)
		*BaseDamage = Parms.BaseDamage;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetCulprit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* AQtnProjectile::GetCulprit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetCulprit");

	Params::AQtnProjectile_GetCulprit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.GetContactFXKey
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AQtnProjectile::GetContactFXKey()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "GetContactFXKey");

	Params::AQtnProjectile_GetContactFXKey_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.ConstructDamageInfo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              ReturnValue                                                      (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FQtnDamageInfo AQtnProjectile::ConstructDamageInfo(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "ConstructDamageInfo");

	Params::AQtnProjectile_ConstructDamageInfo_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectile.BlockProjectile_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnVerb*                    blockingVerb                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      blockingActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    blockingPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectile::BlockProjectile_ServerOnly(class UQtnVerb* blockingVerb, class AActor* blockingActor, class AQtnPawn* blockingPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "BlockProjectile_ServerOnly");

	Params::AQtnProjectile_BlockProjectile_ServerOnly_Params Parms{};

	Parms.blockingVerb = blockingVerb;
	Parms.blockingActor = blockingActor;
	Parms.blockingPawn = blockingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectile.ApplyProjectileDamage
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                      ProjectileVictim                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnProjectile::ApplyProjectileDamage(class AActor* ProjectileVictim, struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectile", "ApplyProjectileDamage");

	Params::AQtnProjectile_ApplyProjectileDamage_Params Parms{};

	Parms.ProjectileVictim = ProjectileVictim;
	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnProjectileInterceptInterface
// (None)

class UClass* IQtnProjectileInterceptInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProjectileInterceptInterface");

	return Clss;
}


// QtnProjectileInterceptInterface QtnGame.Default__QtnProjectileInterceptInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnProjectileInterceptInterface* IQtnProjectileInterceptInterface::GetDefaultObj()
{
	static class IQtnProjectileInterceptInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnProjectileInterceptInterface*>(IQtnProjectileInterceptInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnProjectileInterceptInterface.OnProjectilePreHit_ServerOnly
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AQtnProjectile*              Projectile                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreCollision                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnProjectileInterceptInterface::OnProjectilePreHit_ServerOnly(class AQtnProjectile* Projectile, bool* IgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileInterceptInterface", "OnProjectilePreHit_ServerOnly");

	Params::IQtnProjectileInterceptInterface_OnProjectilePreHit_ServerOnly_Params Parms{};

	Parms.Projectile = Projectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IgnoreCollision != nullptr)
		*IgnoreCollision = Parms.IgnoreCollision;

}


// Class QtnGame.QtnProjectileLauncherInterface
// (None)

class UClass* IQtnProjectileLauncherInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProjectileLauncherInterface");

	return Clss;
}


// QtnProjectileLauncherInterface QtnGame.Default__QtnProjectileLauncherInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnProjectileLauncherInterface* IQtnProjectileLauncherInterface::GetDefaultObj()
{
	static class IQtnProjectileLauncherInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnProjectileLauncherInterface*>(IQtnProjectileLauncherInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnProjectileLauncherInterface.OnProjectileSpawned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AQtnProjectile*              SpawnedProjectile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnProjectileLauncherInterface::OnProjectileSpawned(class AQtnProjectile* SpawnedProjectile, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileLauncherInterface", "OnProjectileSpawned");

	Params::IQtnProjectileLauncherInterface_OnProjectileSpawned_Params Parms{};

	Parms.SpawnedProjectile = SpawnedProjectile;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectileLauncherInterface.GetProjectileCulprit
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* IQtnProjectileLauncherInterface::GetProjectileCulprit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileLauncherInterface", "GetProjectileCulprit");

	Params::IQtnProjectileLauncherInterface_GetProjectileCulprit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnProjectileMovementComponent
// (None)

class UClass* UQtnProjectileMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProjectileMovementComponent");

	return Clss;
}


// QtnProjectileMovementComponent QtnGame.Default__QtnProjectileMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnProjectileMovementComponent* UQtnProjectileMovementComponent::GetDefaultObj()
{
	static class UQtnProjectileMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnProjectileMovementComponent*>(UQtnProjectileMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnProjectileSpawner
// (Actor)

class UClass* AQtnProjectileSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProjectileSpawner");

	return Clss;
}


// QtnProjectileSpawner QtnGame.Default__QtnProjectileSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnProjectileSpawner* AQtnProjectileSpawner::GetDefaultObj()
{
	static class AQtnProjectileSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnProjectileSpawner*>(AQtnProjectileSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnProjectileSpawner.SpawnSpecificProjectile
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnProjectile>  DesiredClassToSpawn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnProjectile*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnProjectile* AQtnProjectileSpawner::SpawnSpecificProjectile(TSubclassOf<class AQtnProjectile> DesiredClassToSpawn, struct FVector& MuzzlePosition, struct FVector& ProjectileVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileSpawner", "SpawnSpecificProjectile");

	Params::AQtnProjectileSpawner_SpawnSpecificProjectile_Params Parms{};

	Parms.DesiredClassToSpawn = DesiredClassToSpawn;
	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectileSpawner.SpawnProjectile
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnProjectile*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnProjectile* AQtnProjectileSpawner::SpawnProjectile(struct FVector& MuzzlePosition, struct FVector& ProjectileVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileSpawner", "SpawnProjectile");

	Params::AQtnProjectileSpawner_SpawnProjectile_Params Parms{};

	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectileSpawner.PostProjectileSpawned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AQtnProjectile*              SpawnedProjectile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectileSpawner::PostProjectileSpawned(class AQtnProjectile* SpawnedProjectile)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileSpawner", "PostProjectileSpawned");

	Params::AQtnProjectileSpawner_PostProjectileSpawned_Params Parms{};

	Parms.SpawnedProjectile = SpawnedProjectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectileSpawner.OnQtnReadyForGameplay
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnProjectileSpawner::OnQtnReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileSpawner", "OnQtnReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnProjectileSpawner.IsReadyToSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnProjectileSpawner::IsReadyToSpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileSpawner", "IsReadyToSpawn");

	Params::AQtnProjectileSpawner_IsReadyToSpawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProjectileSpawner.HandleSimPause
// (Final, Native, Private)
// Parameters:
// bool                               Paused                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectileSpawner::HandleSimPause(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileSpawner", "HandleSimPause");

	Params::AQtnProjectileSpawner_HandleSimPause_Params Parms{};

	Parms.Paused = Paused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProjectileSpawner.HandleGameStateReadyForGameplay
// (Final, Native, Public)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                LocalPlayerUI                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOccupiedBodyPawn                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnProjectileSpawner::HandleGameStateReadyForGameplay(class AQtnPlayerController* LocalPlayerController, class AQtnPlayerUI* LocalPlayerUI, class AQtnBodyPawn* LocalOccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProjectileSpawner", "HandleGameStateReadyForGameplay");

	Params::AQtnProjectileSpawner_HandleGameStateReadyForGameplay_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.LocalPlayerUI = LocalPlayerUI;
	Parms.LocalOccupiedBodyPawn = LocalOccupiedBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnProximityBasedReviveComponent
// (SceneComponent, PrimitiveComponent, StaticMeshComponent)

class UClass* UQtnProximityBasedReviveComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnProximityBasedReviveComponent");

	return Clss;
}


// QtnProximityBasedReviveComponent QtnGame.Default__QtnProximityBasedReviveComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnProximityBasedReviveComponent* UQtnProximityBasedReviveComponent::GetDefaultObj()
{
	static class UQtnProximityBasedReviveComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnProximityBasedReviveComponent*>(UQtnProximityBasedReviveComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnProximityBasedReviveComponent.ShouldDoGroundTrace
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnProximityBasedReviveComponent::ShouldDoGroundTrace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProximityBasedReviveComponent", "ShouldDoGroundTrace");

	Params::UQtnProximityBasedReviveComponent_ShouldDoGroundTrace_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnProximityBasedReviveComponent.SetupGroundTraces
// (Final, Native, Protected, BlueprintCallable)
// Parameters:

void UQtnProximityBasedReviveComponent::SetupGroundTraces()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProximityBasedReviveComponent", "SetupGroundTraces");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnProximityBasedReviveComponent.DoGroundTraces
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnProximityBasedReviveComponent::DoGroundTraces(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnProximityBasedReviveComponent", "DoGroundTraces");

	Params::UQtnProximityBasedReviveComponent_DoGroundTraces_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnRefreshGetCanPlayCallbackProxy
// (None)

class UClass* UQtnRefreshGetCanPlayCallbackProxy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnRefreshGetCanPlayCallbackProxy");

	return Clss;
}


// QtnRefreshGetCanPlayCallbackProxy QtnGame.Default__QtnRefreshGetCanPlayCallbackProxy
// (Public, ClassDefaultObject, ArchetypeObject, StrongRefOnFrame)

class UQtnRefreshGetCanPlayCallbackProxy* UQtnRefreshGetCanPlayCallbackProxy::GetDefaultObj()
{
	static class UQtnRefreshGetCanPlayCallbackProxy* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnRefreshGetCanPlayCallbackProxy*>(UQtnRefreshGetCanPlayCallbackProxy::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnRefreshGetCanPlayCallbackProxy.RefreshGetCanPlay
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// class UQtnGameInstance*            GameInstance                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnRefreshGetCanPlayCallbackProxy*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnRefreshGetCanPlayCallbackProxy* UQtnRefreshGetCanPlayCallbackProxy::RefreshGetCanPlay(class UQtnGameInstance* GameInstance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRefreshGetCanPlayCallbackProxy", "RefreshGetCanPlay");

	Params::UQtnRefreshGetCanPlayCallbackProxy_RefreshGetCanPlay_Params Parms{};

	Parms.GameInstance = GameInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// DelegateFunction QtnGame.QtnRefreshGetCanPlayCallbackProxy.OnCompleteDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               bCanPlay                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnRefreshGetCanPlayCallbackProxy::OnCompleteDelegate__DelegateSignature(bool bCanPlay)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRefreshGetCanPlayCallbackProxy", "OnCompleteDelegate__DelegateSignature");

	Params::UQtnRefreshGetCanPlayCallbackProxy_OnCompleteDelegate__DelegateSignature_Params Parms{};

	Parms.bCanPlay = bCanPlay;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnReplicatedSaveDataComponent
// (None)

class UClass* UQtnReplicatedSaveDataComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnReplicatedSaveDataComponent");

	return Clss;
}


// QtnReplicatedSaveDataComponent QtnGame.Default__QtnReplicatedSaveDataComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnReplicatedSaveDataComponent* UQtnReplicatedSaveDataComponent::GetDefaultObj()
{
	static class UQtnReplicatedSaveDataComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnReplicatedSaveDataComponent*>(UQtnReplicatedSaveDataComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnReplicatedSaveDataComponent.WaitForReplicationReadiness
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQtnReplicatedSaveDataComponent*RepSaveData                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UQtnReplicatedSaveDataComponent*ReadySaveData                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnReplicatedSaveDataComponent::WaitForReplicationReadiness(class UQtnReplicatedSaveDataComponent* RepSaveData, const struct FLatentActionInfo& LatentInfo, class UQtnReplicatedSaveDataComponent** ReadySaveData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnReplicatedSaveDataComponent", "WaitForReplicationReadiness");

	Params::UQtnReplicatedSaveDataComponent_WaitForReplicationReadiness_Params Parms{};

	Parms.RepSaveData = RepSaveData;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ReadySaveData != nullptr)
		*ReadySaveData = Parms.ReadySaveData;

}


// Function QtnGame.QtnReplicatedSaveDataComponent.HasBeenFullyReplicated
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnReplicatedSaveDataComponent::HasBeenFullyReplicated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnReplicatedSaveDataComponent", "HasBeenFullyReplicated");

	Params::UQtnReplicatedSaveDataComponent_HasBeenFullyReplicated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnRichPresenceManager
// (None)

class UClass* UQtnRichPresenceManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnRichPresenceManager");

	return Clss;
}


// QtnRichPresenceManager QtnGame.Default__QtnRichPresenceManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnRichPresenceManager* UQtnRichPresenceManager::GetDefaultObj()
{
	static class UQtnRichPresenceManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnRichPresenceManager*>(UQtnRichPresenceManager::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnRunSubProgress
// (None)

class UClass* UQtnRunSubProgress::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnRunSubProgress");

	return Clss;
}


// QtnRunSubProgress QtnGame.Default__QtnRunSubProgress
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnRunSubProgress* UQtnRunSubProgress::GetDefaultObj()
{
	static class UQtnRunSubProgress* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnRunSubProgress*>(UQtnRunSubProgress::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnRunSubProgress.OnRunSubProgressInit_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnRunSubProgress::OnRunSubProgressInit_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnRunSubProgressInit_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnRunSubProgress.OnRunProgressReset_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnRunSubProgress::OnRunProgressReset_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnRunProgressReset_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnRunSubProgress.OnRunProgressCheckpoint_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               FlushMissionProgress                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnRunSubProgress::OnRunProgressCheckpoint_ServerOnly(bool FlushMissionProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnRunProgressCheckpoint_ServerOnly");

	Params::UQtnRunSubProgress_OnRunProgressCheckpoint_ServerOnly_Params Parms{};

	Parms.FlushMissionProgress = FlushMissionProgress;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnRunSubProgress.OnPlayerExitWorld_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnRunSubProgress::OnPlayerExitWorld_ServerOnly(class AQtnPlayerPawn* PlayerPawn, class AQtnBodyPawn* PlayerBody)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnPlayerExitWorld_ServerOnly");

	Params::UQtnRunSubProgress_OnPlayerExitWorld_ServerOnly_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.PlayerBody = PlayerBody;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnRunSubProgress.OnPlayerEnterWorld_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnPlayerPawn*              PlayerPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBody                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               HasCheckpointHappened                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnRunSubProgress::OnPlayerEnterWorld_ServerOnly(class AQtnPlayerPawn* PlayerPawn, class AQtnBodyPawn* PlayerBody, bool HasCheckpointHappened)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnPlayerEnterWorld_ServerOnly");

	Params::UQtnRunSubProgress_OnPlayerEnterWorld_ServerOnly_Params Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.PlayerBody = PlayerBody;
	Parms.HasCheckpointHappened = HasCheckpointHappened;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnRunSubProgress.OnMapEndPlay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               TravelPending                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnRunSubProgress::OnMapEndPlay_ServerOnly(bool TravelPending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnMapEndPlay_ServerOnly");

	Params::UQtnRunSubProgress_OnMapEndPlay_ServerOnly_Params Parms{};

	Parms.TravelPending = TravelPending;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnRunSubProgress.OnMapBeginPlay_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnRunSubProgress::OnMapBeginPlay_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnMapBeginPlay_ServerOnly");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnRunSubProgress.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnRunSubProgress::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnDebugDisplay");

	Params::UQtnRunSubProgress_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnRunSubProgress.OnAllExpectedPlayersReady_ServerOnly
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              NumExpectedPlayers                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnRunSubProgress::OnAllExpectedPlayersReady_ServerOnly(int32 NumExpectedPlayers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "OnAllExpectedPlayersReady_ServerOnly");

	Params::UQtnRunSubProgress_OnAllExpectedPlayersReady_ServerOnly_Params Parms{};

	Parms.NumExpectedPlayers = NumExpectedPlayers;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnRunSubProgress.HasCheckpointHappened_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnRunSubProgress::HasCheckpointHappened_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnRunSubProgress", "HasCheckpointHappened_ServerOnly");

	Params::UQtnRunSubProgress_HasCheckpointHappened_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSaveLoadFSM
// (None)

class UClass* UQtnSaveLoadFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSaveLoadFSM");

	return Clss;
}


// QtnSaveLoadFSM QtnGame.Default__QtnSaveLoadFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSaveLoadFSM* UQtnSaveLoadFSM::GetDefaultObj()
{
	static class UQtnSaveLoadFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSaveLoadFSM*>(UQtnSaveLoadFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnSaveLoadIdleState
// (None)

class UClass* UQtnSaveLoadIdleState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSaveLoadIdleState");

	return Clss;
}


// QtnSaveLoadIdleState QtnGame.Default__QtnSaveLoadIdleState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSaveLoadIdleState* UQtnSaveLoadIdleState::GetDefaultObj()
{
	static class UQtnSaveLoadIdleState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSaveLoadIdleState*>(UQtnSaveLoadIdleState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnSaveLoadManager
// (None)

class UClass* UQtnSaveLoadManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSaveLoadManager");

	return Clss;
}


// QtnSaveLoadManager QtnGame.Default__QtnSaveLoadManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSaveLoadManager* UQtnSaveLoadManager::GetDefaultObj()
{
	static class UQtnSaveLoadManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSaveLoadManager*>(UQtnSaveLoadManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSaveLoadManager.SaveProgressDataBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSaveLoadManager::SaveProgressDataBP(class AQtnPlayerController* LocalPlayerController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveLoadManager", "SaveProgressDataBP");

	Params::UQtnSaveLoadManager_SaveProgressDataBP_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSaveLoadManager.SaveOptionsDataBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSaveLoadManager::SaveOptionsDataBP(class AQtnPlayerController* LocalPlayerController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveLoadManager", "SaveOptionsDataBP");

	Params::UQtnSaveLoadManager_SaveOptionsDataBP_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSaveLoadManager.ResetProgressDataBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSaveLoadManager::ResetProgressDataBP(class AQtnPlayerController* LocalPlayerController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveLoadManager", "ResetProgressDataBP");

	Params::UQtnSaveLoadManager_ResetProgressDataBP_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSaveLoadManager.GetSaveLoadDataBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnLocalOptionsSaveData*    LocalOptionsSaveData                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnCloudOptionsSaveData*    CloudOptionsSaveData                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnProgressSaveData*        ProgressSaveData                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSaveLoadManager::GetSaveLoadDataBP(class AQtnPlayerController* LocalPlayerController, class UQtnLocalOptionsSaveData** LocalOptionsSaveData, class UQtnCloudOptionsSaveData** CloudOptionsSaveData, class UQtnProgressSaveData** ProgressSaveData, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveLoadManager", "GetSaveLoadDataBP");

	Params::UQtnSaveLoadManager_GetSaveLoadDataBP_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (LocalOptionsSaveData != nullptr)
		*LocalOptionsSaveData = Parms.LocalOptionsSaveData;

	if (CloudOptionsSaveData != nullptr)
		*CloudOptionsSaveData = Parms.CloudOptionsSaveData;

	if (ProgressSaveData != nullptr)
		*ProgressSaveData = Parms.ProgressSaveData;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnSaveLoadManager.GetLocalProgressDataBag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnDataBag>     DatabagArchetype                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnDataBag*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDataBag* UQtnSaveLoadManager::GetLocalProgressDataBag(class UObject* SelfReference, TSubclassOf<class UQtnDataBag> DatabagArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSaveLoadManager", "GetLocalProgressDataBag");

	Params::UQtnSaveLoadManager_GetLocalProgressDataBag_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.DatabagArchetype = DatabagArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnScreenIndicatorWidget
// (None)

class UClass* UQtnScreenIndicatorWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScreenIndicatorWidget");

	return Clss;
}


// QtnScreenIndicatorWidget QtnGame.Default__QtnScreenIndicatorWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScreenIndicatorWidget* UQtnScreenIndicatorWidget::GetDefaultObj()
{
	static class UQtnScreenIndicatorWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScreenIndicatorWidget*>(UQtnScreenIndicatorWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScreenIndicatorWidget.TakeTargetLocation_Cpp
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnScreenIndicatorWidget::TakeTargetLocation_Cpp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "TakeTargetLocation_Cpp");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreenIndicatorWidget.RefreshTargetActor_Cpp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      PDesiredTargetActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnScreenIndicatorWidget::RefreshTargetActor_Cpp(class AActor* PDesiredTargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "RefreshTargetActor_Cpp");

	Params::UQtnScreenIndicatorWidget_RefreshTargetActor_Cpp_Params Parms{};

	Parms.PDesiredTargetActor = PDesiredTargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreenIndicatorWidget.OnScreenEdgeClamp_Cpp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                   Position                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Margin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreenIndicatorWidget::OnScreenEdgeClamp_Cpp(struct FVector2D& Position, float Margin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "OnScreenEdgeClamp_Cpp");

	Params::UQtnScreenIndicatorWidget_OnScreenEdgeClamp_Cpp_Params Parms{};

	Parms.Position = Position;
	Parms.Margin = Margin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreenIndicatorWidget.OffScreenPositionAndAngle_Cpp
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnScreenIndicatorWidget::OffScreenPositionAndAngle_Cpp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "OffScreenPositionAndAngle_Cpp");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreenIndicatorWidget.OffScreenEdgeClamp_Cpp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                   Value                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UQtnScreenIndicatorWidget::OffScreenEdgeClamp_Cpp(struct FVector2D& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "OffScreenEdgeClamp_Cpp");

	Params::UQtnScreenIndicatorWidget_OffScreenEdgeClamp_Cpp_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreenIndicatorWidget.OffScrDistanceText_Cpp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              CurrentAngle                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreenIndicatorWidget::OffScrDistanceText_Cpp(float CurrentAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "OffScrDistanceText_Cpp");

	Params::UQtnScreenIndicatorWidget_OffScrDistanceText_Cpp_Params Parms{};

	Parms.CurrentAngle = CurrentAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreenIndicatorWidget.GetIndicatorLocationfromActor_Cpp
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      PActor                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnScreenIndicatorWidget::GetIndicatorLocationfromActor_Cpp(class AActor* PActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "GetIndicatorLocationfromActor_Cpp");

	Params::UQtnScreenIndicatorWidget_GetIndicatorLocationfromActor_Cpp_Params Parms{};

	Parms.PActor = PActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreenIndicatorWidget.FindClosestEdge_Cpp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnScreenIndicatorWidget::FindClosestEdge_Cpp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "FindClosestEdge_Cpp");

	Params::UQtnScreenIndicatorWidget_FindClosestEdge_Cpp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreenIndicatorWidget.EnsureLocalPlayerController_Cpp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPlayerController* UQtnScreenIndicatorWidget::EnsureLocalPlayerController_Cpp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "EnsureLocalPlayerController_Cpp");

	Params::UQtnScreenIndicatorWidget_EnsureLocalPlayerController_Cpp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScreenIndicatorWidget.DoSelfRemoval_Cpp
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnScreenIndicatorWidget::DoSelfRemoval_Cpp()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "DoSelfRemoval_Cpp");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreenIndicatorWidget.CalculateOffScreenPosition_Cpp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                   OffScreenPosition                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              RenderAngle                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreenIndicatorWidget::CalculateOffScreenPosition_Cpp(struct FVector2D* OffScreenPosition, float* RenderAngle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "CalculateOffScreenPosition_Cpp");

	Params::UQtnScreenIndicatorWidget_CalculateOffScreenPosition_Cpp_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OffScreenPosition != nullptr)
		*OffScreenPosition = std::move(Parms.OffScreenPosition);

	if (RenderAngle != nullptr)
		*RenderAngle = Parms.RenderAngle;

}


// Function QtnGame.QtnScreenIndicatorWidget.AdjustZOffset_Cpp
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     InVec                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnScreenIndicatorWidget::AdjustZOffset_Cpp(struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenIndicatorWidget", "AdjustZOffset_Cpp");

	Params::UQtnScreenIndicatorWidget_AdjustZOffset_Cpp_Params Parms{};

	Parms.InVec = InVec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnScreenLoading
// (None)

class UClass* UQtnScreenLoading::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScreenLoading");

	return Clss;
}


// QtnScreenLoading QtnGame.Default__QtnScreenLoading
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScreenLoading* UQtnScreenLoading::GetDefaultObj()
{
	static class UQtnScreenLoading* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScreenLoading*>(UQtnScreenLoading::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScreenLoading.OnAnyKeyPressed
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreenLoading::OnAnyKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenLoading", "OnAnyKeyPressed");



	UObject::ProcessEvent(Func, nullptr);

}


// Class QtnGame.QtnScreenMessagingHUD
// (None)

class UClass* UQtnScreenMessagingHUD::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScreenMessagingHUD");

	return Clss;
}


// QtnScreenMessagingHUD QtnGame.Default__QtnScreenMessagingHUD
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScreenMessagingHUD* UQtnScreenMessagingHUD::GetDefaultObj()
{
	static class UQtnScreenMessagingHUD* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScreenMessagingHUD*>(UQtnScreenMessagingHUD::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScreenMessagingHUD.ShowHint
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                        HintText                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreenMessagingHUD::ShowHint(class FText& HintText, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenMessagingHUD", "ShowHint");

	Params::UQtnScreenMessagingHUD_ShowHint_Params Parms{};

	Parms.HintText = HintText;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreenMessagingHUD.HideHint
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnScreenMessagingHUD::HideHint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenMessagingHUD", "HideHint");



	UObject::ProcessEvent(Func, nullptr);

}


// Class QtnGame.QtnScreenModalDialog
// (None)

class UClass* UQtnScreenModalDialog::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScreenModalDialog");

	return Clss;
}


// QtnScreenModalDialog QtnGame.Default__QtnScreenModalDialog
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScreenModalDialog* UQtnScreenModalDialog::GetDefaultObj()
{
	static class UQtnScreenModalDialog* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScreenModalDialog*>(UQtnScreenModalDialog::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScreenModalDialog.PresentMessageInfo
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnModalMessageInfo        MessageInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnScreenModalDialog::PresentMessageInfo(struct FQtnModalMessageInfo& MessageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenModalDialog", "PresentMessageInfo");

	Params::UQtnScreenModalDialog_PresentMessageInfo_Params Parms{};

	Parms.MessageInfo = MessageInfo;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnScreenModalDialog.HandleRejection
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnScreenModalDialog::HandleRejection()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenModalDialog", "HandleRejection");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScreenModalDialog.HandleAcceptance
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnScreenModalDialog::HandleAcceptance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenModalDialog", "HandleAcceptance");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnScreenNotification
// (None)

class UClass* UQtnScreenNotification::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScreenNotification");

	return Clss;
}


// QtnScreenNotification QtnGame.Default__QtnScreenNotification
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScreenNotification* UQtnScreenNotification::GetDefaultObj()
{
	static class UQtnScreenNotification* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScreenNotification*>(UQtnScreenNotification::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScreenNotification.OnOutro
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreenNotification::OnOutro()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenNotification", "OnOutro");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreenNotification.OnIntro
// (Event, Protected, BlueprintEvent)
// Parameters:

void UQtnScreenNotification::OnIntro()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenNotification", "OnIntro");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnScreenNotification.GetNotificationWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnScreenNotification::GetNotificationWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenNotification", "GetNotificationWidget");

	Params::UQtnScreenNotification_GetNotificationWidget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnScreenPopUpMessage
// (None)

class UClass* UQtnScreenPopUpMessage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScreenPopUpMessage");

	return Clss;
}


// QtnScreenPopUpMessage QtnGame.Default__QtnScreenPopUpMessage
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScreenPopUpMessage* UQtnScreenPopUpMessage::GetDefaultObj()
{
	static class UQtnScreenPopUpMessage* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScreenPopUpMessage*>(UQtnScreenPopUpMessage::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScreenPopUpMessage.PopUpScreenText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                        ScreenText                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                              PopUpTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsQueued                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnScreenPopUpMessage::PopUpScreenText(class FText& ScreenText, float PopUpTime, bool IsQueued)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScreenPopUpMessage", "PopUpScreenText");

	Params::UQtnScreenPopUpMessage_PopUpScreenText_Params Parms{};

	Parms.ScreenText = ScreenText;
	Parms.PopUpTime = PopUpTime;
	Parms.IsQueued = IsQueued;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnScriptedActorAnimInstance
// (None)

class UClass* UQtnScriptedActorAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScriptedActorAnimInstance");

	return Clss;
}


// QtnScriptedActorAnimInstance QtnGame.Default__QtnScriptedActorAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnScriptedActorAnimInstance* UQtnScriptedActorAnimInstance::GetDefaultObj()
{
	static class UQtnScriptedActorAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnScriptedActorAnimInstance*>(UQtnScriptedActorAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnScriptedSkeletalActor
// (Actor)

class UClass* AQtnScriptedSkeletalActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnScriptedSkeletalActor");

	return Clss;
}


// QtnScriptedSkeletalActor QtnGame.Default__QtnScriptedSkeletalActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnScriptedSkeletalActor* AQtnScriptedSkeletalActor::GetDefaultObj()
{
	static class AQtnScriptedSkeletalActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnScriptedSkeletalActor*>(AQtnScriptedSkeletalActor::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnScriptedSkeletalActor.SetShouldHeadTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewShouldHeadTrack                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::SetShouldHeadTrack(bool bNewShouldHeadTrack)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "SetShouldHeadTrack");

	Params::AQtnScriptedSkeletalActor_SetShouldHeadTrack_Params Parms{};

	Parms.bNewShouldHeadTrack = bNewShouldHeadTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScriptedSkeletalActor.SetNextCanPlayTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<enum class EQtnCuckooEvent, struct FQtnCuckooResponseArray>CuckooEventResponseMap                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EQtnCuckooEvent         CuckooEvent                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ArrayIndex                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NextCanPlayTime                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::SetNextCanPlayTime(TMap<enum class EQtnCuckooEvent, struct FQtnCuckooResponseArray>& CuckooEventResponseMap, enum class EQtnCuckooEvent CuckooEvent, int32 ArrayIndex, float NextCanPlayTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "SetNextCanPlayTime");

	Params::AQtnScriptedSkeletalActor_SetNextCanPlayTime_Params Parms{};

	Parms.CuckooEventResponseMap = CuckooEventResponseMap;
	Parms.CuckooEvent = CuckooEvent;
	Parms.ArrayIndex = ArrayIndex;
	Parms.NextCanPlayTime = NextCanPlayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScriptedSkeletalActor.SetIsHeadTracking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bNewIsHeadTracking                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::SetIsHeadTracking(bool bNewIsHeadTracking)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "SetIsHeadTracking");

	Params::AQtnScriptedSkeletalActor_SetIsHeadTracking_Params Parms{};

	Parms.bNewIsHeadTracking = bNewIsHeadTracking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScriptedSkeletalActor.RemoveHeadtrackingInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::RemoveHeadtrackingInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "RemoveHeadtrackingInhibitor");

	Params::AQtnScriptedSkeletalActor_RemoveHeadtrackingInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScriptedSkeletalActor.HeadTrackingToggled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               On                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::HeadTrackingToggled(bool On)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "HeadTrackingToggled");

	Params::AQtnScriptedSkeletalActor_HeadTrackingToggled_Params Parms{};

	Parms.On = On;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScriptedSkeletalActor.HandleSimPause
// (Final, Native, Public)
// Parameters:
// bool                               Paused                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::HandleSimPause(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "HandleSimPause");

	Params::AQtnScriptedSkeletalActor_HandleSimPause_Params Parms{};

	Parms.Paused = Paused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScriptedSkeletalActor.GetShouldHeadTrack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnScriptedSkeletalActor::GetShouldHeadTrack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "GetShouldHeadTrack");

	Params::AQtnScriptedSkeletalActor_GetShouldHeadTrack_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScriptedSkeletalActor.GetIsHeadTracking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnScriptedSkeletalActor::GetIsHeadTracking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "GetIsHeadTracking");

	Params::AQtnScriptedSkeletalActor_GetIsHeadTracking_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnScriptedSkeletalActor.AddHeadtrackingInhibitor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::AddHeadtrackingInhibitor(class UObject* Inhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "AddHeadtrackingInhibitor");

	Params::AQtnScriptedSkeletalActor_AddHeadtrackingInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnScriptedSkeletalActor.AddCuckooResponse
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<enum class EQtnCuckooEvent, struct FQtnCuckooResponseArray>CuckooEventResponseMap                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EQtnCuckooEvent         CuckooEvent                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedVOId                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                Animation                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Cooldown                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PlayOnceOnly                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnScriptedSkeletalActor::AddCuckooResponse(TMap<enum class EQtnCuckooEvent, struct FQtnCuckooResponseArray>& CuckooEventResponseMap, enum class EQtnCuckooEvent CuckooEvent, const struct FGameplayTag& ScriptedVOId, class UAnimMontage* Animation, float Cooldown, bool PlayOnceOnly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnScriptedSkeletalActor", "AddCuckooResponse");

	Params::AQtnScriptedSkeletalActor_AddCuckooResponse_Params Parms{};

	Parms.CuckooEventResponseMap = CuckooEventResponseMap;
	Parms.CuckooEvent = CuckooEvent;
	Parms.ScriptedVOId = ScriptedVOId;
	Parms.Animation = Animation;
	Parms.Cooldown = Cooldown;
	Parms.PlayOnceOnly = PlayOnceOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnServerDiagnostics
// (None)

class UClass* UQtnServerDiagnostics::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnServerDiagnostics");

	return Clss;
}


// QtnServerDiagnostics QtnGame.Default__QtnServerDiagnostics
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnServerDiagnostics* UQtnServerDiagnostics::GetDefaultObj()
{
	static class UQtnServerDiagnostics* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnServerDiagnostics*>(UQtnServerDiagnostics::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnSimPauseResponseComponent
// (None)

class UClass* UQtnSimPauseResponseComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSimPauseResponseComponent");

	return Clss;
}


// QtnSimPauseResponseComponent QtnGame.Default__QtnSimPauseResponseComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSimPauseResponseComponent* UQtnSimPauseResponseComponent::GetDefaultObj()
{
	static class UQtnSimPauseResponseComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSimPauseResponseComponent*>(UQtnSimPauseResponseComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSimPauseResponseComponent.HandleSimPause
// (Final, Native, Protected)
// Parameters:
// bool                               Paused                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSimPauseResponseComponent::HandleSimPause(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSimPauseResponseComponent", "HandleSimPause");

	Params::UQtnSimPauseResponseComponent_HandleSimPause_Params Parms{};

	Parms.Paused = Paused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnSkirmish
// (Actor)

class UClass* AQtnSkirmish::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSkirmish");

	return Clss;
}


// QtnSkirmish QtnGame.Default__QtnSkirmish
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnSkirmish* AQtnSkirmish::GetDefaultObj()
{
	static class AQtnSkirmish* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnSkirmish*>(AQtnSkirmish::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSkirmish.SetSkirmishRequestSpawnCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnSkirmishSpawnRequest    SpawnRequest                                                     (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRangedInt               SpawnCount                                                       (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnSkirmish::SetSkirmishRequestSpawnCount(struct FQtnSkirmishSpawnRequest& SpawnRequest, const struct FQtnRangedInt& SpawnCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "SetSkirmishRequestSpawnCount");

	Params::AQtnSkirmish_SetSkirmishRequestSpawnCount_Params Parms{};

	Parms.SpawnRequest = SpawnRequest;
	Parms.SpawnCount = SpawnCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.SetSkirmishEnabled_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantEnabled                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::SetSkirmishEnabled_ServerOnly(bool WantEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "SetSkirmishEnabled_ServerOnly");

	Params::AQtnSkirmish_SetSkirmishEnabled_ServerOnly_Params Parms{};

	Parms.WantEnabled = WantEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.RequestSpawnGroup_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FQtnSkirmishRequestSpawnParamsRequestSpawnParams                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnSkirmish::RequestSpawnGroup_ServerOnly(const struct FQtnSkirmishRequestSpawnParams& RequestSpawnParams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "RequestSpawnGroup_ServerOnly");

	Params::AQtnSkirmish_RequestSpawnGroup_ServerOnly_Params Parms{};

	Parms.RequestSpawnParams = RequestSpawnParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// DelegateFunction QtnGame.QtnSkirmish.QtnSkirmishSpawnCancelEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnSkirmish*                Skirmish                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SpawnGroupName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::QtnSkirmishSpawnCancelEvent__DelegateSignature(class AQtnSkirmish* Skirmish, class FName SpawnGroupName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "QtnSkirmishSpawnCancelEvent__DelegateSignature");

	Params::AQtnSkirmish_QtnSkirmishSpawnCancelEvent__DelegateSignature_Params Parms{};

	Parms.Skirmish = Skirmish;
	Parms.SpawnGroupName = SpawnGroupName;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnSkirmish.QtnSkirmishPlayerExitEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class AQtnSkirmish*                ExitedSkirmish                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnBodyPawn*>        PlayersWithinVolume                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnSkirmish::QtnSkirmishPlayerExitEvent__DelegateSignature(class AQtnSkirmish* ExitedSkirmish, TArray<class AQtnBodyPawn*>& PlayersWithinVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "QtnSkirmishPlayerExitEvent__DelegateSignature");

	Params::AQtnSkirmish_QtnSkirmishPlayerExitEvent__DelegateSignature_Params Parms{};

	Parms.ExitedSkirmish = ExitedSkirmish;
	Parms.PlayersWithinVolume = PlayersWithinVolume;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnSkirmish.QtnSkirmishPlayerEnterEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class AQtnSkirmish*                EnteredSkirmish                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnBodyPawn*>        PlayersWithinVolume                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnSkirmish::QtnSkirmishPlayerEnterEvent__DelegateSignature(class AQtnSkirmish* EnteredSkirmish, TArray<class AQtnBodyPawn*>& PlayersWithinVolume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "QtnSkirmishPlayerEnterEvent__DelegateSignature");

	Params::AQtnSkirmish_QtnSkirmishPlayerEnterEvent__DelegateSignature_Params Parms{};

	Parms.EnteredSkirmish = EnteredSkirmish;
	Parms.PlayersWithinVolume = PlayersWithinVolume;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnSkirmish.QtnSkirmishPawnEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnSkirmish*                Skirmish                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    SkirmishPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::QtnSkirmishPawnEvent__DelegateSignature(class AQtnSkirmish* Skirmish, class AQtnPawn* SkirmishPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "QtnSkirmishPawnEvent__DelegateSignature");

	Params::AQtnSkirmish_QtnSkirmishPawnEvent__DelegateSignature_Params Parms{};

	Parms.Skirmish = Skirmish;
	Parms.SkirmishPawn = SkirmishPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnSkirmish.QtnSkirmishEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnSkirmish*                Skirmish                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::QtnSkirmishEvent__DelegateSignature(class AQtnSkirmish* Skirmish)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "QtnSkirmishEvent__DelegateSignature");

	Params::AQtnSkirmish_QtnSkirmishEvent__DelegateSignature_Params Parms{};

	Parms.Skirmish = Skirmish;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSkirmish.OnRep_TrackedLivingPawns
// (Final, Native, Private)
// Parameters:

void AQtnSkirmish::OnRep_TrackedLivingPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "OnRep_TrackedLivingPawns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.OnRep_TrackedDeadPawns
// (Final, Native, Private)
// Parameters:

void AQtnSkirmish::OnRep_TrackedDeadPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "OnRep_TrackedDeadPawns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.OnRep_HasPreloadedArchetypes
// (Final, Native, Private)
// Parameters:

void AQtnSkirmish::OnRep_HasPreloadedArchetypes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "OnRep_HasPreloadedArchetypes");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "OnDebugDisplay");

	Params::AQtnSkirmish_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSkirmish.IsSkirmishEnabled_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnSkirmish::IsSkirmishEnabled_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "IsSkirmishEnabled_ServerOnly");

	Params::AQtnSkirmish_IsSkirmishEnabled_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.HandlePawnDestroyed_ServerOnly
// (Final, Native, Private)
// Parameters:
// class AActor*                      DestroyedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::HandlePawnDestroyed_ServerOnly(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "HandlePawnDestroyed_ServerOnly");

	Params::AQtnSkirmish_HandlePawnDestroyed_ServerOnly_Params Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.HandleOverlapEnd_ServerOnly
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*         POverlappedComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POtherActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         POtherComp                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::HandleOverlapEnd_ServerOnly(class UPrimitiveComponent* POverlappedComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "HandleOverlapEnd_ServerOnly");

	Params::AQtnSkirmish_HandleOverlapEnd_ServerOnly_Params Parms{};

	Parms.POverlappedComponent = POverlappedComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.HandleOverlapBegin_ServerOnly
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         POverlappedComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POtherActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         POtherComp                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnSkirmish::HandleOverlapBegin_ServerOnly(class UPrimitiveComponent* POverlappedComponent, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "HandleOverlapBegin_ServerOnly");

	Params::AQtnSkirmish_HandleOverlapBegin_ServerOnly_Params Parms{};

	Parms.POverlappedComponent = POverlappedComponent;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.HandleBodyAliveChange_ServerOnly
// (Final, Native, Private)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      AlivenessInstigator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       OldBodyAliveness                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       bodyAliveness                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::HandleBodyAliveChange_ServerOnly(class AQtnBodyPawn* bodyPawn, class AActor* AlivenessInstigator, enum class EQtnBodyAliveness OldBodyAliveness, enum class EQtnBodyAliveness bodyAliveness, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "HandleBodyAliveChange_ServerOnly");

	Params::AQtnSkirmish_HandleBodyAliveChange_ServerOnly_Params Parms{};

	Parms.bodyPawn = bodyPawn;
	Parms.AlivenessInstigator = AlivenessInstigator;
	Parms.OldBodyAliveness = OldBodyAliveness;
	Parms.bodyAliveness = bodyAliveness;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmish.GetVisualizationColor
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AActor*                      RelevantActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForLines                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor AQtnSkirmish::GetVisualizationColor(class AActor* RelevantActor, bool ForLines)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetVisualizationColor");

	Params::AQtnSkirmish_GetVisualizationColor_Params Parms{};

	Parms.RelevantActor = RelevantActor;
	Parms.ForLines = ForLines;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetTrackedSpawnGroups_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FName, struct FQtnTrackedSkirmishPawns>ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TMap<class FName, struct FQtnTrackedSkirmishPawns> AQtnSkirmish::GetTrackedSpawnGroups_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetTrackedSpawnGroups_ServerOnly");

	Params::AQtnSkirmish_GetTrackedSpawnGroups_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetTrackedPawns_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<TSubclassOf<class AQtnPawn>, struct FQtnTrackedSkirmishPawns>ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TMap<TSubclassOf<class AQtnPawn>, struct FQtnTrackedSkirmishPawns> AQtnSkirmish::GetTrackedPawns_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetTrackedPawns_ServerOnly");

	Params::AQtnSkirmish_GetTrackedPawns_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetTrackedLivingPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPawn*> AQtnSkirmish::GetTrackedLivingPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetTrackedLivingPawns");

	Params::AQtnSkirmish_GetTrackedLivingPawns_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetTrackedDeadPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnPawn*>            ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPawn*> AQtnSkirmish::GetTrackedDeadPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetTrackedDeadPawns");

	Params::AQtnSkirmish_GetTrackedDeadPawns_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetTotalPopulationInfo_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              NumPending                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumTelegraphing                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumLiving                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumDead                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumDestroyed                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::GetTotalPopulationInfo_ServerOnly(int32* NumPending, int32* NumTelegraphing, int32* NumLiving, int32* NumDead, int32* NumDestroyed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetTotalPopulationInfo_ServerOnly");

	Params::AQtnSkirmish_GetTotalPopulationInfo_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NumPending != nullptr)
		*NumPending = Parms.NumPending;

	if (NumTelegraphing != nullptr)
		*NumTelegraphing = Parms.NumTelegraphing;

	if (NumLiving != nullptr)
		*NumLiving = Parms.NumLiving;

	if (NumDead != nullptr)
		*NumDead = Parms.NumDead;

	if (NumDestroyed != nullptr)
		*NumDestroyed = Parms.NumDestroyed;

}


// Function QtnGame.QtnSkirmish.GetSpawnGroupInfo_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        SpawnGroupName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumPending                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumTelegraphing                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumLiving                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumDead                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumDestroyed                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::GetSpawnGroupInfo_ServerOnly(class FName SpawnGroupName, int32* NumPending, int32* NumTelegraphing, int32* NumLiving, int32* NumDead, int32* NumDestroyed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetSpawnGroupInfo_ServerOnly");

	Params::AQtnSkirmish_GetSpawnGroupInfo_ServerOnly_Params Parms{};

	Parms.SpawnGroupName = SpawnGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (NumPending != nullptr)
		*NumPending = Parms.NumPending;

	if (NumTelegraphing != nullptr)
		*NumTelegraphing = Parms.NumTelegraphing;

	if (NumLiving != nullptr)
		*NumLiving = Parms.NumLiving;

	if (NumDead != nullptr)
		*NumDead = Parms.NumDead;

	if (NumDestroyed != nullptr)
		*NumDestroyed = Parms.NumDestroyed;

}


// Function QtnGame.QtnSkirmish.GetSpawnGroupHistory_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class FName> AQtnSkirmish::GetSpawnGroupHistory_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetSpawnGroupHistory_ServerOnly");

	Params::AQtnSkirmish_GetSpawnGroupHistory_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetSkirmishRequestSpawnCount
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnSkirmishSpawnRequest    SpawnRequest                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRangedInt               SpawnCount                                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnSkirmish::GetSkirmishRequestSpawnCount(struct FQtnSkirmishSpawnRequest& SpawnRequest, struct FQtnRangedInt* SpawnCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetSkirmishRequestSpawnCount");

	Params::AQtnSkirmish_GetSkirmishRequestSpawnCount_Params Parms{};

	Parms.SpawnRequest = SpawnRequest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SpawnCount != nullptr)
		*SpawnCount = std::move(Parms.SpawnCount);

}


// Function QtnGame.QtnSkirmish.GetSkirmishManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnSkirmishManager*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnSkirmishManager* AQtnSkirmish::GetSkirmishManager()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetSkirmishManager");

	Params::AQtnSkirmish_GetSkirmishManager_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetPlayersInsideSkirmish
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AQtnBodyPawn*>        ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnBodyPawn*> AQtnSkirmish::GetPlayersInsideSkirmish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetPlayersInsideSkirmish");

	Params::AQtnSkirmish_GetPlayersInsideSkirmish_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GetOwningSpoke
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnSpokeComponent*          ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnSpokeComponent* AQtnSkirmish::GetOwningSpoke()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GetOwningSpoke");

	Params::AQtnSkirmish_GetOwningSpoke_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GatherSkirmishInfo
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AQtnSkirmish::GatherSkirmishInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GatherSkirmishInfo");

	Params::AQtnSkirmish_GatherSkirmishInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmish.GatherSkirmishActions
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnSkirmishAction>ActionType                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnSkirmishAction*>  GatheredActions                                                  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AQtnSkirmish::GatherSkirmishActions(TSubclassOf<class UQtnSkirmishAction> ActionType, TArray<class UQtnSkirmishAction*>* GatheredActions)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GatherSkirmishActions");

	Params::AQtnSkirmish_GatherSkirmishActions_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (GatheredActions != nullptr)
		*GatheredActions = std::move(Parms.GatheredActions);

}


// Function QtnGame.QtnSkirmish.GatherRelevantActors
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>              RelevantActors                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AQtnSkirmish::GatherRelevantActors(TArray<class AActor*>* RelevantActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GatherRelevantActors");

	Params::AQtnSkirmish_GatherRelevantActors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RelevantActors != nullptr)
		*RelevantActors = std::move(Parms.RelevantActors);

}


// Function QtnGame.QtnSkirmish.GatherBPErrors
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class FString>              ErrorMsgs                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AQtnSkirmish::GatherBPErrors(TArray<class FString>* ErrorMsgs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "GatherBPErrors");

	Params::AQtnSkirmish_GatherBPErrors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ErrorMsgs != nullptr)
		*ErrorMsgs = std::move(Parms.ErrorMsgs);

}


// Function QtnGame.QtnSkirmish.AcknowledgeSpawnedPawn_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    SpawnedPawn                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SpawnGroupName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AQtnPawn>        ArchetypeBeforeSubstitution                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSkirmish::AcknowledgeSpawnedPawn_ServerOnly(class AQtnPawn* SpawnedPawn, class FName SpawnGroupName, TSubclassOf<class AQtnPawn> ArchetypeBeforeSubstitution)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmish", "AcknowledgeSpawnedPawn_ServerOnly");

	Params::AQtnSkirmish_AcknowledgeSpawnedPawn_ServerOnly_Params Parms{};

	Parms.SpawnedPawn = SpawnedPawn;
	Parms.SpawnGroupName = SpawnGroupName;
	Parms.ArchetypeBeforeSubstitution = ArchetypeBeforeSubstitution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnSkirmishAction
// (None)

class UClass* UQtnSkirmishAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSkirmishAction");

	return Clss;
}


// QtnSkirmishAction QtnGame.Default__QtnSkirmishAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSkirmishAction* UQtnSkirmishAction::GetDefaultObj()
{
	static class UQtnSkirmishAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSkirmishAction*>(UQtnSkirmishAction::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSkirmishAction.ExecuteSkirmishAction
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AQtnSkirmish*                OwningSkirmish                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnSkirmishTrigger*         OwningTrigger                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSkirmishAction::ExecuteSkirmishAction(class AQtnSkirmish* OwningSkirmish, class UQtnSkirmishTrigger* OwningTrigger)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishAction", "ExecuteSkirmishAction");

	Params::UQtnSkirmishAction_ExecuteSkirmishAction_Params Parms{};

	Parms.OwningSkirmish = OwningSkirmish;
	Parms.OwningTrigger = OwningTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnSkirmishCondition
// (None)

class UClass* UQtnSkirmishCondition::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSkirmishCondition");

	return Clss;
}


// QtnSkirmishCondition QtnGame.Default__QtnSkirmishCondition
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSkirmishCondition* UQtnSkirmishCondition::GetDefaultObj()
{
	static class UQtnSkirmishCondition* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSkirmishCondition*>(UQtnSkirmishCondition::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSkirmishCondition.IsSkirmishConditionSatisfied
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnSkirmish*                OwningSkirmish                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnSkirmishTrigger*         OwningTrigger                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnSkirmishCondition::IsSkirmishConditionSatisfied(class AQtnSkirmish* OwningSkirmish, class UQtnSkirmishTrigger* OwningTrigger)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishCondition", "IsSkirmishConditionSatisfied");

	Params::UQtnSkirmishCondition_IsSkirmishConditionSatisfied_Params Parms{};

	Parms.OwningSkirmish = OwningSkirmish;
	Parms.OwningTrigger = OwningTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSkirmishManager
// (None)

class UClass* UQtnSkirmishManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSkirmishManager");

	return Clss;
}


// QtnSkirmishManager QtnGame.Default__QtnSkirmishManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSkirmishManager* UQtnSkirmishManager::GetDefaultObj()
{
	static class UQtnSkirmishManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSkirmishManager*>(UQtnSkirmishManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSkirmishManager.OnSkirmishSpawn_ServerOnly
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AQtnSkirmish*                Skirmish                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    SpawnedPawn                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SpawnGroupName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AQtnPawn>        ArchetypeBeforeSubstitution                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSkirmishManager::OnSkirmishSpawn_ServerOnly(class AQtnSkirmish* Skirmish, class AQtnPawn* SpawnedPawn, class FName SpawnGroupName, TSubclassOf<class AQtnPawn> ArchetypeBeforeSubstitution)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishManager", "OnSkirmishSpawn_ServerOnly");

	Params::UQtnSkirmishManager_OnSkirmishSpawn_ServerOnly_Params Parms{};

	Parms.Skirmish = Skirmish;
	Parms.SpawnedPawn = SpawnedPawn;
	Parms.SpawnGroupName = SpawnGroupName;
	Parms.ArchetypeBeforeSubstitution = ArchetypeBeforeSubstitution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmishManager.OnSkirmishManagerDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSkirmishManager::OnSkirmishManagerDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishManager", "OnSkirmishManagerDebugDisplay");

	Params::UQtnSkirmishManager_OnSkirmishManagerDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSkirmishManager.HandleSkirmishSpawn
// (Final, Native, Private)
// Parameters:
// class AQtnSkirmish*                Skirmish                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    SkirmishPawn                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSkirmishManager::HandleSkirmishSpawn(class AQtnSkirmish* Skirmish, class AQtnPawn* SkirmishPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishManager", "HandleSkirmishSpawn");

	Params::UQtnSkirmishManager_HandleSkirmishSpawn_Params Parms{};

	Parms.Skirmish = Skirmish;
	Parms.SkirmishPawn = SkirmishPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmishManager.HandleReadyForGameplay
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSkirmishManager::HandleReadyForGameplay(bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishManager", "HandleReadyForGameplay");

	Params::UQtnSkirmishManager_HandleReadyForGameplay_Params Parms{};

	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSkirmishManager.GetSkirmishManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnSkirmishManager*         ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnSkirmishManager* UQtnSkirmishManager::GetSkirmishManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishManager", "GetSkirmishManager");

	Params::UQtnSkirmishManager_GetSkirmishManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmishManager.ApplyPawnSubstitution_ServerOnly
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class AQtnPawn>        PawnArchetype                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AQtnPawn>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AQtnPawn> UQtnSkirmishManager::ApplyPawnSubstitution_ServerOnly(TSubclassOf<class AQtnPawn> PawnArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishManager", "ApplyPawnSubstitution_ServerOnly");

	Params::UQtnSkirmishManager_ApplyPawnSubstitution_ServerOnly_Params Parms{};

	Parms.PawnArchetype = PawnArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSkirmishProxyComponent
// (None)

class UClass* UQtnSkirmishProxyComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSkirmishProxyComponent");

	return Clss;
}


// QtnSkirmishProxyComponent QtnGame.Default__QtnSkirmishProxyComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSkirmishProxyComponent* UQtnSkirmishProxyComponent::GetDefaultObj()
{
	static class UQtnSkirmishProxyComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSkirmishProxyComponent*>(UQtnSkirmishProxyComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnSkirmishSpawnerHeuristic
// (None)

class UClass* UQtnSkirmishSpawnerHeuristic::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSkirmishSpawnerHeuristic");

	return Clss;
}


// QtnSkirmishSpawnerHeuristic QtnGame.Default__QtnSkirmishSpawnerHeuristic
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSkirmishSpawnerHeuristic* UQtnSkirmishSpawnerHeuristic::GetDefaultObj()
{
	static class UQtnSkirmishSpawnerHeuristic* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSkirmishSpawnerHeuristic*>(UQtnSkirmishSpawnerHeuristic::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSkirmishSpawnerHeuristic.CalculateHeuristicScore
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AQtnSkirmish*                OwningSkirmish                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnSpawner*                 Spawner                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PlayerCentroid                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SpawnWaveName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnSkirmishSpawnerHeuristic::CalculateHeuristicScore(class AQtnSkirmish* OwningSkirmish, class AQtnSpawner* Spawner, struct FVector& PlayerCentroid, class FName& SpawnWaveName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishSpawnerHeuristic", "CalculateHeuristicScore");

	Params::UQtnSkirmishSpawnerHeuristic_CalculateHeuristicScore_Params Parms{};

	Parms.OwningSkirmish = OwningSkirmish;
	Parms.Spawner = Spawner;
	Parms.PlayerCentroid = PlayerCentroid;
	Parms.SpawnWaveName = SpawnWaveName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSkirmishTrigger
// (None)

class UClass* UQtnSkirmishTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSkirmishTrigger");

	return Clss;
}


// QtnSkirmishTrigger QtnGame.Default__QtnSkirmishTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSkirmishTrigger* UQtnSkirmishTrigger::GetDefaultObj()
{
	static class UQtnSkirmishTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSkirmishTrigger*>(UQtnSkirmishTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSkirmishTrigger.OnSkirmishInit
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnSkirmish*                OwningSkirmish                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSkirmishTrigger::OnSkirmishInit(class AQtnSkirmish* OwningSkirmish)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishTrigger", "OnSkirmishInit");

	Params::UQtnSkirmishTrigger_OnSkirmishInit_Params Parms{};

	Parms.OwningSkirmish = OwningSkirmish;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSkirmishTrigger.GetOwningSkirmish
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnSkirmish*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnSkirmish* UQtnSkirmishTrigger::GetOwningSkirmish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishTrigger", "GetOwningSkirmish");

	Params::UQtnSkirmishTrigger_GetOwningSkirmish_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSkirmishTrigger.EvaluateTriggerResponses
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               DeferEvaluationToNextTick                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSkirmishTrigger::EvaluateTriggerResponses(bool DeferEvaluationToNextTick)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSkirmishTrigger", "EvaluateTriggerResponses");

	Params::UQtnSkirmishTrigger_EvaluateTriggerResponses_Params Parms{};

	Parms.DeferEvaluationToNextTick = DeferEvaluationToNextTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnSoundNodeSwitchName
// (None)

class UClass* UQtnSoundNodeSwitchName::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSoundNodeSwitchName");

	return Clss;
}


// QtnSoundNodeSwitchName QtnGame.Default__QtnSoundNodeSwitchName
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSoundNodeSwitchName* UQtnSoundNodeSwitchName::GetDefaultObj()
{
	static class UQtnSoundNodeSwitchName* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSoundNodeSwitchName*>(UQtnSoundNodeSwitchName::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnSoundNodeVOVariantSwitch
// (None)

class UClass* UQtnSoundNodeVOVariantSwitch::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSoundNodeVOVariantSwitch");

	return Clss;
}


// QtnSoundNodeVOVariantSwitch QtnGame.Default__QtnSoundNodeVOVariantSwitch
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSoundNodeVOVariantSwitch* UQtnSoundNodeVOVariantSwitch::GetDefaultObj()
{
	static class UQtnSoundNodeVOVariantSwitch* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSoundNodeVOVariantSwitch*>(UQtnSoundNodeVOVariantSwitch::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnSourceEffectPitchShiftPreset
// (None)

class UClass* UQtnSourceEffectPitchShiftPreset::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSourceEffectPitchShiftPreset");

	return Clss;
}


// QtnSourceEffectPitchShiftPreset QtnGame.Default__QtnSourceEffectPitchShiftPreset
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSourceEffectPitchShiftPreset* UQtnSourceEffectPitchShiftPreset::GetDefaultObj()
{
	static class UQtnSourceEffectPitchShiftPreset* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSourceEffectPitchShiftPreset*>(UQtnSourceEffectPitchShiftPreset::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSourceEffectPitchShiftPreset.SetSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnSourceEffectPitchShiftSettingsInSettings                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnSourceEffectPitchShiftPreset::SetSettings(struct FQtnSourceEffectPitchShiftSettings& InSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSourceEffectPitchShiftPreset", "SetSettings");

	Params::UQtnSourceEffectPitchShiftPreset_SetSettings_Params Parms{};

	Parms.InSettings = InSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnSpawnedActorComponent
// (None)

class UClass* UQtnSpawnedActorComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSpawnedActorComponent");

	return Clss;
}


// QtnSpawnedActorComponent QtnGame.Default__QtnSpawnedActorComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSpawnedActorComponent* UQtnSpawnedActorComponent::GetDefaultObj()
{
	static class UQtnSpawnedActorComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSpawnedActorComponent*>(UQtnSpawnedActorComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSpawnedActorComponent.OnRep_OwningSpawner
// (Final, Native, Private)
// Parameters:

void UQtnSpawnedActorComponent::OnRep_OwningSpawner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawnedActorComponent", "OnRep_OwningSpawner");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnSpawner
// (Actor)

class UClass* AQtnSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSpawner");

	return Clss;
}


// QtnSpawner QtnGame.Default__QtnSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnSpawner* AQtnSpawner::GetDefaultObj()
{
	static class AQtnSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnSpawner*>(AQtnSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSpawner.SpawnWithTag
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        ActorTag                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnSpawner::SpawnWithTag(class FName ActorTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "SpawnWithTag");

	Params::AQtnSpawner_SpawnWithTag_Params Parms{};

	Parms.ActorTag = ActorTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.SpawnSpecificActor_Server
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          DesiredClassToSpawn                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnSpawner::SpawnSpecificActor_Server(TSubclassOf<class AActor> DesiredClassToSpawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "SpawnSpecificActor_Server");

	Params::AQtnSpawner_SpawnSpecificActor_Server_Params Parms{};

	Parms.DesiredClassToSpawn = DesiredClassToSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.SkirmishGroupTelegraphStart_ServerOnly
// (BlueprintAuthorityOnly, Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class AQtnSkirmish*                SpawningSkirmish                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnSkirmishRequestSpawnParamsSkirmishRequestSpawnParams                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AQtnSpawner::SkirmishGroupTelegraphStart_ServerOnly(class AQtnSkirmish* SpawningSkirmish, struct FQtnSkirmishRequestSpawnParams& SkirmishRequestSpawnParams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "SkirmishGroupTelegraphStart_ServerOnly");

	Params::AQtnSpawner_SkirmishGroupTelegraphStart_ServerOnly_Params Parms{};

	Parms.SpawningSkirmish = SpawningSkirmish;
	Parms.SkirmishRequestSpawnParams = SkirmishRequestSpawnParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSpawner.SkirmishGroupTelegraphEnd_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:

void AQtnSpawner::SkirmishGroupTelegraphEnd_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "SkirmishGroupTelegraphEnd_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSpawner.QueueSpawns
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NumSpawnsToQueue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSpawner::QueueSpawns(int32 NumSpawnsToQueue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "QueueSpawns");

	Params::AQtnSpawner_QueueSpawns_Params Parms{};

	Parms.NumSpawnsToQueue = NumSpawnsToQueue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSpawner.OnQtnSpawnerSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      SpawnedActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSpawner::OnQtnSpawnerSpawned(class AActor* SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "OnQtnSpawnerSpawned");

	Params::AQtnSpawner_OnQtnSpawnerSpawned_Params Parms{};

	Parms.SpawnedActor = SpawnedActor;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSpawner.OnQtnReadyForGameplay
// (Event, Public, BlueprintEvent)
// Parameters:

void AQtnSpawner::OnQtnReadyForGameplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "OnQtnReadyForGameplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnSpawner.HandleSimPause
// (Final, Native, Private)
// Parameters:
// bool                               Paused                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSpawner::HandleSimPause(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "HandleSimPause");

	Params::AQtnSpawner_HandleSimPause_Params Parms{};

	Parms.Paused = Paused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSpawner.HandleGameStateReadyForGameplay
// (Final, Native, Public)
// Parameters:
// class AQtnPlayerController*        LocalPlayerController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPlayerUI*                LocalPlayerUI                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                LocalOccupiedBodyPawn                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnSpawner::HandleGameStateReadyForGameplay(class AQtnPlayerController* LocalPlayerController, class AQtnPlayerUI* LocalPlayerUI, class AQtnBodyPawn* LocalOccupiedBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "HandleGameStateReadyForGameplay");

	Params::AQtnSpawner_HandleGameStateReadyForGameplay_Params Parms{};

	Parms.LocalPlayerController = LocalPlayerController;
	Parms.LocalPlayerUI = LocalPlayerUI;
	Parms.LocalOccupiedBodyPawn = LocalOccupiedBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnSpawner.GetSpawnTransformComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// TSubclassOf<class AActor>          DesiredClassToSpawn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* AQtnSpawner::GetSpawnTransformComponent(TSubclassOf<class AActor> DesiredClassToSpawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "GetSpawnTransformComponent");

	Params::AQtnSpawner_GetSpawnTransformComponent_Params Parms{};

	Parms.DesiredClassToSpawn = DesiredClassToSpawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.GetSpawnerRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AQtnSpawner::GetSpawnerRegion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "GetSpawnerRegion");

	Params::AQtnSpawner_GetSpawnerRegion_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.GetOwningSpawner
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      Actor                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnSpawner*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnSpawner* AQtnSpawner::GetOwningSpawner(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "GetOwningSpawner");

	Params::AQtnSpawner_GetOwningSpawner_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.GetLastActiveSpawnedActor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        ActorTagFilter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AQtnSpawner::GetLastActiveSpawnedActor(class FName ActorTagFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "GetLastActiveSpawnedActor");

	Params::AQtnSpawner_GetLastActiveSpawnedActor_Params Parms{};

	Parms.ActorTagFilter = ActorTagFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.GetCurrentSkirmishRequestSpawnParams_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnSkirmishRequestSpawnParamsReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnSkirmishRequestSpawnParams AQtnSpawner::GetCurrentSkirmishRequestSpawnParams_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "GetCurrentSkirmishRequestSpawnParams_ServerOnly");

	Params::AQtnSpawner_GetCurrentSkirmishRequestSpawnParams_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.GetActiveSpawnedActorsByFilter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        ActorTagFilter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AQtnSpawner::GetActiveSpawnedActorsByFilter(class FName ActorTagFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "GetActiveSpawnedActorsByFilter");

	Params::AQtnSpawner_GetActiveSpawnedActorsByFilter_Params Parms{};

	Parms.ActorTagFilter = ActorTagFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpawner.GetActiveSpawnedActors
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>              ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AQtnSpawner::GetActiveSpawnedActors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpawner", "GetActiveSpawnedActors");

	Params::AQtnSpawner_GetActiveSpawnedActors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSpokeComponent
// (None)

class UClass* UQtnSpokeComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSpokeComponent");

	return Clss;
}


// QtnSpokeComponent QtnGame.Default__QtnSpokeComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSpokeComponent* UQtnSpokeComponent::GetDefaultObj()
{
	static class UQtnSpokeComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSpokeComponent*>(UQtnSpokeComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSpokeComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSpokeComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeComponent", "OnDebugDisplay");

	Params::UQtnSpokeComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSpokeComponent.GetVisualizationColor
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AActor*                      RelevantActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForLines                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UQtnSpokeComponent::GetVisualizationColor(class AActor* RelevantActor, bool ForLines)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeComponent", "GetVisualizationColor");

	Params::UQtnSpokeComponent_GetVisualizationColor_Params Parms{};

	Parms.RelevantActor = RelevantActor;
	Parms.ForLines = ForLines;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpokeComponent.GatherRelevantActors
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>              RelevantActors                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnSpokeComponent::GatherRelevantActors(TArray<class AActor*>* RelevantActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeComponent", "GatherRelevantActors");

	Params::UQtnSpokeComponent_GatherRelevantActors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RelevantActors != nullptr)
		*RelevantActors = std::move(Parms.RelevantActors);

}


// Function QtnGame.QtnSpokeComponent.GatherErrors
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class FString>              ErrorMsgs                                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQtnSpokeComponent::GatherErrors(TArray<class FString>* ErrorMsgs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeComponent", "GatherErrors");

	Params::UQtnSpokeComponent_GatherErrors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ErrorMsgs != nullptr)
		*ErrorMsgs = std::move(Parms.ErrorMsgs);

}


// Function QtnGame.QtnSpokeComponent.BuildTextForLabel
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnSpokeComponent::BuildTextForLabel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeComponent", "BuildTextForLabel");

	Params::UQtnSpokeComponent_BuildTextForLabel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSpokeManager
// (None)

class UClass* UQtnSpokeManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSpokeManager");

	return Clss;
}


// QtnSpokeManager QtnGame.Default__QtnSpokeManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSpokeManager* UQtnSpokeManager::GetDefaultObj()
{
	static class UQtnSpokeManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSpokeManager*>(UQtnSpokeManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSpokeManager.OnSpokeManagerDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSpokeManager::OnSpokeManagerDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeManager", "OnSpokeManagerDebugDisplay");

	Params::UQtnSpokeManager_OnSpokeManagerDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnSpokeManager.GetSpokeManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnSpokeManager*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnSpokeManager* UQtnSpokeManager::GetSpokeManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeManager", "GetSpokeManager");

	Params::UQtnSpokeManager_GetSpokeManager_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnSpokeManager.GetRegisteredSpokes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnSpokeComponent*>  ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnSpokeComponent*> UQtnSpokeManager::GetRegisteredSpokes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSpokeManager", "GetRegisteredSpokes");

	Params::UQtnSpokeManager_GetRegisteredSpokes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnStatusEffect
// (None)

class UClass* UQtnStatusEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnStatusEffect");

	return Clss;
}


// QtnStatusEffect QtnGame.Default__QtnStatusEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnStatusEffect* UQtnStatusEffect::GetDefaultObj()
{
	static class UQtnStatusEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnStatusEffect*>(UQtnStatusEffect::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnStatusEffect.SetExpirationTime_ServerOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              DesiredDuration                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::SetExpirationTime_ServerOnly(float DesiredDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "SetExpirationTime_ServerOnly");

	Params::UQtnStatusEffect_SetExpirationTime_ServerOnly_Params Parms{};

	Parms.DesiredDuration = DesiredDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnStatusEffect.ServerInduceExpiration
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:

void UQtnStatusEffect::ServerInduceExpiration()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "ServerInduceExpiration");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnStatusEffect.RefreshStatusEffect_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnStatusEffect::RefreshStatusEffect_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "RefreshStatusEffect_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnStatusEffect.OnStatusEffectTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                              DeltaSeconds                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::OnStatusEffectTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnStatusEffectTick");

	Params::UQtnStatusEffect_OnStatusEffectTick_Params Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnStatusEffect.OnStatusEffectRefresh
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                      AffectedActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::OnStatusEffectRefresh(class AActor* AffectedActor, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnStatusEffectRefresh");

	Params::UQtnStatusEffect_OnStatusEffectRefresh_Params Parms{};

	Parms.AffectedActor = AffectedActor;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnStatusEffect.OnStatusEffectInit_ServerOnly
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                      AffectedActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Instigator                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::OnStatusEffectInit_ServerOnly(class AActor* AffectedActor, class AQtnPawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnStatusEffectInit_ServerOnly");

	Params::UQtnStatusEffect_OnStatusEffectInit_ServerOnly_Params Parms{};

	Parms.AffectedActor = AffectedActor;
	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnStatusEffect.OnStatusEffectEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                      AffectedActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Instigator                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsActorBeingDestroyed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::OnStatusEffectEnd(class AActor* AffectedActor, class AQtnPawn* Instigator, bool IsActorBeingDestroyed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnStatusEffectEnd");

	Params::UQtnStatusEffect_OnStatusEffectEnd_Params Parms{};

	Parms.AffectedActor = AffectedActor;
	Parms.Instigator = Instigator;
	Parms.IsActorBeingDestroyed = IsActorBeingDestroyed;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnStatusEffect.OnStatusEffectBegin
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                      AffectedActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Instigator                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::OnStatusEffectBegin(class AActor* AffectedActor, class AQtnPawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnStatusEffectBegin");

	Params::UQtnStatusEffect_OnStatusEffectBegin_Params Parms{};

	Parms.AffectedActor = AffectedActor;
	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnStatusEffect.OnRep_RefreshCount
// (Final, Native, Private)
// Parameters:

void UQtnStatusEffect::OnRep_RefreshCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnRep_RefreshCount");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnStatusEffect.OnRep_OwningDamageReceptorComponent
// (Final, Native, Protected)
// Parameters:

void UQtnStatusEffect::OnRep_OwningDamageReceptorComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnRep_OwningDamageReceptorComponent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnStatusEffect.OnRep_ExpirationDuration
// (Final, Native, Private)
// Parameters:

void UQtnStatusEffect::OnRep_ExpirationDuration()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnRep_ExpirationDuration");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnStatusEffect.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "OnDebugDisplay");

	Params::UQtnStatusEffect_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnStatusEffect.IsServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnStatusEffect::IsServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "IsServer");

	Params::UQtnStatusEffect_IsServer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.InduceStatusExpiration_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnStatusEffect::InduceStatusExpiration_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "InduceStatusExpiration_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnStatusEffect.GetStatusInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnStatusEffect::GetStatusInstigator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetStatusInstigator");

	Params::UQtnStatusEffect_GetStatusInstigator_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetStatusEffectArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UQtnStatusEffect>StatusEffectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnStatusEffect*            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnStatusEffect* UQtnStatusEffect::GetStatusEffectArchetype(TSubclassOf<class UQtnStatusEffect> StatusEffectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetStatusEffectArchetype");

	Params::UQtnStatusEffect_GetStatusEffectArchetype_Params Parms{};

	Parms.StatusEffectClass = StatusEffectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnStatusEffect::GetRemainingTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetRemainingTime");

	Params::UQtnStatusEffect_GetRemainingTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetOwningDamageReceptorComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnDamageReceptorComponent* ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnDamageReceptorComponent* UQtnStatusEffect::GetOwningDamageReceptorComponent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetOwningDamageReceptorComponent");

	Params::UQtnStatusEffect_GetOwningDamageReceptorComponent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnStatusEffect::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetIconForUI");

	Params::UQtnStatusEffect_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetExpirationTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnStatusEffect::GetExpirationTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetExpirationTime");

	Params::UQtnStatusEffect_GetExpirationTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetCompletionRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnStatusEffect::GetCompletionRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetCompletionRatio");

	Params::UQtnStatusEffect_GetCompletionRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetAffectedBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnStatusEffect::GetAffectedBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetAffectedBody");

	Params::UQtnStatusEffect_GetAffectedBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.GetAffectedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnStatusEffect::GetAffectedActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "GetAffectedActor");

	Params::UQtnStatusEffect_GetAffectedActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStatusEffect.DecrementRemainingTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnStatusEffect::DecrementRemainingTime(float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStatusEffect", "DecrementRemainingTime");

	Params::UQtnStatusEffect_DecrementRemainingTime_Params Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnStatusAllyProximity
// (None)

class UClass* UQtnStatusAllyProximity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnStatusAllyProximity");

	return Clss;
}


// QtnStatusAllyProximity QtnGame.Default__QtnStatusAllyProximity
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnStatusAllyProximity* UQtnStatusAllyProximity::GetDefaultObj()
{
	static class UQtnStatusAllyProximity* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnStatusAllyProximity*>(UQtnStatusAllyProximity::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnStealthSettings
// (None)

class UClass* UQtnStealthSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnStealthSettings");

	return Clss;
}


// QtnStealthSettings QtnGame.Default__QtnStealthSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnStealthSettings* UQtnStealthSettings::GetDefaultObj()
{
	static class UQtnStealthSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnStealthSettings*>(UQtnStealthSettings::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnStructs
// (None)

class UClass* UQtnStructs::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnStructs");

	return Clss;
}


// QtnStructs QtnGame.Default__QtnStructs
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnStructs* UQtnStructs::GetDefaultObj()
{
	static class UQtnStructs* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnStructs*>(UQtnStructs::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnStructs.ToStringInt
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedInt               RangedInt                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnStructs::ToStringInt(struct FQtnRangedInt& RangedInt)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "ToStringInt");

	Params::UQtnStructs_ToStringInt_Params Parms{};

	Parms.RangedInt = RangedInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStructs.ToString
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedFloat             RangedFloat                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnStructs::ToString(struct FQtnRangedFloat& RangedFloat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "ToString");

	Params::UQtnStructs_ToString_Params Parms{};

	Parms.RangedFloat = RangedFloat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStructs.GetScaledValue
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedFloat             RangedFloat                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              Ratio                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnStructs::GetScaledValue(struct FQtnRangedFloat& RangedFloat, float Ratio)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "GetScaledValue");

	Params::UQtnStructs_GetScaledValue_Params Parms{};

	Parms.RangedFloat = RangedFloat;
	Parms.Ratio = Ratio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStructs.GetRatio
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedFloat             RangedFloat                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ScaledValue                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnStructs::GetRatio(struct FQtnRangedFloat& RangedFloat, float ScaledValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "GetRatio");

	Params::UQtnStructs_GetRatio_Params Parms{};

	Parms.RangedFloat = RangedFloat;
	Parms.ScaledValue = ScaledValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStructs.GetRandomValue
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedFloat             RangedFloat                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnStructs::GetRandomValue(struct FQtnRangedFloat& RangedFloat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "GetRandomValue");

	Params::UQtnStructs_GetRandomValue_Params Parms{};

	Parms.RangedFloat = RangedFloat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStructs.GetRandomInt
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, Const)
// Parameters:
// struct FQtnRangedInt               RangedInt                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnStructs::GetRandomInt(struct FQtnRangedInt& RangedInt)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "GetRandomInt");

	Params::UQtnStructs_GetRandomInt_Params Parms{};

	Parms.RangedInt = RangedInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStructs.GetClampedValue
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedFloat             RangedFloat                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              RawValue                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnStructs::GetClampedValue(struct FQtnRangedFloat& RangedFloat, float RawValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "GetClampedValue");

	Params::UQtnStructs_GetClampedValue_Params Parms{};

	Parms.RangedFloat = RangedFloat;
	Parms.RawValue = RawValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnStructs.GetClampedInt
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRangedInt               RangedInt                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                              RawInt                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnStructs::GetClampedInt(struct FQtnRangedInt& RangedInt, int32 RawInt)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnStructs", "GetClampedInt");

	Params::UQtnStructs_GetClampedInt_Params Parms{};

	Parms.RangedInt = RangedInt;
	Parms.RawInt = RawInt;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnSynchComponent
// (SceneComponent)

class UClass* UQtnSynchComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnSynchComponent");

	return Clss;
}


// QtnSynchComponent QtnGame.Default__QtnSynchComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnSynchComponent* UQtnSynchComponent::GetDefaultObj()
{
	static class UQtnSynchComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnSynchComponent*>(UQtnSynchComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnSynchComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnSynchComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnSynchComponent", "OnDebugDisplay");

	Params::UQtnSynchComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Class QtnGame.QtnTagDescriptionComponent
// (None)

class UClass* UQtnTagDescriptionComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTagDescriptionComponent");

	return Clss;
}


// QtnTagDescriptionComponent QtnGame.Default__QtnTagDescriptionComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTagDescriptionComponent* UQtnTagDescriptionComponent::GetDefaultObj()
{
	static class UQtnTagDescriptionComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTagDescriptionComponent*>(UQtnTagDescriptionComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTagDescriptionComponent.TagIsChildOfParent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                ChildToCheck                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ParentToCheck                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnTagDescriptionComponent::TagIsChildOfParent(struct FGameplayTag& ChildToCheck, struct FGameplayTag& ParentToCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "TagIsChildOfParent");

	Params::UQtnTagDescriptionComponent_TagIsChildOfParent_Params Parms{};

	Parms.ChildToCheck = ChildToCheck;
	Parms.ParentToCheck = ParentToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.RestoreTagsFromPackedList_ServerOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>              PackedList                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnTagDescriptionComponent::RestoreTagsFromPackedList_ServerOnly(TArray<class FString>& PackedList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "RestoreTagsFromPackedList_ServerOnly");

	Params::UQtnTagDescriptionComponent_RestoreTagsFromPackedList_ServerOnly_Params Parms{};

	Parms.PackedList = PackedList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTagDescriptionComponent.RemoveGameplayTag_ServerOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                TagToRemove                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnTagDescriptionComponent::RemoveGameplayTag_ServerOnly(struct FGameplayTag& TagToRemove)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "RemoveGameplayTag_ServerOnly");

	Params::UQtnTagDescriptionComponent_RemoveGameplayTag_ServerOnly_Params Parms{};

	Parms.TagToRemove = TagToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.ProcessTagReactions
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnTagReactiveWeighting>ReactionsToTags                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              LevelOfCaller                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, float>                 ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, float> UQtnTagDescriptionComponent::ProcessTagReactions(TArray<struct FQtnTagReactiveWeighting>& ReactionsToTags, int32 LevelOfCaller)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "ProcessTagReactions");

	Params::UQtnTagDescriptionComponent_ProcessTagReactions_Params Parms{};

	Parms.ReactionsToTags = ReactionsToTags;
	Parms.LevelOfCaller = LevelOfCaller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.OnRep_TagDescriptors
// (Final, Native, Protected)
// Parameters:

void UQtnTagDescriptionComponent::OnRep_TagDescriptors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "OnRep_TagDescriptors");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTagDescriptionComponent.MakePackedTagList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UQtnTagDescriptionComponent::MakePackedTagList()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "MakePackedTagList");

	Params::UQtnTagDescriptionComponent_MakePackedTagList_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GetWeaponTypeAsGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTagDescriptionComponent::GetWeaponTypeAsGameplayTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GetWeaponTypeAsGameplayTag");

	Params::UQtnTagDescriptionComponent_GetWeaponTypeAsGameplayTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GetTagDescriptors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnTagPresence>     ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<struct FQtnTagPresence> UQtnTagDescriptionComponent::GetTagDescriptors()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GetTagDescriptors");

	Params::UQtnTagDescriptionComponent_GetTagDescriptors_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GetRarityColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UQtnTagDescriptionComponent::GetRarityColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GetRarityColor");

	Params::UQtnTagDescriptionComponent_GetRarityColor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GetRarityAsGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTagDescriptionComponent::GetRarityAsGameplayTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GetRarityAsGameplayTag");

	Params::UQtnTagDescriptionComponent_GetRarityAsGameplayTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GetItemTypeAsGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               FoundItemType                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTagDescriptionComponent::GetItemTypeAsGameplayTag(bool* FoundItemType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GetItemTypeAsGameplayTag");

	Params::UQtnTagDescriptionComponent_GetItemTypeAsGameplayTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundItemType != nullptr)
		*FoundItemType = Parms.FoundItemType;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GetCurrencyTypeAsGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTagDescriptionComponent::GetCurrencyTypeAsGameplayTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GetCurrencyTypeAsGameplayTag");

	Params::UQtnTagDescriptionComponent_GetCurrencyTypeAsGameplayTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GetConsumableTypeAsGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTagDescriptionComponent::GetConsumableTypeAsGameplayTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GetConsumableTypeAsGameplayTag");

	Params::UQtnTagDescriptionComponent_GetConsumableTypeAsGameplayTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.GenerateTagListDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnTagDescriptionComponent::GenerateTagListDescription()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "GenerateTagListDescription");

	Params::UQtnTagDescriptionComponent_GenerateTagListDescription_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.FindTagInTagDescriptors
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                ParentTagToFind                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTagDescriptionComponent::FindTagInTagDescriptors(struct FGameplayTag& ParentTagToFind)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "FindTagInTagDescriptors");

	Params::UQtnTagDescriptionComponent_FindTagInTagDescriptors_Params Parms{};

	Parms.ParentTagToFind = ParentTagToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.FindIndexedTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                TagToFind                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnIndexedTag              ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnIndexedTag UQtnTagDescriptionComponent::FindIndexedTag(struct FGameplayTag& TagToFind)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "FindIndexedTag");

	Params::UQtnTagDescriptionComponent_FindIndexedTag_Params Parms{};

	Parms.TagToFind = TagToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTagDescriptionComponent.AddGameplayTag_ServerOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                TagToAdd                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TagPresence                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTagDescriptionComponent::AddGameplayTag_ServerOnly(struct FGameplayTag& TagToAdd, float TagPresence)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTagDescriptionComponent", "AddGameplayTag_ServerOnly");

	Params::UQtnTagDescriptionComponent_AddGameplayTag_ServerOnly_Params Parms{};

	Parms.TagToAdd = TagToAdd;
	Parms.TagPresence = TagPresence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnTargetableInterface
// (None)

class UClass* IQtnTargetableInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTargetableInterface");

	return Clss;
}


// QtnTargetableInterface QtnGame.Default__QtnTargetableInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnTargetableInterface* IQtnTargetableInterface::GetDefaultObj()
{
	static class IQtnTargetableInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnTargetableInterface*>(IQtnTargetableInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTargetableInterface.CanBeInteractedWith
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// enum class EQtnTargetInteractionEnumTargetInteraction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    InteractingPawn                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        AffordancePrompt                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IQtnTargetableInterface::CanBeInteractedWith(enum class EQtnTargetInteractionEnum TargetInteraction, class AQtnPawn* InteractingPawn, class FText* AffordancePrompt)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTargetableInterface", "CanBeInteractedWith");

	Params::IQtnTargetableInterface_CanBeInteractedWith_Params Parms{};

	Parms.TargetInteraction = TargetInteraction;
	Parms.InteractingPawn = InteractingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (AffordancePrompt != nullptr)
		*AffordancePrompt = Parms.AffordancePrompt;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnTeamAttitudeUtils
// (None)

class UClass* UQtnTeamAttitudeUtils::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTeamAttitudeUtils");

	return Clss;
}


// QtnTeamAttitudeUtils QtnGame.Default__QtnTeamAttitudeUtils
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTeamAttitudeUtils* UQtnTeamAttitudeUtils::GetDefaultObj()
{
	static class UQtnTeamAttitudeUtils* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTeamAttitudeUtils*>(UQtnTeamAttitudeUtils::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTeamAttitudeUtils.HasAttitudeSet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EQtnTeamAttitudeFlags   AttitudeFlags                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTeamAttitude        Attitude                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnTeamAttitudeUtils::HasAttitudeSet(enum class EQtnTeamAttitudeFlags AttitudeFlags, enum class EQtnTeamAttitude Attitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTeamAttitudeUtils", "HasAttitudeSet");

	Params::UQtnTeamAttitudeUtils_HasAttitudeSet_Params Parms{};

	Parms.AttitudeFlags = AttitudeFlags;
	Parms.Attitude = Attitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTeamAttitudeUtils.Conv_AttitudeToFlags
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EQtnTeamAttitude        Attitude                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTeamAttitudeFlags   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnTeamAttitudeFlags UQtnTeamAttitudeUtils::Conv_AttitudeToFlags(enum class EQtnTeamAttitude Attitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTeamAttitudeUtils", "Conv_AttitudeToFlags");

	Params::UQtnTeamAttitudeUtils_Conv_AttitudeToFlags_Params Parms{};

	Parms.Attitude = Attitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnTeam
// (None)

class UClass* UQtnTeam::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTeam");

	return Clss;
}


// QtnTeam QtnGame.Default__QtnTeam
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTeam* UQtnTeam::GetDefaultObj()
{
	static class UQtnTeam* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTeam*>(UQtnTeam::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTeam.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnTeam::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTeam", "GetIconForUI");

	Params::UQtnTeam_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnTeamManagerComponent
// (None)

class UClass* UQtnTeamManagerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTeamManagerComponent");

	return Clss;
}


// QtnTeamManagerComponent QtnGame.Default__QtnTeamManagerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTeamManagerComponent* UQtnTeamManagerComponent::GetDefaultObj()
{
	static class UQtnTeamManagerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTeamManagerComponent*>(UQtnTeamManagerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTeamManagerComponent.SetTeamAttitudes_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnTeam>        TeamClassA                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTeam>        TeamClassB                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTeamAttitude        TeamAttitude                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTeamManagerComponent::SetTeamAttitudes_ServerOnly(TSubclassOf<class UQtnTeam> TeamClassA, TSubclassOf<class UQtnTeam> TeamClassB, enum class EQtnTeamAttitude TeamAttitude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTeamManagerComponent", "SetTeamAttitudes_ServerOnly");

	Params::UQtnTeamManagerComponent_SetTeamAttitudes_ServerOnly_Params Parms{};

	Parms.TeamClassA = TeamClassA;
	Parms.TeamClassB = TeamClassB;
	Parms.TeamAttitude = TeamAttitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnTermLocalization
// (None)

class UClass* UQtnTermLocalization::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTermLocalization");

	return Clss;
}


// QtnTermLocalization QtnGame.Default__QtnTermLocalization
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTermLocalization* UQtnTermLocalization::GetDefaultObj()
{
	static class UQtnTermLocalization* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTermLocalization*>(UQtnTermLocalization::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTermLocalization.InitializeTermLocalization
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void UQtnTermLocalization::InitializeTermLocalization()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "InitializeTermLocalization");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTermLocalization.GetWeaponSubtypeGameplayTagFromStringCodes
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              TagsToFind                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTermLocalization::GetWeaponSubtypeGameplayTagFromStringCodes(TArray<class FString>& TagsToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetWeaponSubtypeGameplayTagFromStringCodes");

	Params::UQtnTermLocalization_GetWeaponSubtypeGameplayTagFromStringCodes_Params Parms{};

	Parms.TagsToFind = TagsToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetWeaponSubtypeGameplayTagFromStringCode
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      TagToFind                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTermLocalization::GetWeaponSubtypeGameplayTagFromStringCode(class FString& TagToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetWeaponSubtypeGameplayTagFromStringCode");

	Params::UQtnTermLocalization_GetWeaponSubtypeGameplayTagFromStringCode_Params Parms{};

	Parms.TagToFind = TagToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetStringCodeFromGameplayTagEnum
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                TagToFind                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnTermLocalization::GetStringCodeFromGameplayTagEnum(struct FGameplayTag& TagToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetStringCodeFromGameplayTagEnum");

	Params::UQtnTermLocalization_GetStringCodeFromGameplayTagEnum_Params Parms{};

	Parms.TagToFind = TagToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetRarityGameplayTagFromStringCodes
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              TagsToFind                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTermLocalization::GetRarityGameplayTagFromStringCodes(TArray<class FString>& TagsToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetRarityGameplayTagFromStringCodes");

	Params::UQtnTermLocalization_GetRarityGameplayTagFromStringCodes_Params Parms{};

	Parms.TagsToFind = TagsToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetRarityGameplayTagFromStringCode
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      TagToFind                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTermLocalization::GetRarityGameplayTagFromStringCode(class FString& TagToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetRarityGameplayTagFromStringCode");

	Params::UQtnTermLocalization_GetRarityGameplayTagFromStringCode_Params Parms{};

	Parms.TagToFind = TagToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetLocalizedTextFromTagCode
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      TagCodeToUse                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PrintDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnTermLocalization::GetLocalizedTextFromTagCode(class FString& TagCodeToUse, bool* TagFound, bool PrintDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetLocalizedTextFromTagCode");

	Params::UQtnTermLocalization_GetLocalizedTextFromTagCode_Params Parms{};

	Parms.TagCodeToUse = TagCodeToUse;
	Parms.PrintDebug = PrintDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetLocalizedTextFromTable
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      NamespaceDB                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      TextIdentity                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ValidResult                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PrintDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnTermLocalization::GetLocalizedTextFromTable(class FString& NamespaceDB, class FString& TextIdentity, bool* ValidResult, bool PrintDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetLocalizedTextFromTable");

	Params::UQtnTermLocalization_GetLocalizedTextFromTable_Params Parms{};

	Parms.NamespaceDB = NamespaceDB;
	Parms.TextIdentity = TextIdentity;
	Parms.PrintDebug = PrintDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ValidResult != nullptr)
		*ValidResult = Parms.ValidResult;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetLocalizedTextFromRPGTerm
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      RPGTerm                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PrintDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnTermLocalization::GetLocalizedTextFromRPGTerm(class FString& RPGTerm, bool* TagFound, bool PrintDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetLocalizedTextFromRPGTerm");

	Params::UQtnTermLocalization_GetLocalizedTextFromRPGTerm_Params Parms{};

	Parms.RPGTerm = RPGTerm;
	Parms.PrintDebug = PrintDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetLocalizedTextFromGameplayTag
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                TagToUse                                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PrintDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnTermLocalization::GetLocalizedTextFromGameplayTag(struct FGameplayTag& TagToUse, bool* TagFound, bool PrintDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetLocalizedTextFromGameplayTag");

	Params::UQtnTermLocalization_GetLocalizedTextFromGameplayTag_Params Parms{};

	Parms.TagToUse = TagToUse;
	Parms.PrintDebug = PrintDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetItemTypeGameplayTagFromStringCodes
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>              TagsToFind                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTermLocalization::GetItemTypeGameplayTagFromStringCodes(TArray<class FString>& TagsToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetItemTypeGameplayTagFromStringCodes");

	Params::UQtnTermLocalization_GetItemTypeGameplayTagFromStringCodes_Params Parms{};

	Parms.TagsToFind = TagsToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetItemTypeGameplayTagFromStringCode
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      TagToFind                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTermLocalization::GetItemTypeGameplayTagFromStringCode(class FString& TagToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetItemTypeGameplayTagFromStringCode");

	Params::UQtnTermLocalization_GetItemTypeGameplayTagFromStringCode_Params Parms{};

	Parms.TagToFind = TagToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetGameplayTagFromStringCode
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      TagToFind                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnTermLocalization::GetGameplayTagFromStringCode(class FString& TagToFind, bool* TagFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetGameplayTagFromStringCode");

	Params::UQtnTermLocalization_GetGameplayTagFromStringCode_Params Parms{};

	Parms.TagToFind = TagToFind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GetColorFromRarityGameplayTag
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                TagToFind                                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TagFound                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PrintDebug                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UQtnTermLocalization::GetColorFromRarityGameplayTag(struct FGameplayTag& TagToFind, bool* TagFound, bool PrintDebug)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GetColorFromRarityGameplayTag");

	Params::UQtnTermLocalization_GetColorFromRarityGameplayTag_Params Parms{};

	Parms.TagToFind = TagToFind;
	Parms.PrintDebug = PrintDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TagFound != nullptr)
		*TagFound = Parms.TagFound;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GenerateNameTextFromItemData
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ItemToName                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnTermLocalization::GenerateNameTextFromItemData(struct FQtnItemData& ItemToName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GenerateNameTextFromItemData");

	Params::UQtnTermLocalization_GenerateNameTextFromItemData_Params Parms{};

	Parms.ItemToName = ItemToName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.GenerateDescriptionFromStatDelta
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                      DerivedStatKey                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaValue                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnTermLocalization::GenerateDescriptionFromStatDelta(class FString& DerivedStatKey, float DeltaValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "GenerateDescriptionFromStatDelta");

	Params::UQtnTermLocalization_GenerateDescriptionFromStatDelta_Params Parms{};

	Parms.DerivedStatKey = DerivedStatKey;
	Parms.DeltaValue = DeltaValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTermLocalization.CheckForTermNegation
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      TermToCheck                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ValueOfTerm                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowNegation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnTermLocalization::CheckForTermNegation(class FString& TermToCheck, float ValueOfTerm, bool AllowNegation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTermLocalization", "CheckForTermNegation");

	Params::UQtnTermLocalization_CheckForTermNegation_Params Parms{};

	Parms.TermToCheck = TermToCheck;
	Parms.ValueOfTerm = ValueOfTerm;
	Parms.AllowNegation = AllowNegation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnTextRenderComponent
// (SceneComponent, PrimitiveComponent)

class UClass* UQtnTextRenderComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTextRenderComponent");

	return Clss;
}


// QtnTextRenderComponent QtnGame.Default__QtnTextRenderComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTextRenderComponent* UQtnTextRenderComponent::GetDefaultObj()
{
	static class UQtnTextRenderComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTextRenderComponent*>(UQtnTextRenderComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnThresholdAttribute
// (None)

class UClass* UQtnThresholdAttribute::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnThresholdAttribute");

	return Clss;
}


// QtnThresholdAttribute QtnGame.Default__QtnThresholdAttribute
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnThresholdAttribute* UQtnThresholdAttribute::GetDefaultObj()
{
	static class UQtnThresholdAttribute* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnThresholdAttribute*>(UQtnThresholdAttribute::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnThresholdAttribute.UpdateStatusEffectCausingThreshold_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnThresholdAttribute::UpdateStatusEffectCausingThreshold_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "UpdateStatusEffectCausingThreshold_ServerOnly");

	Params::UQtnThresholdAttribute_UpdateStatusEffectCausingThreshold_ServerOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnThresholdAttribute.SetSpecificCulprit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    Culprit                                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnThresholdAttribute::SetSpecificCulprit(class AQtnPawn* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "SetSpecificCulprit");

	Params::UQtnThresholdAttribute_SetSpecificCulprit_Params Parms{};

	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThresholdAttribute.OnStatusEffectAddedEvent
// (Final, Native, Protected)
// Parameters:
// class UQtnStatusEffect*            StatusEffect                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnThresholdAttribute::OnStatusEffectAddedEvent(class UQtnStatusEffect* StatusEffect)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "OnStatusEffectAddedEvent");

	Params::UQtnThresholdAttribute_OnStatusEffectAddedEvent_Params Parms{};

	Parms.StatusEffect = StatusEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThresholdAttribute.OnRep_HasEverReachedThreshold
// (Final, Native, Protected)
// Parameters:

void UQtnThresholdAttribute::OnRep_HasEverReachedThreshold()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "OnRep_HasEverReachedThreshold");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThresholdAttribute.OnAffectedBodyAlivenessChangeEvent
// (Final, Native, Protected)
// Parameters:
// class AQtnBodyPawn*                bodyPawn                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      AlivenessInstigator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       OldBodyAliveness                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnBodyAliveness       bodyAliveness                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnThresholdAttribute::OnAffectedBodyAlivenessChangeEvent(class AQtnBodyPawn* bodyPawn, class AActor* AlivenessInstigator, enum class EQtnBodyAliveness OldBodyAliveness, enum class EQtnBodyAliveness bodyAliveness, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "OnAffectedBodyAlivenessChangeEvent");

	Params::UQtnThresholdAttribute_OnAffectedBodyAlivenessChangeEvent_Params Parms{};

	Parms.bodyPawn = bodyPawn;
	Parms.AlivenessInstigator = AlivenessInstigator;
	Parms.OldBodyAliveness = OldBodyAliveness;
	Parms.bodyAliveness = bodyAliveness;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThresholdAttribute.HasReachedThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnThresholdAttribute::HasReachedThreshold()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "HasReachedThreshold");

	Params::UQtnThresholdAttribute_HasReachedThreshold_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnThresholdAttribute.HasEverReachedThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnThresholdAttribute::HasEverReachedThreshold()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "HasEverReachedThreshold");

	Params::UQtnThresholdAttribute_HasEverReachedThreshold_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnThresholdAttribute.GetThresholdValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnThresholdAttribute::GetThresholdValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "GetThresholdValue");

	Params::UQtnThresholdAttribute_GetThresholdValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnThresholdAttribute.GetCulprit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnThresholdAttribute::GetCulprit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThresholdAttribute", "GetCulprit");

	Params::UQtnThresholdAttribute_GetCulprit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnThrowableComponent
// (None)

class UClass* UQtnThrowableComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnThrowableComponent");

	return Clss;
}


// QtnThrowableComponent QtnGame.Default__QtnThrowableComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnThrowableComponent* UQtnThrowableComponent::GetDefaultObj()
{
	static class UQtnThrowableComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnThrowableComponent*>(UQtnThrowableComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnThrowableComponent.ServerDoLaunch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AQtnPawn*                    POwningPawn                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StackCount                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnViewPoint               ClientPawnViewPoint                                              (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnThrowableComponent::ServerDoLaunch(class AQtnPawn* POwningPawn, int32 StackCount, const struct FQtnViewPoint& ClientPawnViewPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "ServerDoLaunch");

	Params::UQtnThrowableComponent_ServerDoLaunch_Params Parms{};

	Parms.POwningPawn = POwningPawn;
	Parms.StackCount = StackCount;
	Parms.ClientPawnViewPoint = ClientPawnViewPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThrowableComponent.OnRep_ProjectileState
// (Final, Native, Private)
// Parameters:

void UQtnThrowableComponent::OnRep_ProjectileState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "OnRep_ProjectileState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThrowableComponent.OnPhysicsSleep_Authority
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         PSleepingComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        BoneName                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnThrowableComponent::OnPhysicsSleep_Authority(class UPrimitiveComponent* PSleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "OnPhysicsSleep_Authority");

	Params::UQtnThrowableComponent_OnPhysicsSleep_Authority_Params Parms{};

	Parms.PSleepingComponent = PSleepingComponent;
	Parms.BoneName = BoneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThrowableComponent.OnHit_Authority
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         PHitComp                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POtherActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         POtherComp                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnThrowableComponent::OnHit_Authority(class UPrimitiveComponent* PHitComp, class AActor* POtherActor, class UPrimitiveComponent* POtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "OnHit_Authority");

	Params::UQtnThrowableComponent_OnHit_Authority_Params Parms{};

	Parms.PHitComp = PHitComp;
	Parms.POtherActor = POtherActor;
	Parms.POtherComp = POtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThrowableComponent.MulticastPlayFractureFX
// (Net, Native, Event, NetMulticast, Public)
// Parameters:

void UQtnThrowableComponent::MulticastPlayFractureFX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "MulticastPlayFractureFX");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThrowableComponent.MulticastPlayBreakingFX
// (Net, Native, Event, NetMulticast, Public)
// Parameters:

void UQtnThrowableComponent::MulticastPlayBreakingFX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "MulticastPlayBreakingFX");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThrowableComponent.MulticastOnDirectHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AQtnPawn*                    PPerpetrator                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      POtherActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnThrowableComponent::MulticastOnDirectHit(class AQtnPawn* PPerpetrator, class AActor* POtherActor, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "MulticastOnDirectHit");

	Params::UQtnThrowableComponent_MulticastOnDirectHit_Params Parms{};

	Parms.PPerpetrator = PPerpetrator;
	Parms.POtherActor = POtherActor;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnThrowableComponent.GetAimingArcEndpoint
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  OutHitResult                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// enum class EQtnOutputValidityEnum  OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnThrowableComponent::GetAimingArcEndpoint(class UObject* SelfReference, struct FHitResult* OutHitResult, enum class EQtnOutputValidityEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnThrowableComponent", "GetAimingArcEndpoint");

	Params::UQtnThrowableComponent_GetAimingArcEndpoint_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Class QtnGame.RoundRobinComponentAggregation
// (None)

class UClass* URoundRobinComponentAggregation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("RoundRobinComponentAggregation");

	return Clss;
}


// RoundRobinComponentAggregation QtnGame.Default__RoundRobinComponentAggregation
// (Public, ClassDefaultObject, ArchetypeObject)

class URoundRobinComponentAggregation* URoundRobinComponentAggregation::GetDefaultObj()
{
	static class URoundRobinComponentAggregation* Default = nullptr;

	if (!Default)
		Default = static_cast<URoundRobinComponentAggregation*>(URoundRobinComponentAggregation::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.RoundRobinActorAggregation
// (None)

class UClass* URoundRobinActorAggregation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("RoundRobinActorAggregation");

	return Clss;
}


// RoundRobinActorAggregation QtnGame.Default__RoundRobinActorAggregation
// (Public, ClassDefaultObject, ArchetypeObject)

class URoundRobinActorAggregation* URoundRobinActorAggregation::GetDefaultObj()
{
	static class URoundRobinActorAggregation* Default = nullptr;

	if (!Default)
		Default = static_cast<URoundRobinActorAggregation*>(URoundRobinActorAggregation::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnTicketHolderInterface
// (None)

class UClass* IQtnTicketHolderInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTicketHolderInterface");

	return Clss;
}


// QtnTicketHolderInterface QtnGame.Default__QtnTicketHolderInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnTicketHolderInterface* IQtnTicketHolderInterface::GetDefaultObj()
{
	static class IQtnTicketHolderInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnTicketHolderInterface*>(IQtnTicketHolderInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTicketHolderInterface.OnTicketLost
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UQtnTicketType>  TicketType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQtnTicketHolderInterface::OnTicketLost(TSubclassOf<class UQtnTicketType> TicketType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTicketHolderInterface", "OnTicketLost");

	Params::IQtnTicketHolderInterface_OnTicketLost_Params Parms{};

	Parms.TicketType = TicketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnTicketManager
// (None)

class UClass* UQtnTicketManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTicketManager");

	return Clss;
}


// QtnTicketManager QtnGame.Default__QtnTicketManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTicketManager* UQtnTicketManager::GetDefaultObj()
{
	static class UQtnTicketManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTicketManager*>(UQtnTicketManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTicketManager.SetTicketOwnerReturnCooldown_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnTicketType>  TicketType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    TicketOwner                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             NewCooldown                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnTicketManager::SetTicketOwnerReturnCooldown_ServerOnly(TSubclassOf<class UQtnTicketType> TicketType, class AQtnPawn* TicketOwner, struct FQtnRangedFloat& NewCooldown)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTicketManager", "SetTicketOwnerReturnCooldown_ServerOnly");

	Params::UQtnTicketManager_SetTicketOwnerReturnCooldown_ServerOnly_Params Parms{};

	Parms.TicketType = TicketType;
	Parms.TicketOwner = TicketOwner;
	Parms.NewCooldown = NewCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTicketManager.SetTicketOwnerHandoutCooldown_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnTicketType>  TicketType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    TicketOwner                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             NewCooldown                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnTicketManager::SetTicketOwnerHandoutCooldown_ServerOnly(TSubclassOf<class UQtnTicketType> TicketType, class AQtnPawn* TicketOwner, struct FQtnRangedFloat& NewCooldown)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTicketManager", "SetTicketOwnerHandoutCooldown_ServerOnly");

	Params::UQtnTicketManager_SetTicketOwnerHandoutCooldown_ServerOnly_Params Parms{};

	Parms.TicketType = TicketType;
	Parms.TicketOwner = TicketOwner;
	Parms.NewCooldown = NewCooldown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnTicketType
// (None)

class UClass* UQtnTicketType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTicketType");

	return Clss;
}


// QtnTicketType QtnGame.Default__QtnTicketType
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTicketType* UQtnTicketType::GetDefaultObj()
{
	static class UQtnTicketType* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTicketType*>(UQtnTicketType::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnTurretPawn
// (Actor, Pawn)

class UClass* AQtnTurretPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTurretPawn");

	return Clss;
}


// QtnTurretPawn QtnGame.Default__QtnTurretPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnTurretPawn* AQtnTurretPawn::GetDefaultObj()
{
	static class AQtnTurretPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnTurretPawn*>(AQtnTurretPawn::StaticClass()->DefaultObject);

	return Default;
}


// DelegateFunction QtnGame.QtnTurretPawn.QtnRelevantEnemyChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AQtnPawn*                    MostRelevantEnemy                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnTurretPawn::QtnRelevantEnemyChangeEvent__DelegateSignature(class AQtnPawn* MostRelevantEnemy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPawn", "QtnRelevantEnemyChangeEvent__DelegateSignature");

	Params::AQtnTurretPawn_QtnRelevantEnemyChangeEvent__DelegateSignature_Params Parms{};

	Parms.MostRelevantEnemy = MostRelevantEnemy;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnTurretPawn.OnRep_MostRelevantEnemy
// (Final, Native, Protected)
// Parameters:

void AQtnTurretPawn::OnRep_MostRelevantEnemy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPawn", "OnRep_MostRelevantEnemy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTurretPawn.IsHijacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnTurretPawn::IsHijacked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPawn", "IsHijacked");

	Params::AQtnTurretPawn_IsHijacked_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTurretPawn.GetTurretController
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnTurretController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnTurretController* AQtnTurretPawn::GetTurretController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPawn", "GetTurretController");

	Params::AQtnTurretPawn_GetTurretController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTurretPawn.GetMostRelevantEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* AQtnTurretPawn::GetMostRelevantEnemy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPawn", "GetMostRelevantEnemy");

	Params::AQtnTurretPawn_GetMostRelevantEnemy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTurretPawn.GetHijackedHUDArchetype
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnScreen>      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnScreen> AQtnTurretPawn::GetHijackedHUDArchetype()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPawn", "GetHijackedHUDArchetype");

	Params::AQtnTurretPawn_GetHijackedHUDArchetype_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTurretPawn.GetEnemyAimRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AQtnTurretPawn::GetEnemyAimRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPawn", "GetEnemyAimRotation");

	Params::AQtnTurretPawn_GetEnemyAimRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnTurretBossPawn
// (Actor, Pawn)

class UClass* AQtnTurretBossPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTurretBossPawn");

	return Clss;
}


// QtnTurretBossPawn QtnGame.Default__QtnTurretBossPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnTurretBossPawn* AQtnTurretBossPawn::GetDefaultObj()
{
	static class AQtnTurretBossPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnTurretBossPawn*>(AQtnTurretBossPawn::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTurretBossPawn.SetCurrentVerb_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        NextVerbClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnTurretBossPawn::SetCurrentVerb_ServerOnly(TSubclassOf<class UQtnVerb> NextVerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretBossPawn", "SetCurrentVerb_ServerOnly");

	Params::AQtnTurretBossPawn_SetCurrentVerb_ServerOnly_Params Parms{};

	Parms.NextVerbClass = NextVerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTurretBossPawn.SetCurrentBodyState_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnTurretBossState     NewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnTurretBossPawn::SetCurrentBodyState_ServerOnly(enum class EQtnTurretBossState NewState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretBossPawn", "SetCurrentBodyState_ServerOnly");

	Params::AQtnTurretBossPawn_SetCurrentBodyState_ServerOnly_Params Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTurretBossPawn.OnRep_CurrentVerb
// (Final, Native, Public)
// Parameters:

void AQtnTurretBossPawn::OnRep_CurrentVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretBossPawn", "OnRep_CurrentVerb");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTurretBossPawn.OnRep_CurrentBossState
// (Final, Native, Public)
// Parameters:

void AQtnTurretBossPawn::OnRep_CurrentBossState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretBossPawn", "OnRep_CurrentBossState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTurretBossPawn.OnCurrentBodyStateChangedEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// enum class EQtnTurretBossState     NewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTurretBossState     PreviousState                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnTurretBossPawn::OnCurrentBodyStateChangedEvent(enum class EQtnTurretBossState NewState, enum class EQtnTurretBossState PreviousState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretBossPawn", "OnCurrentBodyStateChangedEvent");

	Params::AQtnTurretBossPawn_OnCurrentBodyStateChangedEvent_Params Parms{};

	Parms.NewState = NewState;
	Parms.PreviousState = PreviousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnTurretController
// (Actor)

class UClass* AQtnTurretController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTurretController");

	return Clss;
}


// QtnTurretController QtnGame.Default__QtnTurretController
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnTurretController* AQtnTurretController::GetDefaultObj()
{
	static class AQtnTurretController* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnTurretController*>(AQtnTurretController::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTurretController.GetMostRelevantEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* AQtnTurretController::GetMostRelevantEnemy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretController", "GetMostRelevantEnemy");

	Params::AQtnTurretController_GetMostRelevantEnemy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnTurretPerceptionComponent
// (None)

class UClass* UQtnTurretPerceptionComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTurretPerceptionComponent");

	return Clss;
}


// QtnTurretPerceptionComponent QtnGame.Default__QtnTurretPerceptionComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTurretPerceptionComponent* UQtnTurretPerceptionComponent::GetDefaultObj()
{
	static class UQtnTurretPerceptionComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTurretPerceptionComponent*>(UQtnTurretPerceptionComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTurretPerceptionComponent.HandleTargetPerceptionUpdated
// (Final, Native, Private)
// Parameters:
// class AActor*                      PActor                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIStimulus                 Stimulus                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnTurretPerceptionComponent::HandleTargetPerceptionUpdated(class AActor* PActor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTurretPerceptionComponent", "HandleTargetPerceptionUpdated");

	Params::UQtnTurretPerceptionComponent_HandleTargetPerceptionUpdated_Params Parms{};

	Parms.PActor = PActor;
	Parms.Stimulus = Stimulus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnTutorial
// (None)

class UClass* UQtnTutorial::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTutorial");

	return Clss;
}


// QtnTutorial QtnGame.Default__QtnTutorial
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTutorial* UQtnTutorial::GetDefaultObj()
{
	static class UQtnTutorial* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTutorial*>(UQtnTutorial::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnTutorial.UpdateTutorialSubGoalTitle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Identity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        TextToUpdate                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnTutorial::UpdateTutorialSubGoalTitle(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName Identity, class FText& TextToUpdate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "UpdateTutorialSubGoalTitle");

	Params::UQtnTutorial_UpdateTutorialSubGoalTitle_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.Identity = Identity;
	Parms.TextToUpdate = TextToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.UpdateTutorialSubGoalMessage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Identity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        TextToUpdate                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnTutorial::UpdateTutorialSubGoalMessage(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName Identity, class FText& TextToUpdate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "UpdateTutorialSubGoalMessage");

	Params::UQtnTutorial_UpdateTutorialSubGoalMessage_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.Identity = Identity;
	Parms.TextToUpdate = TextToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.UpdateTutorialGoalTitle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        TextToUpdate                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnTutorial::UpdateTutorialGoalTitle(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FText& TextToUpdate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "UpdateTutorialGoalTitle");

	Params::UQtnTutorial_UpdateTutorialGoalTitle_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.TextToUpdate = TextToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.UpdateTutorialGoalMessage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        TextToUpdate                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnTutorial::UpdateTutorialGoalMessage(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FText& TextToUpdate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "UpdateTutorialGoalMessage");

	Params::UQtnTutorial_UpdateTutorialGoalMessage_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.TextToUpdate = TextToUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.SetTutorialSubgoalState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Identity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTutorialStatus      ValueState                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTutorial::SetTutorialSubgoalState(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName Identity, enum class EQtnTutorialStatus ValueState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "SetTutorialSubgoalState");

	Params::UQtnTutorial_SetTutorialSubgoalState_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.Identity = Identity;
	Parms.ValueState = ValueState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.SetTutorialState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTutorialStatus      ValueState                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTutorial::SetTutorialState(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, enum class EQtnTutorialStatus ValueState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "SetTutorialState");

	Params::UQtnTutorial_SetTutorialState_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.ValueState = ValueState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.SetTutorialBoolValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ValueId                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ValueState                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTutorial::SetTutorialBoolValue(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName& ValueId, bool ValueState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "SetTutorialBoolValue");

	Params::UQtnTutorial_SetTutorialBoolValue_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.ValueId = ValueId;
	Parms.ValueState = ValueState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.ResetTutorialReminder
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTutorial::ResetTutorialReminder(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "ResetTutorialReminder");

	Params::UQtnTutorial_ResetTutorialReminder_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.ResetTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTutorial::ResetTutorial(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "ResetTutorial");

	Params::UQtnTutorial_ResetTutorial_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.ResetAllTutorials
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTutorial::ResetAllTutorials(class UObject* SelfReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "ResetAllTutorials");

	Params::UQtnTutorial_ResetAllTutorials_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.RequestTutorialPresentation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnTutorial::RequestTutorialPresentation(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "RequestTutorialPresentation");

	Params::UQtnTutorial_RequestTutorialPresentation_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.GetTutorialSubGoalText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Identity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        OutTitle                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                        OutMessage                                                       (Parm, OutParm, NativeAccessSpecifierPublic)

void UQtnTutorial::GetTutorialSubGoalText(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName Identity, class FText* OutTitle, class FText* OutMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "GetTutorialSubGoalText");

	Params::UQtnTutorial_GetTutorialSubGoalText_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.Identity = Identity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTitle != nullptr)
		*OutTitle = Parms.OutTitle;

	if (OutMessage != nullptr)
		*OutMessage = Parms.OutMessage;

}


// Function QtnGame.QtnTutorial.GetTutorialSubgoalState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Identity                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTutorialStatus      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnTutorialStatus UQtnTutorial::GetTutorialSubgoalState(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName Identity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "GetTutorialSubgoalState");

	Params::UQtnTutorial_GetTutorialSubgoalState_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.Identity = Identity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.GetTutorialState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnTutorialStatus      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnTutorialStatus UQtnTutorial::GetTutorialState(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "GetTutorialState");

	Params::UQtnTutorial_GetTutorialState_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.GetTutorialGoalText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        OutTitle                                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                        OutMessage                                                       (Parm, OutParm, NativeAccessSpecifierPublic)

void UQtnTutorial::GetTutorialGoalText(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FText* OutTitle, class FText* OutMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "GetTutorialGoalText");

	Params::UQtnTutorial_GetTutorialGoalText_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutTitle != nullptr)
		*OutTitle = Parms.OutTitle;

	if (OutMessage != nullptr)
		*OutMessage = Parms.OutMessage;

}


// Function QtnGame.QtnTutorial.GetTutorialBoolValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ValueId                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnTutorial::GetTutorialBoolValue(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName& ValueId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "GetTutorialBoolValue");

	Params::UQtnTutorial_GetTutorialBoolValue_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.ValueId = ValueId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.GetQtnTutorialObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnTutorial*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnTutorial* UQtnTutorial::GetQtnTutorialObject(TSubclassOf<class UQtnTutorial> TutorialArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "GetQtnTutorialObject");

	Params::UQtnTutorial_GetQtnTutorialObject_Params Parms{};

	Parms.TutorialArchetype = TutorialArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.GetAllActiveTutorials
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnTutorialInstanceData>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQtnTutorialInstanceData> UQtnTutorial::GetAllActiveTutorials(class UObject* SelfReference)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "GetAllActiveTutorials");

	Params::UQtnTutorial_GetAllActiveTutorials_Params Parms{};

	Parms.SelfReference = SelfReference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.FormatSubgoalText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldReference                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnTutorial::FormatSubgoalText(class UObject* WorldReference, class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "FormatSubgoalText");

	Params::UQtnTutorial_FormatSubgoalText_Params Parms{};

	Parms.WorldReference = WorldReference;
	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.CompleteTutorialSubGoal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        GoalIdentity                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowTutorialCompletion                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnTutorial::CompleteTutorialSubGoal(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, class FName GoalIdentity, bool AllowTutorialCompletion)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "CompleteTutorialSubGoal");

	Params::UQtnTutorial_CompleteTutorialSubGoal_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.GoalIdentity = GoalIdentity;
	Parms.AllowTutorialCompletion = AllowTutorialCompletion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnTutorial.CheckAllTutorialSubGoalsComplete
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnTutorial::CheckAllTutorialSubGoalsComplete(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "CheckAllTutorialSubGoalsComplete");

	Params::UQtnTutorial_CheckAllTutorialSubGoalsComplete_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnTutorial.AddDynamicTutorialSubgoal
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnTutorial>    TutorialArchetype                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnTutorialSubAction       SubActionData                                                    (ConstParm, Parm, NativeAccessSpecifierPublic)

void UQtnTutorial::AddDynamicTutorialSubgoal(class UObject* SelfReference, TSubclassOf<class UQtnTutorial> TutorialArchetype, const struct FQtnTutorialSubAction& SubActionData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnTutorial", "AddDynamicTutorialSubgoal");

	Params::UQtnTutorial_AddDynamicTutorialSubgoal_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.TutorialArchetype = TutorialArchetype;
	Parms.SubActionData = SubActionData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnTutorialDataBag
// (None)

class UClass* UQtnTutorialDataBag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnTutorialDataBag");

	return Clss;
}


// QtnTutorialDataBag QtnGame.Default__QtnTutorialDataBag
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnTutorialDataBag* UQtnTutorialDataBag::GetDefaultObj()
{
	static class UQtnTutorialDataBag* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnTutorialDataBag*>(UQtnTutorialDataBag::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUnlocksComponent
// (None)

class UClass* UQtnUnlocksComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUnlocksComponent");

	return Clss;
}


// QtnUnlocksComponent QtnGame.Default__QtnUnlocksComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUnlocksComponent* UQtnUnlocksComponent::GetDefaultObj()
{
	static class UQtnUnlocksComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUnlocksComponent*>(UQtnUnlocksComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUnlocksComponent.SetUnlockRecords_ClientOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FName, int32>           UnlockRecords                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::SetUnlockRecords_ClientOnly(TMap<class FName, int32>& UnlockRecords)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "SetUnlockRecords_ClientOnly");

	Params::UQtnUnlocksComponent_SetUnlockRecords_ClientOnly_Params Parms{};

	Parms.UnlockRecords = UnlockRecords;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUnlocksComponent.SetSessionUnlockedRowNames_ServerOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                SessionUnlockedRowNames                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::SetSessionUnlockedRowNames_ServerOnly(TArray<class FName>& SessionUnlockedRowNames)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "SetSessionUnlockedRowNames_ServerOnly");

	Params::UQtnUnlocksComponent_SetSessionUnlockedRowNames_ServerOnly_Params Parms{};

	Parms.SessionUnlockedRowNames = SessionUnlockedRowNames;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUnlocksComponent.ServerCheatReset
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void UQtnUnlocksComponent::ServerCheatReset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "ServerCheatReset");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUnlocksComponent.ServerAddUnlockKeys
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FGameplayTag>        UnlockKeys                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::ServerAddUnlockKeys(TArray<struct FGameplayTag>& UnlockKeys)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "ServerAddUnlockKeys");

	Params::UQtnUnlocksComponent_ServerAddUnlockKeys_Params Parms{};

	Parms.UnlockKeys = UnlockKeys;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUnlocksComponent.ServerAddSessionUnlockedRowName
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FName                        SessionUnlockedRowName                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::ServerAddSessionUnlockedRowName(class FName& SessionUnlockedRowName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "ServerAddSessionUnlockedRowName");

	Params::UQtnUnlocksComponent_ServerAddSessionUnlockedRowName_Params Parms{};

	Parms.SessionUnlockedRowName = SessionUnlockedRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUnlocksComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "OnDebugDisplay");

	Params::UQtnUnlocksComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUnlocksComponent.IsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                UnlockKey                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUnlocksComponent::IsUnlocked(const struct FGameplayTag& UnlockKey)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "IsUnlocked");

	Params::UQtnUnlocksComponent_IsUnlocked_Params Parms{};

	Parms.UnlockKey = UnlockKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUnlocksComponent.GetUnlocksDataTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UQtnUnlocksComponent::GetUnlocksDataTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "GetUnlocksDataTable");

	Params::UQtnUnlocksComponent_GetUnlocksDataTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUnlocksComponent.GetUnlockRecords_ClientOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<class FName, int32>           ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TMap<class FName, int32> UQtnUnlocksComponent::GetUnlockRecords_ClientOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "GetUnlockRecords_ClientOnly");

	Params::UQtnUnlocksComponent_GetUnlockRecords_ClientOnly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUnlocksComponent.GetUnlockProgress_ClientOnly
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        UnlocksDataTableRowName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsUnlocked                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumOccurrences                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TargetOccurrences                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::GetUnlockProgress_ClientOnly(class FName UnlocksDataTableRowName, bool* IsUnlocked, int32* NumOccurrences, int32* TargetOccurrences)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "GetUnlockProgress_ClientOnly");

	Params::UQtnUnlocksComponent_GetUnlockProgress_ClientOnly_Params Parms{};

	Parms.UnlocksDataTableRowName = UnlocksDataTableRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IsUnlocked != nullptr)
		*IsUnlocked = Parms.IsUnlocked;

	if (NumOccurrences != nullptr)
		*NumOccurrences = Parms.NumOccurrences;

	if (TargetOccurrences != nullptr)
		*TargetOccurrences = Parms.TargetOccurrences;

}


// Function QtnGame.QtnUnlocksComponent.GetUnlockInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        UnlocksDataTableRowName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        DisplayName                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                        Description                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               IsSecret                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                  Icon                                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                UnlockKey                                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                UnlockCategory                                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnUnlockRewards           UnlockRewards                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                        RewardName                                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnDLCInfo>     RequiredDLC                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::GetUnlockInfo(class FName UnlocksDataTableRowName, class FText* DisplayName, class FText* Description, bool* IsSecret, class UTexture2D** Icon, struct FGameplayTag* UnlockKey, struct FGameplayTag* UnlockCategory, struct FQtnUnlockRewards* UnlockRewards, class FText* RewardName, TSubclassOf<class UQtnDLCInfo>* RequiredDLC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "GetUnlockInfo");

	Params::UQtnUnlocksComponent_GetUnlockInfo_Params Parms{};

	Parms.UnlocksDataTableRowName = UnlocksDataTableRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DisplayName != nullptr)
		*DisplayName = Parms.DisplayName;

	if (Description != nullptr)
		*Description = Parms.Description;

	if (IsSecret != nullptr)
		*IsSecret = Parms.IsSecret;

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (UnlockKey != nullptr)
		*UnlockKey = std::move(Parms.UnlockKey);

	if (UnlockCategory != nullptr)
		*UnlockCategory = std::move(Parms.UnlockCategory);

	if (UnlockRewards != nullptr)
		*UnlockRewards = std::move(Parms.UnlockRewards);

	if (RewardName != nullptr)
		*RewardName = Parms.RewardName;

	if (RequiredDLC != nullptr)
		*RequiredDLC = Parms.RequiredDLC;

}


// Function QtnGame.QtnUnlocksComponent.GetSessionUnlockedRowNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                ReturnValue                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

TArray<class FName> UQtnUnlocksComponent::GetSessionUnlockedRowNames()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "GetSessionUnlockedRowNames");

	Params::UQtnUnlocksComponent_GetSessionUnlockedRowNames_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUnlocksComponent.GetSessionUnlockedCurrencyRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              DarkMatter                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Fitcoin                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::GetSessionUnlockedCurrencyRewards(int32* DarkMatter, int32* Fitcoin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "GetSessionUnlockedCurrencyRewards");

	Params::UQtnUnlocksComponent_GetSessionUnlockedCurrencyRewards_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DarkMatter != nullptr)
		*DarkMatter = Parms.DarkMatter;

	if (Fitcoin != nullptr)
		*Fitcoin = Parms.Fitcoin;

}


// Function QtnGame.QtnUnlocksComponent.GetRowNameFromUnlockKey
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                UnlockKey                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RowExists                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UQtnUnlocksComponent::GetRowNameFromUnlockKey(const struct FGameplayTag& UnlockKey, bool* RowExists)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "GetRowNameFromUnlockKey");

	Params::UQtnUnlocksComponent_GetRowNameFromUnlockKey_Params Parms{};

	Parms.UnlockKey = UnlockKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RowExists != nullptr)
		*RowExists = Parms.RowExists;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUnlocksComponent.ClientSetSessionUnlockedRowNames
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<class FName>                SessionUnlockedRowNames                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::ClientSetSessionUnlockedRowNames(TArray<class FName>& SessionUnlockedRowNames)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "ClientSetSessionUnlockedRowNames");

	Params::UQtnUnlocksComponent_ClientSetSessionUnlockedRowNames_Params Parms{};

	Parms.SessionUnlockedRowNames = SessionUnlockedRowNames;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUnlocksComponent.ClientOnUnlockProgress
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                        DataTableRowName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUnlocksComponent::ClientOnUnlockProgress(class FName DataTableRowName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUnlocksComponent", "ClientOnUnlockProgress");

	Params::UQtnUnlocksComponent_ClientOnUnlockProgress_Params Parms{};

	Parms.DataTableRowName = DataTableRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnUpgrade
// (None)

class UClass* UQtnUpgrade::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpgrade");

	return Clss;
}


// QtnUpgrade QtnGame.Default__QtnUpgrade
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpgrade* UQtnUpgrade::GetDefaultObj()
{
	static class UQtnUpgrade* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpgrade*>(UQtnUpgrade::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUpgrade.OnUpgradeRolledDataChangedEvent
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UQtnUpgradeSlot*             OwningSlot                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       PreviousRolledData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       NewRolledData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgrade::OnUpgradeRolledDataChangedEvent(class UQtnUpgradeSlot* OwningSlot, struct FQtnRolledUpgradeData& PreviousRolledData, struct FQtnRolledUpgradeData& NewRolledData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "OnUpgradeRolledDataChangedEvent");

	Params::UQtnUpgrade_OnUpgradeRolledDataChangedEvent_Params Parms{};

	Parms.OwningSlot = OwningSlot;
	Parms.PreviousRolledData = PreviousRolledData;
	Parms.NewRolledData = NewRolledData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgrade.OnUnslottedEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UQtnUpgradeSlot*             PreviousSlot                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgrade::OnUnslottedEvent(class UQtnUpgradeSlot* PreviousSlot, struct FQtnRolledUpgradeData& RolledData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "OnUnslottedEvent");

	Params::UQtnUpgrade_OnUnslottedEvent_Params Parms{};

	Parms.PreviousSlot = PreviousSlot;
	Parms.RolledData = RolledData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgrade.OnSlottedEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UQtnUpgradeSlot*             TargetSlot                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               LoadedRunProgress                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgrade::OnSlottedEvent(class UQtnUpgradeSlot* TargetSlot, struct FQtnRolledUpgradeData& RolledData, bool LoadedRunProgress)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "OnSlottedEvent");

	Params::UQtnUpgrade_OnSlottedEvent_Params Parms{};

	Parms.TargetSlot = TargetSlot;
	Parms.RolledData = RolledData;
	Parms.LoadedRunProgress = LoadedRunProgress;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgrade.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgrade::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "OnDebugDisplay");

	Params::UQtnUpgrade_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgrade.K2_CanUpgradeBeSlotted
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnUpgradeSlot*             TargetSlot                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgrade::K2_CanUpgradeBeSlotted(class UQtnUpgradeSlot* TargetSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "K2_CanUpgradeBeSlotted");

	Params::UQtnUpgrade_K2_CanUpgradeBeSlotted_Params Parms{};

	Parms.TargetSlot = TargetSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.IsUnlocked
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgrade::IsUnlocked(class AQtnBodyPawn* TargetBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "IsUnlocked");

	Params::UQtnUpgrade_IsUnlocked_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.IsRarityUpgradable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgrade::IsRarityUpgradable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "IsRarityUpgradable");

	Params::UQtnUpgrade_IsRarityUpgradable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.IsLevelUpgradable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgrade::IsLevelUpgradable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "IsLevelUpgradable");

	Params::UQtnUpgrade_IsLevelUpgradable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.GetWorld
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UQtnUpgrade::GetWorld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "GetWorld");

	Params::UQtnUpgrade_GetWorld_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.GetValueOfUpgradeWithSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UQtnUpgrade*                 UpgradePtr                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ArrayIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnUpgrade::GetValueOfUpgradeWithSettings(class UQtnUpgrade* UpgradePtr, struct FQtnRolledUpgradeData& RolledData, int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "GetValueOfUpgradeWithSettings");

	Params::UQtnUpgrade_GetValueOfUpgradeWithSettings_Params Parms{};

	Parms.UpgradePtr = UpgradePtr;
	Parms.RolledData = RolledData;
	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.GetValueOfUpgrade
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UQtnUpgradeSlot*             OwningSlot                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ArrayIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnUpgrade::GetValueOfUpgrade(class UQtnUpgradeSlot* OwningSlot, int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "GetValueOfUpgrade");

	Params::UQtnUpgrade_GetValueOfUpgrade_Params Parms{};

	Parms.OwningSlot = OwningSlot;
	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.GetValueOfRolledUpgrade
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FQtnUpgradeSettings         RolledUpgradeSettings                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledUpgradeData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ArrayIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnUpgrade::GetValueOfRolledUpgrade(struct FQtnUpgradeSettings& RolledUpgradeSettings, struct FQtnRolledUpgradeData& RolledUpgradeData, int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "GetValueOfRolledUpgrade");

	Params::UQtnUpgrade_GetValueOfRolledUpgrade_Params Parms{};

	Parms.RolledUpgradeSettings = RolledUpgradeSettings;
	Parms.RolledUpgradeData = RolledUpgradeData;
	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.GetUpgradeSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnUpgradeSettings         ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnUpgradeSettings UQtnUpgrade::GetUpgradeSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "GetUpgradeSettings");

	Params::UQtnUpgrade_GetUpgradeSettings_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.GetNextAllowedRarity
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                CurrentRarity                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer       AllowedRarityMask                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnUpgrade::GetNextAllowedRarity(struct FGameplayTag& CurrentRarity, struct FGameplayTagContainer& AllowedRarityMask)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "GetNextAllowedRarity");

	Params::UQtnUpgrade_GetNextAllowedRarity_Params Parms{};

	Parms.CurrentRarity = CurrentRarity;
	Parms.AllowedRarityMask = AllowedRarityMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.GetFormattedValueAtIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnUpgradeSettings         InUpgradeSettings                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledUpgradeData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ArrayIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WithStyles                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForJokerCard                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnUpgrade::GetFormattedValueAtIndex(struct FQtnUpgradeSettings& InUpgradeSettings, struct FQtnRolledUpgradeData& RolledUpgradeData, int32 ArrayIndex, bool WithStyles, bool ForJokerCard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "GetFormattedValueAtIndex");

	Params::UQtnUpgrade_GetFormattedValueAtIndex_Params Parms{};

	Parms.InUpgradeSettings = InUpgradeSettings;
	Parms.RolledUpgradeData = RolledUpgradeData;
	Parms.ArrayIndex = ArrayIndex;
	Parms.WithStyles = WithStyles;
	Parms.ForJokerCard = ForJokerCard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.FormatUpgradeText
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                        FormatText                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnUpgradeSettings         InUpgradeSettings                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       PreviousRolledData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       NewRolledData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ForJokerCard                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnUpgrade::FormatUpgradeText(class FText& FormatText, struct FQtnUpgradeSettings& InUpgradeSettings, struct FQtnRolledUpgradeData& PreviousRolledData, struct FQtnRolledUpgradeData& NewRolledData, bool ForJokerCard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "FormatUpgradeText");

	Params::UQtnUpgrade_FormatUpgradeText_Params Parms{};

	Parms.FormatText = FormatText;
	Parms.InUpgradeSettings = InUpgradeSettings;
	Parms.PreviousRolledData = PreviousRolledData;
	Parms.NewRolledData = NewRolledData;
	Parms.ForJokerCard = ForJokerCard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.CDO_GenerateTextValueForDisplay
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FQtnUpgradeSettings         InUpgradeSettings                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledUpgradeData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ArrayIndex                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnUpgrade::CDO_GenerateTextValueForDisplay(struct FQtnUpgradeSettings& InUpgradeSettings, struct FQtnRolledUpgradeData& RolledUpgradeData, int32 ArrayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "CDO_GenerateTextValueForDisplay");

	Params::UQtnUpgrade_CDO_GenerateTextValueForDisplay_Params Parms{};

	Parms.InUpgradeSettings = InUpgradeSettings;
	Parms.RolledUpgradeData = RolledUpgradeData;
	Parms.ArrayIndex = ArrayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.CDO_GenerateTargetModifiableIdentity
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnUpgradeSettings         InUpgradeSettings                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledUpgradeData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                OutRarityTag                                                     (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OutLevel                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UQtnUpgrade::CDO_GenerateTargetModifiableIdentity(class AQtnBodyPawn* TargetPawn, struct FQtnUpgradeSettings& InUpgradeSettings, struct FQtnRolledUpgradeData& RolledUpgradeData, struct FGameplayTag* OutRarityTag, int32* OutLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "CDO_GenerateTargetModifiableIdentity");

	Params::UQtnUpgrade_CDO_GenerateTargetModifiableIdentity_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.InUpgradeSettings = InUpgradeSettings;
	Parms.RolledUpgradeData = RolledUpgradeData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutRarityTag != nullptr)
		*OutRarityTag = std::move(Parms.OutRarityTag);

	if (OutLevel != nullptr)
		*OutLevel = Parms.OutLevel;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.CanUpgradeBeSlotted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnUpgradeSlot*             TargetSlot                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgrade::CanUpgradeBeSlotted(class UQtnUpgradeSlot* TargetSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "CanUpgradeBeSlotted");

	Params::UQtnUpgrade_CanUpgradeBeSlotted_Params Parms{};

	Parms.TargetSlot = TargetSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.CanUpgradeBeRolled
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AQtnBodyPawn*                TargetBodyPawn                                                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgrade::CanUpgradeBeRolled(class AQtnBodyPawn* TargetBodyPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "CanUpgradeBeRolled");

	Params::UQtnUpgrade_CanUpgradeBeRolled_Params Parms{};

	Parms.TargetBodyPawn = TargetBodyPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.CanEnemyUpgradeBeRolled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnGameState*               ActiveGameState                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgrade::CanEnemyUpgradeBeRolled(class AQtnGameState* ActiveGameState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "CanEnemyUpgradeBeRolled");

	Params::UQtnUpgrade_CanEnemyUpgradeBeRolled_Params Parms{};

	Parms.ActiveGameState = ActiveGameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgrade.CalculateDamageValues
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UQtnUpgradeSlot*             OwningSlot                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    SourceVerb                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InBaseDamage                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnDamageType>  DamageType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutDamageScalar                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutBonusDamage                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgrade::CalculateDamageValues(class UQtnUpgradeSlot* OwningSlot, class UQtnVerb* SourceVerb, class AActor* TargetActor, float InBaseDamage, TSubclassOf<class UQtnDamageType> DamageType, float* OutDamageScalar, float* OutBonusDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "CalculateDamageValues");

	Params::UQtnUpgrade_CalculateDamageValues_Params Parms{};

	Parms.OwningSlot = OwningSlot;
	Parms.SourceVerb = SourceVerb;
	Parms.TargetActor = TargetActor;
	Parms.InBaseDamage = InBaseDamage;
	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDamageScalar != nullptr)
		*OutDamageScalar = Parms.OutDamageScalar;

	if (OutBonusDamage != nullptr)
		*OutBonusDamage = Parms.OutBonusDamage;

}


// Function QtnGame.QtnUpgrade.ActivateInstantUpgrade_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                TargetPawn                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeResult     RolledUpgradeSettings                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgrade::ActivateInstantUpgrade_ServerOnly(class AQtnBodyPawn* TargetPawn, struct FQtnRolledUpgradeResult& RolledUpgradeSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgrade", "ActivateInstantUpgrade_ServerOnly");

	Params::UQtnUpgrade_ActivateInstantUpgrade_ServerOnly_Params Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.RolledUpgradeSettings = RolledUpgradeSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnUpgradeComponent
// (None)

class UClass* UQtnUpgradeComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpgradeComponent");

	return Clss;
}


// QtnUpgradeComponent QtnGame.Default__QtnUpgradeComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpgradeComponent* UQtnUpgradeComponent::GetDefaultObj()
{
	static class UQtnUpgradeComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpgradeComponent*>(UQtnUpgradeComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUpgradeComponent.RollUpgrades
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnReactionToTag>   NPCPresentationTags                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              QuantityToRoll                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              BonusQuantity                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnRolledUpgradeResult>RollHistory                                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               AllowRerolls                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnRolledUpgradeResult>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQtnRolledUpgradeResult> UQtnUpgradeComponent::RollUpgrades(TArray<struct FQtnReactionToTag>& NPCPresentationTags, int32 QuantityToRoll, int32 BonusQuantity, TArray<struct FQtnRolledUpgradeResult>& RollHistory, bool AllowRerolls)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "RollUpgrades");

	Params::UQtnUpgradeComponent_RollUpgrades_Params Parms{};

	Parms.NPCPresentationTags = NPCPresentationTags;
	Parms.QuantityToRoll = QuantityToRoll;
	Parms.BonusQuantity = BonusQuantity;
	Parms.RollHistory = RollHistory;
	Parms.AllowRerolls = AllowRerolls;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeComponent.RollGeneralUpgrades
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FQtnReactionToTag>   NPCPresentationTags                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              QuantityToRoll                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnRolledUpgradeResult>RollHistory                                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FQtnRolledUpgradeResult>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FQtnRolledUpgradeResult> UQtnUpgradeComponent::RollGeneralUpgrades(TArray<struct FQtnReactionToTag>& NPCPresentationTags, int32 QuantityToRoll, TArray<struct FQtnRolledUpgradeResult>& RollHistory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "RollGeneralUpgrades");

	Params::UQtnUpgradeComponent_RollGeneralUpgrades_Params Parms{};

	Parms.NPCPresentationTags = NPCPresentationTags;
	Parms.QuantityToRoll = QuantityToRoll;
	Parms.RollHistory = RollHistory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// DelegateFunction QtnGame.QtnUpgradeComponent.QtnUpgradeSlotEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnUpgrade*                 Upgrade                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnUpgradeSlot*             UpgradeSlot                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Slotted                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeComponent::QtnUpgradeSlotEvent__DelegateSignature(class UQtnUpgrade* Upgrade, class UQtnUpgradeSlot* UpgradeSlot, bool Slotted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "QtnUpgradeSlotEvent__DelegateSignature");

	Params::UQtnUpgradeComponent_QtnUpgradeSlotEvent__DelegateSignature_Params Parms{};

	Parms.Upgrade = Upgrade;
	Parms.UpgradeSlot = UpgradeSlot;
	Parms.Slotted = Slotted;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnUpgradeComponent.QtnUpgradeRolledDataChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UQtnUpgrade*                 Upgrade                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnUpgradeSlot*             UpgradeSlot                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       PreviousRolledData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       NewRolledData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgradeComponent::QtnUpgradeRolledDataChangeEvent__DelegateSignature(class UQtnUpgrade* Upgrade, class UQtnUpgradeSlot* UpgradeSlot, struct FQtnRolledUpgradeData& PreviousRolledData, struct FQtnRolledUpgradeData& NewRolledData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "QtnUpgradeRolledDataChangeEvent__DelegateSignature");

	Params::UQtnUpgradeComponent_QtnUpgradeRolledDataChangeEvent__DelegateSignature_Params Parms{};

	Parms.Upgrade = Upgrade;
	Parms.UpgradeSlot = UpgradeSlot;
	Parms.PreviousRolledData = PreviousRolledData;
	Parms.NewRolledData = NewRolledData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgradeComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "OnDebugDisplay");

	Params::UQtnUpgradeComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgradeComponent.HasAnySlottedUpgrades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeComponent::HasAnySlottedUpgrades()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "HasAnySlottedUpgrades");

	Params::UQtnUpgradeComponent_HasAnySlottedUpgrades_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeComponent.HasAnyIncreasableRarityUpgrades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeComponent::HasAnyIncreasableRarityUpgrades()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "HasAnyIncreasableRarityUpgrades");

	Params::UQtnUpgradeComponent_HasAnyIncreasableRarityUpgrades_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeComponent.HasAnyIncreasableLevelUpgrades
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeComponent::HasAnyIncreasableLevelUpgrades()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "HasAnyIncreasableLevelUpgrades");

	Params::UQtnUpgradeComponent_HasAnyIncreasableLevelUpgrades_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeComponent.CalculateDamageValues
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerb*                    SourceVerb                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InBaseDamage                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnDamageType>  DamageType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutDamageScalar                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutBonusDamage                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeComponent::CalculateDamageValues(class UQtnVerb* SourceVerb, class AActor* TargetActor, float InBaseDamage, TSubclassOf<class UQtnDamageType> DamageType, float* OutDamageScalar, float* OutBonusDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeComponent", "CalculateDamageValues");

	Params::UQtnUpgradeComponent_CalculateDamageValues_Params Parms{};

	Parms.SourceVerb = SourceVerb;
	Parms.TargetActor = TargetActor;
	Parms.InBaseDamage = InBaseDamage;
	Parms.DamageType = DamageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutDamageScalar != nullptr)
		*OutDamageScalar = Parms.OutDamageScalar;

	if (OutBonusDamage != nullptr)
		*OutBonusDamage = Parms.OutBonusDamage;

}


// Class QtnGame.QtnUpgradePostProcessingRule
// (None)

class UClass* UQtnUpgradePostProcessingRule::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpgradePostProcessingRule");

	return Clss;
}


// QtnUpgradePostProcessingRule QtnGame.Default__QtnUpgradePostProcessingRule
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpgradePostProcessingRule* UQtnUpgradePostProcessingRule::GetDefaultObj()
{
	static class UQtnUpgradePostProcessingRule* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpgradePostProcessingRule*>(UQtnUpgradePostProcessingRule::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUpgradePostProcessingRule.RunPostProcessingRule
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnRolledUpgradeResult>CurrentLootArray                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgradePostProcessingRule::RunPostProcessingRule(class AQtnBodyPawn* Pawn, TArray<struct FQtnRolledUpgradeResult>& CurrentLootArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradePostProcessingRule", "RunPostProcessingRule");

	Params::UQtnUpgradePostProcessingRule_RunPostProcessingRule_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.CurrentLootArray = CurrentLootArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnUpgradeRestrictionRule
// (None)

class UClass* UQtnUpgradeRestrictionRule::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpgradeRestrictionRule");

	return Clss;
}


// QtnUpgradeRestrictionRule QtnGame.Default__QtnUpgradeRestrictionRule
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpgradeRestrictionRule* UQtnUpgradeRestrictionRule::GetDefaultObj()
{
	static class UQtnUpgradeRestrictionRule* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpgradeRestrictionRule*>(UQtnUpgradeRestrictionRule::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUpgradeRestrictionRule.RunRestrictionRule
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                Pawn                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnReactionToTag>   PlayerTagList                                                    (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FQtnUpgradeSettings> AvailiableUpgradesSet                                            (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                      AvailiableUpgradesWeightSet                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              BonusQuantity                                                    (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnReactionToTag>   NPCPresentationTags                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgradeRestrictionRule::RunRestrictionRule(class AQtnBodyPawn* Pawn, TArray<struct FQtnReactionToTag>& PlayerTagList, TArray<struct FQtnUpgradeSettings>& AvailiableUpgradesSet, TArray<float>& AvailiableUpgradesWeightSet, int32& BonusQuantity, TArray<struct FQtnReactionToTag>& NPCPresentationTags)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeRestrictionRule", "RunRestrictionRule");

	Params::UQtnUpgradeRestrictionRule_RunRestrictionRule_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.PlayerTagList = PlayerTagList;
	Parms.AvailiableUpgradesSet = AvailiableUpgradesSet;
	Parms.AvailiableUpgradesWeightSet = AvailiableUpgradesWeightSet;
	Parms.BonusQuantity = BonusQuantity;
	Parms.NPCPresentationTags = NPCPresentationTags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnUpgradeSession
// (None)

class UClass* UQtnUpgradeSession::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpgradeSession");

	return Clss;
}


// QtnUpgradeSession QtnGame.Default__QtnUpgradeSession
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpgradeSession* UQtnUpgradeSession::GetDefaultObj()
{
	static class UQtnUpgradeSession* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpgradeSession*>(UQtnUpgradeSession::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUpgradeSession.SetRolledUpgradesArray_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FQtnRolledUpgradeResult>RolledUpgrades                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::SetRolledUpgradesArray_ServerOnly(TArray<struct FQtnRolledUpgradeResult>& RolledUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "SetRolledUpgradesArray_ServerOnly");

	Params::UQtnUpgradeSession_SetRolledUpgradesArray_ServerOnly_Params Parms{};

	Parms.RolledUpgrades = RolledUpgrades;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.SetCurrentState_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnUpgradeSessionState NewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::SetCurrentState_ServerOnly(enum class EQtnUpgradeSessionState NewState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "SetCurrentState_ServerOnly");

	Params::UQtnUpgradeSession_SetCurrentState_ServerOnly_Params Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.ServerLinkToBodyPawn
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                BodyPawnTarget                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::ServerLinkToBodyPawn(class AQtnBodyPawn* BodyPawnTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "ServerLinkToBodyPawn");

	Params::UQtnUpgradeSession_ServerLinkToBodyPawn_Params Parms{};

	Parms.BodyPawnTarget = BodyPawnTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.RequestModifyHandCardHistory_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              CardIndex                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnUpgradeModificationHistoryUpgradeModification                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::RequestModifyHandCardHistory_ServerOnly(int32 CardIndex, struct FQtnUpgradeModificationHistory& UpgradeModification)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "RequestModifyHandCardHistory_ServerOnly");

	Params::UQtnUpgradeSession_RequestModifyHandCardHistory_ServerOnly_Params Parms{};

	Parms.CardIndex = CardIndex;
	Parms.UpgradeModification = UpgradeModification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.OnRolledUpgradesArrayChangedEvent
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FQtnRolledUpgradeResult>RolledUpgrades                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::OnRolledUpgradesArrayChangedEvent(TArray<struct FQtnRolledUpgradeResult>& RolledUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "OnRolledUpgradesArrayChangedEvent");

	Params::UQtnUpgradeSession_OnRolledUpgradesArrayChangedEvent_Params Parms{};

	Parms.RolledUpgrades = RolledUpgrades;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgradeSession.OnRep_RolledUpgradesArray
// (Final, Native, Public)
// Parameters:

void UQtnUpgradeSession::OnRep_RolledUpgradesArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "OnRep_RolledUpgradesArray");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.OnRep_CurrentSessionState
// (Final, Native, Public)
// Parameters:

void UQtnUpgradeSession::OnRep_CurrentSessionState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "OnRep_CurrentSessionState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "OnDebugDisplay");

	Params::UQtnUpgradeSession_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgradeSession.OnCurrentSessionStateChangedEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EQtnUpgradeSessionState NewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::OnCurrentSessionStateChangedEvent(enum class EQtnUpgradeSessionState NewState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "OnCurrentSessionStateChangedEvent");

	Params::UQtnUpgradeSession_OnCurrentSessionStateChangedEvent_Params Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgradeSession.LinkToBodyPawn_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                BodyPawnTarget                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::LinkToBodyPawn_ServerOnly(class AQtnBodyPawn* BodyPawnTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "LinkToBodyPawn_ServerOnly");

	Params::UQtnUpgradeSession_LinkToBodyPawn_ServerOnly_Params Parms{};

	Parms.BodyPawnTarget = BodyPawnTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.LinkToBodyPawn_LocalOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                BodyPawnTarget                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::LinkToBodyPawn_LocalOnly(class AQtnBodyPawn* BodyPawnTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "LinkToBodyPawn_LocalOnly");

	Params::UQtnUpgradeSession_LinkToBodyPawn_LocalOnly_Params Parms{};

	Parms.BodyPawnTarget = BodyPawnTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.Initialize_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQtnUpgradeStationComponent* OwningComponent                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                OwningBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*             TargetPlayerSlot                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetTribunalSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSession::Initialize_ServerOnly(class UQtnUpgradeStationComponent* OwningComponent, class AQtnBodyPawn* OwningBodyPawn, class USceneComponent* TargetPlayerSlot, class AActor* TargetTribunalSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "Initialize_ServerOnly");

	Params::UQtnUpgradeSession_Initialize_ServerOnly_Params Parms{};

	Parms.OwningComponent = OwningComponent;
	Parms.OwningBodyPawn = OwningBodyPawn;
	Parms.TargetPlayerSlot = TargetPlayerSlot;
	Parms.TargetTribunalSlot = TargetTribunalSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSession.GetSessionBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnUpgradeSession::GetSessionBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "GetSessionBodyPawn");

	Params::UQtnUpgradeSession_GetSessionBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSession.ClearModifiedHandCardHistory_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void UQtnUpgradeSession::ClearModifiedHandCardHistory_ServerOnly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSession", "ClearModifiedHandCardHistory_ServerOnly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnUpgradeSlot
// (None)

class UClass* UQtnUpgradeSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpgradeSlot");

	return Clss;
}


// QtnUpgradeSlot QtnGame.Default__QtnUpgradeSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpgradeSlot* UQtnUpgradeSlot::GetDefaultObj()
{
	static class UQtnUpgradeSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpgradeSlot*>(UQtnUpgradeSlot::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUpgradeSlot.UpdateRolledData_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnRolledUpgradeData       NewRolledData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                     Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeSlot::UpdateRolledData_ServerOnly(struct FQtnRolledUpgradeData& NewRolledData, class UObject* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "UpdateRolledData_ServerOnly");

	Params::UQtnUpgradeSlot_UpdateRolledData_ServerOnly_Params Parms{};

	Parms.NewRolledData = NewRolledData;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.UnslotUpgrade_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeSlot::UnslotUpgrade_ServerOnly(class UObject* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "UnslotUpgrade_ServerOnly");

	Params::UQtnUpgradeSlot_UnslotUpgrade_ServerOnly_Params Parms{};

	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.SlotUpgrade_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnUpgradeSettings         SettingsData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledData                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EQtnSlotCollisionSettingsCollisionSettings                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeSlot::SlotUpgrade_ServerOnly(struct FQtnUpgradeSettings& SettingsData, struct FQtnRolledUpgradeData& RolledData, enum class EQtnSlotCollisionSettings CollisionSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "SlotUpgrade_ServerOnly");

	Params::UQtnUpgradeSlot_SlotUpgrade_ServerOnly_Params Parms{};

	Parms.SettingsData = SettingsData;
	Parms.RolledData = RolledData;
	Parms.CollisionSettings = CollisionSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.ServerUpdateRolledData
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FQtnRolledUpgradeData       NewRolledData                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                     Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSlot::ServerUpdateRolledData(struct FQtnRolledUpgradeData& NewRolledData, class UObject* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "ServerUpdateRolledData");

	Params::UQtnUpgradeSlot_ServerUpdateRolledData_Params Parms{};

	Parms.NewRolledData = NewRolledData;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.ServerUnslotUpgrade
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class UObject*                     Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSlot::ServerUnslotUpgrade(class UObject* Instigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "ServerUnslotUpgrade");

	Params::UQtnUpgradeSlot_ServerUnslotUpgrade_Params Parms{};

	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.ServerSlotUpgrade
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FQtnUpgradeSettings         SettingsData                                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       RolledData                                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EQtnSlotCollisionSettingsCollisionSettings                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeSlot::ServerSlotUpgrade(struct FQtnUpgradeSettings& SettingsData, struct FQtnRolledUpgradeData& RolledData, enum class EQtnSlotCollisionSettings CollisionSettings)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "ServerSlotUpgrade");

	Params::UQtnUpgradeSlot_ServerSlotUpgrade_Params Parms{};

	Parms.SettingsData = SettingsData;
	Parms.RolledData = RolledData;
	Parms.CollisionSettings = CollisionSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.SerializeToRunProgressData_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              SlotIndex                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnUpgradeRunProgressData  ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnUpgradeRunProgressData UQtnUpgradeSlot::SerializeToRunProgressData_ServerOnly(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "SerializeToRunProgressData_ServerOnly");

	Params::UQtnUpgradeSlot_SerializeToRunProgressData_ServerOnly_Params Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.OnRep_UpgradeInfo
// (Final, Native, Protected)
// Parameters:

void UQtnUpgradeSlot::OnRep_UpgradeInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "OnRep_UpgradeInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.OnRep_OwningVerb
// (Final, Native, Protected)
// Parameters:

void UQtnUpgradeSlot::OnRep_OwningVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "OnRep_OwningVerb");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.OnRep_OwningItem
// (Final, Native, Protected)
// Parameters:

void UQtnUpgradeSlot::OnRep_OwningItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "OnRep_OwningItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.OnRep_OwningBody
// (Final, Native, Protected)
// Parameters:

void UQtnUpgradeSlot::OnRep_OwningBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "OnRep_OwningBody");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.LoadFromRunProgressData_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnUpgradeRunProgressData  RunProgressData                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgradeSlot::LoadFromRunProgressData_ServerOnly(struct FQtnUpgradeRunProgressData& RunProgressData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "LoadFromRunProgressData_ServerOnly");

	Params::UQtnUpgradeSlot_LoadFromRunProgressData_ServerOnly_Params Parms{};

	Parms.RunProgressData = RunProgressData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeSlot.IsSlotFilled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               TreatRecentlyUnslottedAsFilled                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeSlot::IsSlotFilled(bool TreatRecentlyUnslottedAsFilled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "IsSlotFilled");

	Params::UQtnUpgradeSlot_IsSlotFilled_Params Parms{};

	Parms.TreatRecentlyUnslottedAsFilled = TreatRecentlyUnslottedAsFilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.IsAllowedToSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnUpgradeSettings         SettingsData                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUpgradeSlot::IsAllowedToSlot(struct FQtnUpgradeSettings& SettingsData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "IsAllowedToSlot");

	Params::UQtnUpgradeSlot_IsAllowedToSlot_Params Parms{};

	Parms.SettingsData = SettingsData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.GetSlotType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnSlotType            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnSlotType UQtnUpgradeSlot::GetSlotType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "GetSlotType");

	Params::UQtnUpgradeSlot_GetSlotType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.GetRolledUpgradeData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnRolledUpgradeData       ReturnValue                                                      (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

struct FQtnRolledUpgradeData UQtnUpgradeSlot::GetRolledUpgradeData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "GetRolledUpgradeData");

	Params::UQtnUpgradeSlot_GetRolledUpgradeData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.GetOwningVerb
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* UQtnUpgradeSlot::GetOwningVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "GetOwningVerb");

	Params::UQtnUpgradeSlot_GetOwningVerb_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.GetOwningItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* UQtnUpgradeSlot::GetOwningItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "GetOwningItem");

	Params::UQtnUpgradeSlot_GetOwningItem_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.GetOwningBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ExtractBodyFromItemOrVerbUpgrades                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnUpgradeSlot::GetOwningBodyPawn(bool ExtractBodyFromItemOrVerbUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "GetOwningBodyPawn");

	Params::UQtnUpgradeSlot_GetOwningBodyPawn_Params Parms{};

	Parms.ExtractBodyFromItemOrVerbUpgrades = ExtractBodyFromItemOrVerbUpgrades;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.GetCurrentSlottedUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQtnUpgrade*                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnUpgrade* UQtnUpgradeSlot::GetCurrentSlottedUpgrade()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "GetCurrentSlottedUpgrade");

	Params::UQtnUpgradeSlot_GetCurrentSlottedUpgrade_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUpgradeSlot.CompareUpgrades
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FQtnUpgradeSettings         CurrentSettingsData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       CurrentRolledData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnUpgradeSettings         PotentialSettingsData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRolledUpgradeData       PotentialRolledData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnUpgradeSlot::CompareUpgrades(struct FQtnUpgradeSettings& CurrentSettingsData, struct FQtnRolledUpgradeData& CurrentRolledData, struct FQtnUpgradeSettings& PotentialSettingsData, struct FQtnRolledUpgradeData& PotentialRolledData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeSlot", "CompareUpgrades");

	Params::UQtnUpgradeSlot_CompareUpgrades_Params Parms{};

	Parms.CurrentSettingsData = CurrentSettingsData;
	Parms.CurrentRolledData = CurrentRolledData;
	Parms.PotentialSettingsData = PotentialSettingsData;
	Parms.PotentialRolledData = PotentialRolledData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnUpgradeStationComponent
// (None)

class UClass* UQtnUpgradeStationComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpgradeStationComponent");

	return Clss;
}


// QtnUpgradeStationComponent QtnGame.Default__QtnUpgradeStationComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpgradeStationComponent* UQtnUpgradeStationComponent::GetDefaultObj()
{
	static class UQtnUpgradeStationComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpgradeStationComponent*>(UQtnUpgradeStationComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUpgradeStationComponent.SetCurrentPlayerSessionArray
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UQtnUpgradeSession*>  NewArrayValues                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUpgradeStationComponent::SetCurrentPlayerSessionArray(TArray<class UQtnUpgradeSession*>& NewArrayValues)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeStationComponent", "SetCurrentPlayerSessionArray");

	Params::UQtnUpgradeStationComponent_SetCurrentPlayerSessionArray_Params Parms{};

	Parms.NewArrayValues = NewArrayValues;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeStationComponent.OnRep_CurrentPlayerSessionArray
// (Final, Native, Public)
// Parameters:

void UQtnUpgradeStationComponent::OnRep_CurrentPlayerSessionArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeStationComponent", "OnRep_CurrentPlayerSessionArray");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUpgradeStationComponent.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUpgradeStationComponent::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeStationComponent", "OnDebugDisplay");

	Params::UQtnUpgradeStationComponent_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnUpgradeStationComponent.OnCurrentPlayerSessionArrayUpdatedEvent
// (Event, Public, BlueprintEvent)
// Parameters:

void UQtnUpgradeStationComponent::OnCurrentPlayerSessionArrayUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeStationComponent", "OnCurrentPlayerSessionArrayUpdatedEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function QtnGame.QtnUpgradeStationComponent.FindAssociatedUpgradeSession
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AQtnBodyPawn*                PlayerInUpgradeSession                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnUpgradeSession*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnUpgradeSession* UQtnUpgradeStationComponent::FindAssociatedUpgradeSession(class AQtnBodyPawn* PlayerInUpgradeSession)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUpgradeStationComponent", "FindAssociatedUpgradeSession");

	Params::UQtnUpgradeStationComponent_FindAssociatedUpgradeSession_Params Parms{};

	Parms.PlayerInUpgradeSession = PlayerInUpgradeSession;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnUpperBodyFSM
// (None)

class UClass* UQtnUpperBodyFSM::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyFSM");

	return Clss;
}


// QtnUpperBodyFSM QtnGame.Default__QtnUpperBodyFSM
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyFSM* UQtnUpperBodyFSM::GetDefaultObj()
{
	static class UQtnUpperBodyFSM* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyFSM*>(UQtnUpperBodyFSM::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyState
// (None)

class UClass* UQtnUpperBodyState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyState");

	return Clss;
}


// QtnUpperBodyState QtnGame.Default__QtnUpperBodyState
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyState* UQtnUpperBodyState::GetDefaultObj()
{
	static class UQtnUpperBodyState* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyState*>(UQtnUpperBodyState::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyStateAction
// (None)

class UClass* UQtnUpperBodyStateAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyStateAction");

	return Clss;
}


// QtnUpperBodyStateAction QtnGame.Default__QtnUpperBodyStateAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyStateAction* UQtnUpperBodyStateAction::GetDefaultObj()
{
	static class UQtnUpperBodyStateAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyStateAction*>(UQtnUpperBodyStateAction::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyStateClimbing
// (None)

class UClass* UQtnUpperBodyStateClimbing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyStateClimbing");

	return Clss;
}


// QtnUpperBodyStateClimbing QtnGame.Default__QtnUpperBodyStateClimbing
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyStateClimbing* UQtnUpperBodyStateClimbing::GetDefaultObj()
{
	static class UQtnUpperBodyStateClimbing* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyStateClimbing*>(UQtnUpperBodyStateClimbing::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyStateEquipping
// (None)

class UClass* UQtnUpperBodyStateEquipping::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyStateEquipping");

	return Clss;
}


// QtnUpperBodyStateEquipping QtnGame.Default__QtnUpperBodyStateEquipping
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyStateEquipping* UQtnUpperBodyStateEquipping::GetDefaultObj()
{
	static class UQtnUpperBodyStateEquipping* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyStateEquipping*>(UQtnUpperBodyStateEquipping::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyStateFrobbing
// (None)

class UClass* UQtnUpperBodyStateFrobbing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyStateFrobbing");

	return Clss;
}


// QtnUpperBodyStateFrobbing QtnGame.Default__QtnUpperBodyStateFrobbing
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyStateFrobbing* UQtnUpperBodyStateFrobbing::GetDefaultObj()
{
	static class UQtnUpperBodyStateFrobbing* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyStateFrobbing*>(UQtnUpperBodyStateFrobbing::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyStateIndisposed
// (None)

class UClass* UQtnUpperBodyStateIndisposed::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyStateIndisposed");

	return Clss;
}


// QtnUpperBodyStateIndisposed QtnGame.Default__QtnUpperBodyStateIndisposed
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyStateIndisposed* UQtnUpperBodyStateIndisposed::GetDefaultObj()
{
	static class UQtnUpperBodyStateIndisposed* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyStateIndisposed*>(UQtnUpperBodyStateIndisposed::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyStateReady
// (None)

class UClass* UQtnUpperBodyStateReady::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyStateReady");

	return Clss;
}


// QtnUpperBodyStateReady QtnGame.Default__QtnUpperBodyStateReady
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyStateReady* UQtnUpperBodyStateReady::GetDefaultObj()
{
	static class UQtnUpperBodyStateReady* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyStateReady*>(UQtnUpperBodyStateReady::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUpperBodyStateVerb
// (None)

class UClass* UQtnUpperBodyStateVerb::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUpperBodyStateVerb");

	return Clss;
}


// QtnUpperBodyStateVerb QtnGame.Default__QtnUpperBodyStateVerb
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUpperBodyStateVerb* UQtnUpperBodyStateVerb::GetDefaultObj()
{
	static class UQtnUpperBodyStateVerb* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUpperBodyStateVerb*>(UQtnUpperBodyStateVerb::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnUserWidgetPool
// (None)

class UClass* UQtnUserWidgetPool::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUserWidgetPool");

	return Clss;
}


// QtnUserWidgetPool QtnGame.Default__QtnUserWidgetPool
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUserWidgetPool* UQtnUserWidgetPool::GetDefaultObj()
{
	static class UQtnUserWidgetPool* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUserWidgetPool*>(UQtnUserWidgetPool::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUserWidgetPool.ResetPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnUserWidgetPool::ResetPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPool", "ResetPool");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidgetPool.Release
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                 Widget                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidgetPool::Release(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPool", "Release");

	Params::UQtnUserWidgetPool_Release_Params Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidgetPool.InitializeWidgetPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              WarmUpPoolNum                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidgetPool::InitializeWidgetPool(int32 WarmUpPoolNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPool", "InitializeWidgetPool");

	Params::UQtnUserWidgetPool_InitializeWidgetPool_Params Parms{};

	Parms.WarmUpPoolNum = WarmUpPoolNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidgetPool.AcquireWidgetFromPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnUserWidgetPool::AcquireWidgetFromPool()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPool", "AcquireWidgetFromPool");

	Params::UQtnUserWidgetPool_AcquireWidgetFromPool_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnUserWidgetPoolManager
// (None)

class UClass* UQtnUserWidgetPoolManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUserWidgetPoolManager");

	return Clss;
}


// QtnUserWidgetPoolManager QtnGame.Default__QtnUserWidgetPoolManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUserWidgetPoolManager* UQtnUserWidgetPoolManager::GetDefaultObj()
{
	static class UQtnUserWidgetPoolManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUserWidgetPoolManager*>(UQtnUserWidgetPoolManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUserWidgetPoolManager.ReturnWidgetToPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     WidgetClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 Widget                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUserWidgetPoolManager::ReturnWidgetToPool(TSubclassOf<class UUserWidget> WidgetClass, class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPoolManager", "ReturnWidgetToPool");

	Params::UQtnUserWidgetPoolManager_ReturnWidgetToPool_Params Parms{};

	Parms.WidgetClass = WidgetClass;
	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidgetPoolManager.IsWidgetPoolEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUserWidgetPoolManager::IsWidgetPoolEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPoolManager", "IsWidgetPoolEnabled");

	Params::UQtnUserWidgetPoolManager_IsWidgetPoolEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidgetPoolManager.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnUserWidgetPoolManager::Initialize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPoolManager", "Initialize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidgetPoolManager.GetWidgetPoolByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     WidgetClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnUserWidgetPool*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnUserWidgetPool* UQtnUserWidgetPoolManager::GetWidgetPoolByClass(TSubclassOf<class UUserWidget> WidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPoolManager", "GetWidgetPoolByClass");

	Params::UQtnUserWidgetPoolManager_GetWidgetPoolByClass_Params Parms{};

	Parms.WidgetClass = WidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUserWidgetPoolManager.Cleanup
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UQtnUserWidgetPoolManager::Cleanup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPoolManager", "Cleanup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUserWidgetPoolManager.AcquireWidgetFromPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UUserWidget>     WidgetClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                 ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UQtnUserWidgetPoolManager::AcquireWidgetFromPool(TSubclassOf<class UUserWidget> WidgetClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUserWidgetPoolManager", "AcquireWidgetFromPool");

	Params::UQtnUserWidgetPoolManager_AcquireWidgetFromPool_Params Parms{};

	Parms.WidgetClass = WidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnUtilities
// (None)

class UClass* UQtnUtilities::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnUtilities");

	return Clss;
}


// QtnUtilities QtnGame.Default__QtnUtilities
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnUtilities* UQtnUtilities::GetDefaultObj()
{
	static class UQtnUtilities* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnUtilities*>(UQtnUtilities::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnUtilities.VolumeEncompassesPoint
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AVolume*                     Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Point                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SphereRadius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DistanceToPoint                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::VolumeEncompassesPoint(class AVolume* Target, const struct FVector& Point, float SphereRadius, float* DistanceToPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "VolumeEncompassesPoint");

	Params::UQtnUtilities_VolumeEncompassesPoint_Params Parms{};

	Parms.Target = Target;
	Parms.Point = Point;
	Parms.SphereRadius = SphereRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (DistanceToPoint != nullptr)
		*DistanceToPoint = Parms.DistanceToPoint;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.UpdateBounds
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class USceneComponent*             SceneComponent                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::UpdateBounds(class USceneComponent* SceneComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "UpdateBounds");

	Params::UQtnUtilities_UpdateBounds_Params Parms{};

	Parms.SceneComponent = SceneComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.TickAnimationAndRefreshBones
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class USkeletalMeshComponent*      SkeletalMeshComponent                                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::TickAnimationAndRefreshBones(class USkeletalMeshComponent* SkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "TickAnimationAndRefreshBones");

	Params::UQtnUtilities_TickAnimationAndRefreshBones_Params Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.TickAccumulator
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// float                              RatioRef                                                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsFilling                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaSeconds                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FillDrainDuration                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               GotFull                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::TickAccumulator(float& RatioRef, bool IsFilling, float DeltaSeconds, float FillDrainDuration, bool* GotFull)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "TickAccumulator");

	Params::UQtnUtilities_TickAccumulator_Params Parms{};

	Parms.RatioRef = RatioRef;
	Parms.IsFilling = IsFilling;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.FillDrainDuration = FillDrainDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (GotFull != nullptr)
		*GotFull = Parms.GotFull;

}


// Function QtnGame.QtnUtilities.SyncLoadVerbClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UQtnVerb>      VerbSoftClass                                                    (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnVerb>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnVerb> UQtnUtilities::SyncLoadVerbClass(TSoftClassPtr<class UQtnVerb> VerbSoftClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadVerbClass");

	Params::UQtnUtilities_SyncLoadVerbClass_Params Parms{};

	Parms.VerbSoftClass = VerbSoftClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SyncLoadUpgradeClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UQtnUpgrade>   UpgradeSoftClass                                                 (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnUpgrade>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnUpgrade> UQtnUtilities::SyncLoadUpgradeClass(TSoftClassPtr<class UQtnUpgrade> UpgradeSoftClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadUpgradeClass");

	Params::UQtnUtilities_SyncLoadUpgradeClass_Params Parms{};

	Parms.UpgradeSoftClass = UpgradeSoftClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SyncLoadStaticMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UStaticMesh>  StaticMesh                                                       (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMesh*                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMesh* UQtnUtilities::SyncLoadStaticMesh(TSoftObjectPtr<class UStaticMesh> StaticMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadStaticMesh");

	Params::UQtnUtilities_SyncLoadStaticMesh_Params Parms{};

	Parms.StaticMesh = StaticMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SyncLoadSkeletalMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>SkeletalMesh                                                     (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UQtnUtilities::SyncLoadSkeletalMesh(TSoftObjectPtr<class USkeletalMesh> SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadSkeletalMesh");

	Params::UQtnUtilities_SyncLoadSkeletalMesh_Params Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SyncLoadScreenClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UQtnScreen>    SoftScreenClass                                                  (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnScreen>      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnScreen> UQtnUtilities::SyncLoadScreenClass(TSoftClassPtr<class UQtnScreen> SoftScreenClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadScreenClass");

	Params::UQtnUtilities_SyncLoadScreenClass_Params Parms{};

	Parms.SoftScreenClass = SoftScreenClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SyncLoadPerkClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UQtnPerk>      PerkSoftClass                                                    (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnPerk>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnPerk> UQtnUtilities::SyncLoadPerkClass(TSoftClassPtr<class UQtnPerk> PerkSoftClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadPerkClass");

	Params::UQtnUtilities_SyncLoadPerkClass_Params Parms{};

	Parms.PerkSoftClass = PerkSoftClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SyncLoadClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UObject>       SoftClass                                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UQtnUtilities::SyncLoadClass(TSoftClassPtr<class UObject> SoftClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadClass");

	Params::UQtnUtilities_SyncLoadClass_Params Parms{};

	Parms.SoftClass = SoftClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SyncLoadActorClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class AActor>        SoftActorClass                                                   (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AActor> UQtnUtilities::SyncLoadActorClass(TSoftClassPtr<class AActor> SoftActorClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SyncLoadActorClass");

	Params::UQtnUtilities_SyncLoadActorClass_Params Parms{};

	Parms.SoftActorClass = SoftActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.StaticIsEndlessMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              Arc                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::StaticIsEndlessMode(int32 Arc)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "StaticIsEndlessMode");

	Params::UQtnUtilities_StaticIsEndlessMode_Params Parms{};

	Parms.Arc = Arc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.StaticGetEndlessModeArcEnumeration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnUtilities::StaticGetEndlessModeArcEnumeration()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "StaticGetEndlessModeArcEnumeration");

	Params::UQtnUtilities_StaticGetEndlessModeArcEnumeration_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.StaticFormatText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        InText                                                           (Parm, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnUtilities::StaticFormatText(class FText InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "StaticFormatText");

	Params::UQtnUtilities_StaticFormatText_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SphereTrace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::SphereTrace(class AActor* QueryingActor, struct FVector& Start, struct FVector& End, float Radius, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SphereTrace");

	Params::UQtnUtilities_SphereTrace_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.Start = Start;
	Parms.End = End;
	Parms.Radius = Radius;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SpawnActor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      OwningActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>          ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// enum class ESpawnActorCollisionHandlingMethodCollisionHandling                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnUtilities::SpawnActor_ServerOnly(class AActor* OwningActor, TSubclassOf<class AActor> ActorClass, struct FTransform& Transform, enum class ESpawnActorCollisionHandlingMethod CollisionHandling)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SpawnActor_ServerOnly");

	Params::UQtnUtilities_SpawnActor_ServerOnly_Params Parms{};

	Parms.OwningActor = OwningActor;
	Parms.ActorClass = ActorClass;
	Parms.Transform = Transform;
	Parms.CollisionHandling = CollisionHandling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SortVectorArrayWithPredicate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FVector>             InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Predicate                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUtilities::SortVectorArrayWithPredicate(TArray<struct FVector>& InArray, FDelegateProperty_& Predicate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortVectorArrayWithPredicate");

	Params::UQtnUtilities_SortVectorArrayWithPredicate_Params Parms{};

	Parms.InArray = InArray;
	Parms.Predicate = Predicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SortTransformArrayWithPredicate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FTransform>          InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Predicate                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUtilities::SortTransformArrayWithPredicate(TArray<struct FTransform>& InArray, FDelegateProperty_& Predicate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortTransformArrayWithPredicate");

	Params::UQtnUtilities_SortTransformArrayWithPredicate_Params Parms{};

	Parms.InArray = InArray;
	Parms.Predicate = Predicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SortStrings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class FString>              InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUtilities::SortStrings(TArray<class FString>& InArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortStrings");

	Params::UQtnUtilities_SortStrings_Params Parms{};

	Parms.InArray = InArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SortRotatorArrayWithPredicate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FRotator>            InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Predicate                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUtilities::SortRotatorArrayWithPredicate(TArray<struct FRotator>& InArray, FDelegateProperty_& Predicate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortRotatorArrayWithPredicate");

	Params::UQtnUtilities_SortRotatorArrayWithPredicate_Params Parms{};

	Parms.InArray = InArray;
	Parms.Predicate = Predicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SortObjectArrayWithPredicate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class UObject*>             InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Predicate                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUtilities::SortObjectArrayWithPredicate(TArray<class UObject*>& InArray, FDelegateProperty_& Predicate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortObjectArrayWithPredicate");

	Params::UQtnUtilities_SortObjectArrayWithPredicate_Params Parms{};

	Parms.InArray = InArray;
	Parms.Predicate = Predicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SortNames
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class FName>                InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUtilities::SortNames(TArray<class FName>& InArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortNames");

	Params::UQtnUtilities_SortNames_Params Parms{};

	Parms.InArray = InArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SortGameplayTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FGameplayTag>        InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnUtilities::SortGameplayTags(TArray<struct FGameplayTag>& InArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortGameplayTags");

	Params::UQtnUtilities_SortGameplayTags_Params Parms{};

	Parms.InArray = InArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SortActorArrayWithPredicate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class AActor*>              InArray                                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// FDelegateProperty_                 Predicate                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUtilities::SortActorArrayWithPredicate(TArray<class AActor*>& InArray, FDelegateProperty_& Predicate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SortActorArrayWithPredicate");

	Params::UQtnUtilities_SortActorArrayWithPredicate_Params Parms{};

	Parms.InArray = InArray;
	Parms.Predicate = Predicate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SnapToGround
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      OwningActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     UnsnappedPosition                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxSnapDistance                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FoundGround                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     HitNormal                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        PhysicalSurface                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnUtilities::SnapToGround(class AActor* OwningActor, struct FVector& UnsnappedPosition, float MaxSnapDistance, bool* FoundGround, struct FVector* HitNormal, enum class EPhysicalSurface* PhysicalSurface)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SnapToGround");

	Params::UQtnUtilities_SnapToGround_Params Parms{};

	Parms.OwningActor = OwningActor;
	Parms.UnsnappedPosition = UnsnappedPosition;
	Parms.MaxSnapDistance = MaxSnapDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FoundGround != nullptr)
		*FoundGround = Parms.FoundGround;

	if (HitNormal != nullptr)
		*HitNormal = std::move(Parms.HitNormal);

	if (PhysicalSurface != nullptr)
		*PhysicalSurface = Parms.PhysicalSurface;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.ShowLoadingMovie
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::ShowLoadingMovie(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ShowLoadingMovie");

	Params::UQtnUtilities_ShowLoadingMovie_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.ShowInviteUI
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputSuccessEnum   OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::ShowInviteUI(class UObject* WorldContextObject, enum class EQtnOutputSuccessEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ShowInviteUI");

	Params::UQtnUtilities_ShowInviteUI_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnUtilities.ShowFriendsUI
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputSuccessEnum   OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::ShowFriendsUI(class UObject* WorldContextObject, enum class EQtnOutputSuccessEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ShowFriendsUI");

	Params::UQtnUtilities_ShowFriendsUI_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnUtilities.ShouldPrimeSoundsOnPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::ShouldPrimeSoundsOnPlatform()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ShouldPrimeSoundsOnPlatform");

	Params::UQtnUtilities_ShouldPrimeSoundsOnPlatform_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.SetTransformMotionBlurEnabled
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bMotionBlurEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::SetTransformMotionBlurEnabled(class UObject* WorldContextObject, bool bMotionBlurEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetTransformMotionBlurEnabled");

	Params::UQtnUtilities_SetTransformMotionBlurEnabled_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bMotionBlurEnabled = bMotionBlurEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SetSubtitleCategoryEnabled
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class FName                        SubtitleCategory                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Enabled                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::SetSubtitleCategoryEnabled(class FName SubtitleCategory, bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetSubtitleCategoryEnabled");

	Params::UQtnUtilities_SetSubtitleCategoryEnabled_Params Parms{};

	Parms.SubtitleCategory = SubtitleCategory;
	Parms.Enabled = Enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SetStreamingLevelTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class ULevelStreaming*             StreamingLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUtilities::SetStreamingLevelTransform(class ULevelStreaming* StreamingLevel, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetStreamingLevelTransform");

	Params::UQtnUtilities_SetStreamingLevelTransform_Params Parms{};

	Parms.StreamingLevel = StreamingLevel;
	Parms.Transform = Transform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SetScreenPercentage
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// float                              ScreenPercentage                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::SetScreenPercentage(float ScreenPercentage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetScreenPercentage");

	Params::UQtnUtilities_SetScreenPercentage_Params Parms{};

	Parms.ScreenPercentage = ScreenPercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SetLightmapType
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UPrimitiveComponent*         Component                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ELightmapType           LightmapType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::SetLightmapType(class UPrimitiveComponent* Component, enum class ELightmapType LightmapType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetLightmapType");

	Params::UQtnUtilities_SetLightmapType_Params Parms{};

	Parms.Component = Component;
	Parms.LightmapType = LightmapType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SetGameDefaultMap
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class FString                      NewDefaultMap                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::SetGameDefaultMap(const class FString& NewDefaultMap)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetGameDefaultMap");

	Params::UQtnUtilities_SetGameDefaultMap_Params Parms{};

	Parms.NewDefaultMap = NewDefaultMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SetActorTickComplete
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class AActor*                      ActorToDisableTick                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bShouldTick                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::SetActorTickComplete(class AActor* ActorToDisableTick, bool bShouldTick)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetActorTickComplete");

	Params::UQtnUtilities_SetActorTickComplete_Params Parms{};

	Parms.ActorToDisableTick = ActorToDisableTick;
	Parms.bShouldTick = bShouldTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SetActorsInLevelHidden
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class ULevelStreaming*             StreamingLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Hidden                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ContextString                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::SetActorsInLevelHidden(class ULevelStreaming* StreamingLevel, bool Hidden, const class FString& ContextString)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SetActorsInLevelHidden");

	Params::UQtnUtilities_SetActorsInLevelHidden_Params Parms{};

	Parms.StreamingLevel = StreamingLevel;
	Parms.Hidden = Hidden;
	Parms.ContextString = ContextString;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.ServerStopListen
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::ServerStopListen(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ServerStopListen");

	Params::UQtnUtilities_ServerStopListen_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.ServerStartListen
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::ServerStartListen(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ServerStartListen");

	Params::UQtnUtilities_ServerStartListen_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.SelectBestUpgradeTag
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// TArray<struct FGameplayTag>        PrimaryTags                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTag>        SecondaryTags                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FRandomStream               RandomStream                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGameplayTag                GeneralTag                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TierChance                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnUtilities::SelectBestUpgradeTag(TArray<struct FGameplayTag>& PrimaryTags, TArray<struct FGameplayTag>& SecondaryTags, struct FRandomStream& RandomStream, const struct FGameplayTag& GeneralTag, float TierChance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "SelectBestUpgradeTag");

	Params::UQtnUtilities_SelectBestUpgradeTag_Params Parms{};

	Parms.PrimaryTags = PrimaryTags;
	Parms.SecondaryTags = SecondaryTags;
	Parms.RandomStream = RandomStream;
	Parms.GeneralTag = GeneralTag;
	Parms.TierChance = TierChance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.RunGc
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// enum class EQtnRunGcMode           Mode                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFullPurge                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::RunGc(enum class EQtnRunGcMode Mode, bool bFullPurge)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "RunGc");

	Params::UQtnUtilities_RunGc_Params Parms{};

	Parms.Mode = Mode;
	Parms.bFullPurge = bFullPurge;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.QtnPrintStringToFile
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FString                      NewFileHeader                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      FileContents                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      FolderName                                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Filename                                                         (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Append                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OpenFolder                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::QtnPrintStringToFile(const class FString& NewFileHeader, class FString& FileContents, const class FString& FolderName, const class FString& Filename, bool Append, bool OpenFolder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "QtnPrintStringToFile");

	Params::UQtnUtilities_QtnPrintStringToFile_Params Parms{};

	Parms.NewFileHeader = NewFileHeader;
	Parms.FileContents = FileContents;
	Parms.FolderName = FolderName;
	Parms.Filename = Filename;
	Parms.Append = Append;
	Parms.OpenFolder = OpenFolder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.QtnPrintString
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      InString                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnLogCategory         LogCategory                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPrintToScreen                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bPrintToLog                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                TextColor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::QtnPrintString(class UObject* WorldContextObject, const class FString& InString, enum class EQtnLogCategory LogCategory, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "QtnPrintString");

	Params::UQtnUtilities_QtnPrintString_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InString = InString;
	Parms.LogCategory = LogCategory;
	Parms.bPrintToScreen = bPrintToScreen;
	Parms.bPrintToLog = bPrintToLog;
	Parms.TextColor = TextColor;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.QtnDoRadialKnockback
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorsToIgnore                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             KnockbackRadii                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              KnockbackStrength                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               blockedByDeepSnow                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AQtnPawn*>            ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class AQtnPawn*> UQtnUtilities::QtnDoRadialKnockback(class UObject* WorldContextObject, struct FVector& Origin, TArray<class AActor*>& ActorsToIgnore, struct FQtnRangedFloat& KnockbackRadii, float KnockbackStrength, bool blockedByDeepSnow)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "QtnDoRadialKnockback");

	Params::UQtnUtilities_QtnDoRadialKnockback_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.ActorsToIgnore = ActorsToIgnore;
	Parms.KnockbackRadii = KnockbackRadii;
	Parms.KnockbackStrength = KnockbackStrength;
	Parms.blockedByDeepSnow = blockedByDeepSnow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.QtnDoRadialDamage
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// struct FQtnRangedFloat             DamageRadii                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               blockedByDeepSnow                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnProjectile*              Projectile                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreBlockingGeometry                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseRadialDamageScaling                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ImpactOffset                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UQtnUtilities::QtnDoRadialDamage(struct FQtnRangedFloat& DamageRadii, struct FQtnDamageInfo& DamageInfo, bool blockedByDeepSnow, class AQtnProjectile* Projectile, bool IgnoreBlockingGeometry, bool UseRadialDamageScaling, const struct FVector& ImpactOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "QtnDoRadialDamage");

	Params::UQtnUtilities_QtnDoRadialDamage_Params Parms{};

	Parms.DamageRadii = DamageRadii;
	Parms.DamageInfo = DamageInfo;
	Parms.blockedByDeepSnow = blockedByDeepSnow;
	Parms.Projectile = Projectile;
	Parms.IgnoreBlockingGeometry = IgnoreBlockingGeometry;
	Parms.UseRadialDamageScaling = UseRadialDamageScaling;
	Parms.ImpactOffset = ImpactOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.PrimeSoundWaves
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class USoundWave*>          SoundsToPrime                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::PrimeSoundWaves(TArray<class USoundWave*>& SoundsToPrime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "PrimeSoundWaves");

	Params::UQtnUtilities_PrimeSoundWaves_Params Parms{};

	Parms.SoundsToPrime = SoundsToPrime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.PrimeSoundCues
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class USoundCue*>           SoundCuesToPrime                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::PrimeSoundCues(TArray<class USoundCue*>& SoundCuesToPrime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "PrimeSoundCues");

	Params::UQtnUtilities_PrimeSoundCues_Params Parms{};

	Parms.SoundCuesToPrime = SoundCuesToPrime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.PreloadClassArray
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// TArray<TSoftClassPtr<class UObject>>SoftClassArray                                                   (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UQtnUtilities::PreloadClassArray(const TArray<TSoftClassPtr<class UObject>>& SoftClassArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "PreloadClassArray");

	Params::UQtnUtilities_PreloadClassArray_Params Parms{};

	Parms.SoftClassArray = SoftClassArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.PreloadClass
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// TSoftClassPtr<class UObject>       SoftClass                                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::PreloadClass(TSoftClassPtr<class UObject> SoftClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "PreloadClass");

	Params::UQtnUtilities_PreloadClass_Params Parms{};

	Parms.SoftClass = SoftClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.PlaySingleShot3DSound
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class AActor*                      SourceActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                  Sound                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::PlaySingleShot3DSound(class AActor* SourceActor, class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "PlaySingleShot3DSound");

	Params::UQtnUtilities_PlaySingleShot3DSound_Params Parms{};

	Parms.SourceActor = SourceActor;
	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.MapAffectsPlayerProgress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::MapAffectsPlayerProgress(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "MapAffectsPlayerProgress");

	Params::UQtnUtilities_MapAffectsPlayerProgress_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.MakeRandomLinearColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UQtnUtilities::MakeRandomLinearColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "MakeRandomLinearColor");

	Params::UQtnUtilities_MakeRandomLinearColor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.MakeRandomColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor UQtnUtilities::MakeRandomColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "MakeRandomColor");

	Params::UQtnUtilities_MakeRandomColor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.LineTrace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::LineTrace(class AActor* QueryingActor, struct FVector& Start, struct FVector& End, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "LineTrace");

	Params::UQtnUtilities_LineTrace_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.Start = Start;
	Parms.End = End;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsWithinVerbRange
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    AttackingPawn                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             HorizontalReach                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              VerticalReach                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             HalfAngleDegrees                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               IsLobbedProjectile                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FutureSeconds                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsWithinVerbRange(class AQtnPawn* AttackingPawn, class AActor* TargetActor, struct FQtnRangedFloat& HorizontalReach, float VerticalReach, struct FQtnRangedFloat& HalfAngleDegrees, bool IsLobbedProjectile, float FutureSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsWithinVerbRange");

	Params::UQtnUtilities_IsWithinVerbRange_Params Parms{};

	Parms.AttackingPawn = AttackingPawn;
	Parms.TargetActor = TargetActor;
	Parms.HorizontalReach = HorizontalReach;
	Parms.VerticalReach = VerticalReach;
	Parms.HalfAngleDegrees = HalfAngleDegrees;
	Parms.IsLobbedProjectile = IsLobbedProjectile;
	Parms.FutureSeconds = FutureSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsWeaponRanged
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ItemData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsWeaponRanged(struct FQtnItemData& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsWeaponRanged");

	Params::UQtnUtilities_IsWeaponRanged_Params Parms{};

	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsViewportFadedUp
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsViewportFadedUp(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsViewportFadedUp");

	Params::UQtnUtilities_IsViewportFadedUp_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsUserAccountCurrency
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      CurrencyId                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsUserAccountCurrency(class FString& CurrencyId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsUserAccountCurrency");

	Params::UQtnUtilities_IsUserAccountCurrency_Params Parms{};

	Parms.CurrencyId = CurrencyId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsTradeshowDemo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsTradeshowDemo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsTradeshowDemo");

	Params::UQtnUtilities_IsTradeshowDemo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsSubtitleCategoryEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        SubtitleCategory                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsSubtitleCategoryEnabled(class FName SubtitleCategory)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsSubtitleCategoryEnabled");

	Params::UQtnUtilities_IsSubtitleCategoryEnabled_Params Parms{};

	Parms.SubtitleCategory = SubtitleCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsShippingBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsShippingBuild()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsShippingBuild");

	Params::UQtnUtilities_IsShippingBuild_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsSameVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnVersion                 CurrentVersion                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FQtnVersion                 VersionToCompareAgainst                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsSameVersion(struct FQtnVersion& CurrentVersion, struct FQtnVersion& VersionToCompareAgainst)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsSameVersion");

	Params::UQtnUtilities_IsSameVersion_Params Parms{};

	Parms.CurrentVersion = CurrentVersion;
	Parms.VersionToCompareAgainst = VersionToCompareAgainst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsRunningCommandlet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsRunningCommandlet()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsRunningCommandlet");

	Params::UQtnUtilities_IsRunningCommandlet_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsProxyInventoryCurrency
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      CurrencyId                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsProxyInventoryCurrency(class FString& CurrencyId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsProxyInventoryCurrency");

	Params::UQtnUtilities_IsProxyInventoryCurrency_Params Parms{};

	Parms.CurrencyId = CurrencyId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsPlayingInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsPlayingInEditor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsPlayingInEditor");

	Params::UQtnUtilities_IsPlayingInEditor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnPlatform            Platform                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsPlatform(enum class EQtnPlatform Platform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsPlatform");

	Params::UQtnUtilities_IsPlatform_Params Parms{};

	Parms.Platform = Platform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsOlderVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnVersion                 CurrentVersion                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FQtnVersion                 VersionToCompareAgainst                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsOlderVersion(struct FQtnVersion& CurrentVersion, struct FQtnVersion& VersionToCompareAgainst)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsOlderVersion");

	Params::UQtnUtilities_IsOlderVersion_Params Parms{};

	Parms.CurrentVersion = CurrentVersion;
	Parms.VersionToCompareAgainst = VersionToCompareAgainst;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsObjectOfType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UObject*                     Target                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UObject>       TestClass                                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputYesNoEnum     OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::IsObjectOfType(class UObject* Target, TSoftClassPtr<class UObject> TestClass, enum class EQtnOutputYesNoEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsObjectOfType");

	Params::UQtnUtilities_IsObjectOfType_Params Parms{};

	Parms.Target = Target;
	Parms.TestClass = TestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnUtilities.IsItemDataValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ItemData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsItemDataValid(struct FQtnItemData& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsItemDataValid");

	Params::UQtnUtilities_IsItemDataValid_Params Parms{};

	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsInPIEWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsInPIEWorld(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsInPIEWorld");

	Params::UQtnUtilities_IsInPIEWorld_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsEndPlayShuttingDown
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                      ExpectedWorld                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EEndPlayReason          EndPlayReason                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsEndPlayShuttingDown(class UWorld* ExpectedWorld, enum class EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsEndPlayShuttingDown");

	Params::UQtnUtilities_IsEndPlayShuttingDown_Params Parms{};

	Parms.ExpectedWorld = ExpectedWorld;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsDeferredSceneCaptureFinished
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class USceneCaptureComponent2D*    SceneCaptureComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::IsDeferredSceneCaptureFinished(class USceneCaptureComponent2D* SceneCaptureComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsDeferredSceneCaptureFinished");

	Params::UQtnUtilities_IsDeferredSceneCaptureFinished_Params Parms{};

	Parms.SceneCaptureComponent = SceneCaptureComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.IsClassOfType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UClass*                      TargetClass                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UObject>       TestClass                                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputYesNoEnum     OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::IsClassOfType(class UClass* TargetClass, TSoftClassPtr<class UObject> TestClass, enum class EQtnOutputYesNoEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "IsClassOfType");

	Params::UQtnUtilities_IsClassOfType_Params Parms{};

	Parms.TargetClass = TargetClass;
	Parms.TestClass = TestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnUtilities.HasVerbClearance
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    AttackingPawn                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      TargetActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForRangedAttacks                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::HasVerbClearance(class AQtnPawn* AttackingPawn, class AActor* TargetActor, bool ForRangedAttacks)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "HasVerbClearance");

	Params::UQtnUtilities_HasVerbClearance_Params Parms{};

	Parms.AttackingPawn = AttackingPawn;
	Parms.TargetActor = TargetActor;
	Parms.ForRangedAttacks = ForRangedAttacks;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetWorldGravity
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnUtilities::GetWorldGravity(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetWorldGravity");

	Params::UQtnUtilities_GetWorldGravity_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetSuperClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                      ChildClass                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UQtnUtilities::GetSuperClass(class UClass* ChildClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetSuperClass");

	Params::UQtnUtilities_GetSuperClass_Params Parms{};

	Parms.ChildClass = ChildClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetStreamingLevelFromActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      TargetActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelStreaming*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelStreaming* UQtnUtilities::GetStreamingLevelFromActor(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetStreamingLevelFromActor");

	Params::UQtnUtilities_GetStreamingLevelFromActor_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetScaledFOV
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              FOV                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Scalar                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnUtilities::GetScaledFOV(float FOV, float Scalar)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetScaledFOV");

	Params::UQtnUtilities_GetScaledFOV_Params Parms{};

	Parms.FOV = FOV;
	Parms.Scalar = Scalar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetPowerVerbClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnItemData                ItemData                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class UQtnVerb>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnVerb> UQtnUtilities::GetPowerVerbClass(struct FQtnItemData& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetPowerVerbClass");

	Params::UQtnUtilities_GetPowerVerbClass_Params Parms{};

	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnPlatform            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnPlatform UQtnUtilities::GetPlatform()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetPlatform");

	Params::UQtnUtilities_GetPlatform_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetExpectedWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ActorInTheWorld                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWorld*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UQtnUtilities::GetExpectedWorld(class AActor* ActorInTheWorld)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetExpectedWorld");

	Params::UQtnUtilities_GetExpectedWorld_Params Parms{};

	Parms.ActorInTheWorld = ActorInTheWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetDisplayGamma
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnUtilities::GetDisplayGamma()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetDisplayGamma");

	Params::UQtnUtilities_GetDisplayGamma_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetCurrencyGameplayTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      CurrencyId                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnUtilities::GetCurrencyGameplayTag(class FString& CurrencyId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetCurrencyGameplayTag");

	Params::UQtnUtilities_GetCurrencyGameplayTag_Params Parms{};

	Parms.CurrencyId = CurrencyId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetClassNameWithoutSuffix
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                      Archetype                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnUtilities::GetClassNameWithoutSuffix(class UClass* Archetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetClassNameWithoutSuffix");

	Params::UQtnUtilities_GetClassNameWithoutSuffix_Params Parms{};

	Parms.Archetype = Archetype;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetClassNameFromObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     ObjectInstance                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FullPath                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TrimSuffix                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnUtilities::GetClassNameFromObject(class UObject* ObjectInstance, bool FullPath, bool TrimSuffix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetClassNameFromObject");

	Params::UQtnUtilities_GetClassNameFromObject_Params Parms{};

	Parms.ObjectInstance = ObjectInstance;
	Parms.FullPath = FullPath;
	Parms.TrimSuffix = TrimSuffix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetClassNameFromArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                      Archetype                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FullPath                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               TrimSuffix                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnUtilities::GetClassNameFromArchetype(class UClass* Archetype, bool FullPath, bool TrimSuffix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetClassNameFromArchetype");

	Params::UQtnUtilities_GetClassNameFromArchetype_Params Parms{};

	Parms.Archetype = Archetype;
	Parms.FullPath = FullPath;
	Parms.TrimSuffix = TrimSuffix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetClassFromName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ClassPath                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ErrorIfNotFound                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UQtnUtilities::GetClassFromName(class FString& ClassPath, bool ErrorIfNotFound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetClassFromName");

	Params::UQtnUtilities_GetClassFromName_Params Parms{};

	Parms.ClassPath = ClassPath;
	Parms.ErrorIfNotFound = ErrorIfNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetClassDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     SelfReference                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>         ObjectClass                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UQtnUtilities::GetClassDefaultObject(class UObject* SelfReference, TSubclassOf<class UObject> ObjectClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetClassDefaultObject");

	Params::UQtnUtilities_GetClassDefaultObject_Params Parms{};

	Parms.SelfReference = SelfReference;
	Parms.ObjectClass = ObjectClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetChildComponentByClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*             ParentComponent                                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ComponentClass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*             ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* UQtnUtilities::GetChildComponentByClass(class USceneComponent* ParentComponent, class UClass* ComponentClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetChildComponentByClass");

	Params::UQtnUtilities_GetChildComponentByClass_Params Parms{};

	Parms.ParentComponent = ParentComponent;
	Parms.ComponentClass = ComponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetChangelist
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnUtilities::GetChangelist()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetChangelist");

	Params::UQtnUtilities_GetChangelist_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetBuildLabel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnUtilities::GetBuildLabel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetBuildLabel");

	Params::UQtnUtilities_GetBuildLabel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetAssetNameForLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UWorld>       Level                                                            (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UQtnUtilities::GetAssetNameForLevel(TSoftObjectPtr<class UWorld> Level)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetAssetNameForLevel");

	Params::UQtnUtilities_GetAssetNameForLevel_Params Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GetActorInStreamingLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AActor>          ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelStreaming*             StreamingLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnUtilities::GetActorInStreamingLevel(TSubclassOf<class AActor> ActorClass, class ULevelStreaming* StreamingLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GetActorInStreamingLevel");

	Params::UQtnUtilities_GetActorInStreamingLevel_Params Parms{};

	Parms.ActorClass = ActorClass;
	Parms.StreamingLevel = StreamingLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.GeneratePoissonDiscSamples
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// int32                              Width                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Height                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ExclusionRadius                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Iterations                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRandomStream               RandomStream                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVector2D> UQtnUtilities::GeneratePoissonDiscSamples(int32 Width, int32 Height, float ExclusionRadius, int32 Iterations, struct FRandomStream& RandomStream)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "GeneratePoissonDiscSamples");

	Params::UQtnUtilities_GeneratePoissonDiscSamples_Params Parms{};

	Parms.Width = Width;
	Parms.Height = Height;
	Parms.ExclusionRadius = ExclusionRadius;
	Parms.Iterations = Iterations;
	Parms.RandomStream = RandomStream;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.FormatSubtitles
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        SubtitleText                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                        SpeakerStyle                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        SubtitleStyle                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnUtilities::FormatSubtitles(class FText& SubtitleText, class FName& SpeakerStyle, class FName& SubtitleStyle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "FormatSubtitles");

	Params::UQtnUtilities_FormatSubtitles_Params Parms{};

	Parms.SubtitleText = SubtitleText;
	Parms.SpeakerStyle = SpeakerStyle;
	Parms.SubtitleStyle = SubtitleStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.FadeUpViewport
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     FadeToken                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::FadeUpViewport(class UObject* FadeToken, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "FadeUpViewport");

	Params::UQtnUtilities_FadeUpViewport_Params Parms{};

	Parms.FadeToken = FadeToken;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.FadeDownViewport
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     FadeToken                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FadeDuration                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::FadeDownViewport(class UObject* FadeToken, float FadeDuration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "FadeDownViewport");

	Params::UQtnUtilities_FadeDownViewport_Params Parms{};

	Parms.FadeToken = FadeToken;
	Parms.FadeDuration = FadeDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.EmitCustomAINoise_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class AActor*                      EmittingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    CulpritPawn                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnNoiseConfig             CustomNoiseConfig                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnUtilities::EmitCustomAINoise_ServerOnly(class AActor* EmittingActor, class AQtnPawn* CulpritPawn, struct FQtnNoiseConfig& CustomNoiseConfig)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "EmitCustomAINoise_ServerOnly");

	Params::UQtnUtilities_EmitCustomAINoise_ServerOnly_Params Parms{};

	Parms.EmittingActor = EmittingActor;
	Parms.CulpritPawn = CulpritPawn;
	Parms.CustomNoiseConfig = CustomNoiseConfig;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.EmitAINoise_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class AActor*                      EmittingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    CulpritPawn                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnNoiseEnum           NoiseType                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              NoiseStrength                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::EmitAINoise_ServerOnly(class AActor* EmittingActor, class AQtnPawn* CulpritPawn, enum class EQtnNoiseEnum NoiseType, float NoiseStrength)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "EmitAINoise_ServerOnly");

	Params::UQtnUtilities_EmitAINoise_ServerOnly_Params Parms{};

	Parms.EmittingActor = EmittingActor;
	Parms.CulpritPawn = CulpritPawn;
	Parms.NoiseType = NoiseType;
	Parms.NoiseStrength = NoiseStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.DoesMapAffectPlayerProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputYesNoEnum     OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::DoesMapAffectPlayerProgress(class UObject* WorldContextObject, enum class EQtnOutputYesNoEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "DoesMapAffectPlayerProgress");

	Params::UQtnUtilities_DoesMapAffectPlayerProgress_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnUtilities.DecorateWithRichTextStyle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        TextToDecorate                                                   (Parm, NativeAccessSpecifierPublic)
// class FString                      RichTextStyleName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQtnUtilities::DecorateWithRichTextStyle(class FText TextToDecorate, const class FString& RichTextStyleName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "DecorateWithRichTextStyle");

	Params::UQtnUtilities_DecorateWithRichTextStyle_Params Parms{};

	Parms.TextToDecorate = TextToDecorate;
	Parms.RichTextStyleName = RichTextStyleName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.ConvertVersionToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnVersion                 Version                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnUtilities::ConvertVersionToString(struct FQtnVersion& Version)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ConvertVersionToString");

	Params::UQtnUtilities_ConvertVersionToString_Params Parms{};

	Parms.Version = Version;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.ConvertTimeStampToString
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                   Timestamp                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnUtilities::ConvertTimeStampToString(struct FDateTime& Timestamp)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ConvertTimeStampToString");

	Params::UQtnUtilities_ConvertTimeStampToString_Params Parms{};

	Parms.Timestamp = Timestamp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.ConvertSurfaceTypeToName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EPhysicalSurface        SurfaceType                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UQtnUtilities::ConvertSurfaceTypeToName(enum class EPhysicalSurface SurfaceType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ConvertSurfaceTypeToName");

	Params::UQtnUtilities_ConvertSurfaceTypeToName_Params Parms{};

	Parms.SurfaceType = SurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.ConvertEndPlayReasonToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EEndPlayReason          EndPlayReason                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnUtilities::ConvertEndPlayReasonToString(enum class EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ConvertEndPlayReasonToString");

	Params::UQtnUtilities_ConvertEndPlayReasonToString_Params Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.ChooseWeightedRandomItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<int32>                      TargetArray                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                      WeightArray                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              NumberToChoose                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      Items                                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::ChooseWeightedRandomItems(TArray<int32>& TargetArray, TArray<float>& WeightArray, int32 NumberToChoose, TArray<int32>* Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ChooseWeightedRandomItems");

	Params::UQtnUtilities_ChooseWeightedRandomItems_Params Parms{};

	Parms.TargetArray = TargetArray;
	Parms.WeightArray = WeightArray;
	Parms.NumberToChoose = NumberToChoose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.ChooseIndexFromWeightedList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<float>                      WeightedList                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnUtilities::ChooseIndexFromWeightedList(TArray<float>& WeightedList)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "ChooseIndexFromWeightedList");

	Params::UQtnUtilities_ChooseIndexFromWeightedList_Params Parms{};

	Parms.WeightedList = WeightedList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.CheckForButtonMash
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class AQtnPawn*                    MashingPawn                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnUIBodyActionEnum    LastMashedButton                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnUIBodyActionEnum    CurrentMashedButton                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::CheckForButtonMash(class AQtnPawn* MashingPawn, enum class EQtnUIBodyActionEnum LastMashedButton, enum class EQtnUIBodyActionEnum* CurrentMashedButton)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "CheckForButtonMash");

	Params::UQtnUtilities_CheckForButtonMash_Params Parms{};

	Parms.MashingPawn = MashingPawn;
	Parms.LastMashedButton = LastMashedButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CurrentMashedButton != nullptr)
		*CurrentMashedButton = Parms.CurrentMashedButton;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.CaptureSceneDeferredAndWait
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class USceneCaptureComponent2D*    SceneCaptureComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::CaptureSceneDeferredAndWait(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class USceneCaptureComponent2D* SceneCaptureComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "CaptureSceneDeferredAndWait");

	Params::UQtnUtilities_CaptureSceneDeferredAndWait_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = LatentInfo;
	Parms.SceneCaptureComponent = SceneCaptureComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.CaptureSceneDeferred
// (Final, Native, Static, Public, BlueprintCallable, Const)
// Parameters:
// class USceneCaptureComponent2D*    SceneCaptureComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::CaptureSceneDeferred(class USceneCaptureComponent2D* SceneCaptureComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "CaptureSceneDeferred");

	Params::UQtnUtilities_CaptureSceneDeferred_Params Parms{};

	Parms.SceneCaptureComponent = SceneCaptureComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.CapsuleTrace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfHeight                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::CapsuleTrace(class AActor* QueryingActor, struct FVector& Start, struct FVector& End, float Radius, float HalfHeight, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "CapsuleTrace");

	Params::UQtnUtilities_CapsuleTrace_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.Start = Start;
	Parms.End = End;
	Parms.Radius = Radius;
	Parms.HalfHeight = HalfHeight;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.BoxTrace
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class AActor*                      QueryingActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     boxSize                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnUtilities::BoxTrace(class AActor* QueryingActor, struct FVector& Start, struct FVector& End, struct FVector& boxSize, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "BoxTrace");

	Params::UQtnUtilities_BoxTrace_Params Parms{};

	Parms.QueryingActor = QueryingActor;
	Parms.Start = Start;
	Parms.End = End;
	Parms.boxSize = boxSize;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnUtilities.AsyncLoadClassArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSoftClassPtr<class UObject>>SoftClassArray                                                   (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<TSubclassOf<class UObject>> ArchetypeArray                                                   (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UQtnUtilities::AsyncLoadClassArray(class UObject* WorldContextObject, const TArray<TSoftClassPtr<class UObject>>& SoftClassArray, const struct FLatentActionInfo& LatentInfo, TArray<TSubclassOf<class UObject>>* ArchetypeArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "AsyncLoadClassArray");

	Params::UQtnUtilities_AsyncLoadClassArray_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SoftClassArray = SoftClassArray;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ArchetypeArray != nullptr)
		*ArchetypeArray = std::move(Parms.ArchetypeArray);

}


// Function QtnGame.QtnUtilities.AsyncLoadClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UObject>       SoftClass                                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>         Archetype                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::AsyncLoadClass(class UObject* WorldContextObject, TSoftClassPtr<class UObject> SoftClass, const struct FLatentActionInfo& LatentInfo, TSubclassOf<class UObject>* Archetype)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "AsyncLoadClass");

	Params::UQtnUtilities_AsyncLoadClass_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SoftClass = SoftClass;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Archetype != nullptr)
		*Archetype = Parms.Archetype;

}


// Function QtnGame.QtnUtilities.AppendRandomAscii
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FString                      String                                                           (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumCharacters                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::AppendRandomAscii(class FString& String, int32 NumCharacters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "AppendRandomAscii");

	Params::UQtnUtilities_AppendRandomAscii_Params Parms{};

	Parms.String = String;
	Parms.NumCharacters = NumCharacters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnUtilities.AddEventWindowTimestamp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UObject*                     EventObject                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnEventWindow             EventWindow                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               HitThreshold                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnUtilities::AddEventWindowTimestamp(class UObject* EventObject, struct FQtnEventWindow& EventWindow, bool* HitThreshold)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnUtilities", "AddEventWindowTimestamp");

	Params::UQtnUtilities_AddEventWindowTimestamp_Params Parms{};

	Parms.EventObject = EventObject;
	Parms.EventWindow = EventWindow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (HitThreshold != nullptr)
		*HitThreshold = Parms.HitThreshold;

}


// Class QtnGame.QtnVerb
// (None)

class UClass* UQtnVerb::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVerb");

	return Clss;
}


// QtnVerb QtnGame.Default__QtnVerb
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnVerb* UQtnVerb::GetDefaultObj()
{
	static class UQtnVerb* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnVerb*>(UQtnVerb::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnVerb.WillVerbSucceed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                     PotentialTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::WillVerbSucceed(class UObject* PotentialTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "WillVerbSucceed");

	Params::UQtnVerb_WillVerbSucceed_Params Parms{};

	Parms.PotentialTarget = PotentialTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.UseNativeGetFlameThrowerMaxDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::UseNativeGetFlameThrowerMaxDistance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "UseNativeGetFlameThrowerMaxDistance");

	Params::UQtnVerb_UseNativeGetFlameThrowerMaxDistance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.StartVerbAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnPawnMontage             VerbAction                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              PlayRate                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StartTime                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::StartVerbAction(struct FQtnPawnMontage& VerbAction, float PlayRate, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "StartVerbAction");

	Params::UQtnVerb_StartVerbAction_Params Parms{};

	Parms.VerbAction = VerbAction;
	Parms.PlayRate = PlayRate;
	Parms.StartTime = StartTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.SphereTrace
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::SphereTrace(struct FVector& Start, struct FVector& End, float Radius, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SphereTrace");

	Params::UQtnVerb_SphereTrace_Params Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.Radius = Radius;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.SpawnProjectile_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnProjectile>  ProjectileClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnPawn*                    Culprit                                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnProjectile*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnProjectile* UQtnVerb::SpawnProjectile_ServerOnly(TSubclassOf<class AQtnProjectile> ProjectileClass, struct FVector& MuzzlePosition, struct FVector& ProjectileVelocity, class AQtnPawn* Culprit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SpawnProjectile_ServerOnly");

	Params::UQtnVerb_SpawnProjectile_ServerOnly_Params Parms{};

	Parms.ProjectileClass = ProjectileClass;
	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;
	Parms.Culprit = Culprit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.SpawnProjectile_LocalOnly
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AQtnProjectile>  ProjectileClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SpawnProjectile_LocalOnly(TSubclassOf<class AQtnProjectile> ProjectileClass, struct FVector& MuzzlePosition, struct FVector& ProjectileVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SpawnProjectile_LocalOnly");

	Params::UQtnVerb_SpawnProjectile_LocalOnly_Params Parms{};

	Parms.ProjectileClass = ProjectileClass;
	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SpawnNonReplicatedActor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnVerb::SpawnNonReplicatedActor(TSubclassOf<class AActor> ActorClass, struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SpawnNonReplicatedActor");

	Params::UQtnVerb_SpawnNonReplicatedActor_Params Parms{};

	Parms.ActorClass = ActorClass;
	Parms.Transform = Transform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.SpawnActor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// enum class ESpawnActorCollisionHandlingMethodCollisionHandling                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQtnVerb::SpawnActor_ServerOnly(TSubclassOf<class AActor> ActorClass, struct FTransform& Transform, enum class ESpawnActorCollisionHandlingMethod CollisionHandling)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SpawnActor_ServerOnly");

	Params::UQtnVerb_SpawnActor_ServerOnly_Params Parms{};

	Parms.ActorClass = ActorClass;
	Parms.Transform = Transform;
	Parms.CollisionHandling = CollisionHandling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.ShouldUseHeadAim
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::ShouldUseHeadAim()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "ShouldUseHeadAim");

	Params::UQtnVerb_ShouldUseHeadAim_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.ShouldTiltRotationAlongSlopes
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::ShouldTiltRotationAlongSlopes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "ShouldTiltRotationAlongSlopes");

	Params::UQtnVerb_ShouldTiltRotationAlongSlopes_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.SetRootMotionSmoothMoveToDynamicLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetRootMotionSmoothMoveToDynamicLocation(const struct FVector& TargetLocation, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetRootMotionSmoothMoveToDynamicLocation");

	Params::UQtnVerb_SetRootMotionSmoothMoveToDynamicLocation_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SetRootMotionInstantMoveToDynamicLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetRootMotionInstantMoveToDynamicLocation(const struct FVector& TargetLocation, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetRootMotionInstantMoveToDynamicLocation");

	Params::UQtnVerb_SetRootMotionInstantMoveToDynamicLocation_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SetResourceMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetResourceMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetResourceMultiplier");

	Params::UQtnVerb_SetResourceMultiplier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SetResourceCostMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetResourceCostMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetResourceCostMultiplier");

	Params::UQtnVerb_SetResourceCostMultiplier_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SetLocalCooldownValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetLocalCooldownValue(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetLocalCooldownValue");

	Params::UQtnVerb_SetLocalCooldownValue_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SetLocalCooldownPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantPause                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetLocalCooldownPaused(bool WantPause)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetLocalCooldownPaused");

	Params::UQtnVerb_SetLocalCooldownPaused_Params Parms{};

	Parms.WantPause = WantPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SetIntendedTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      TargetActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetIntendedTarget(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetIntendedTarget");

	Params::UQtnVerb_SetIntendedTarget_Params Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.SetCharacterMovementMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EMovementMode           MovementMode                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::SetCharacterMovementMode(enum class EMovementMode MovementMode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "SetCharacterMovementMode");

	Params::UQtnVerb_SetCharacterMovementMode_Params Parms{};

	Parms.MovementMode = MovementMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.ServerSpawnProjectile
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults)
// Parameters:
// TSubclassOf<class AQtnProjectile>  ProjectileClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MuzzlePosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ProjectileVelocity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::ServerSpawnProjectile(TSubclassOf<class AQtnProjectile> ProjectileClass, const struct FVector& MuzzlePosition, const struct FVector& ProjectileVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "ServerSpawnProjectile");

	Params::UQtnVerb_ServerSpawnProjectile_Params Parms{};

	Parms.ProjectileClass = ProjectileClass;
	Parms.MuzzlePosition = MuzzlePosition;
	Parms.ProjectileVelocity = ProjectileVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction QtnGame.QtnVerb.QtnVerbEquipChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnVerb*                    AffectedVerb                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsEquipped                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::QtnVerbEquipChangeEvent__DelegateSignature(class UQtnVerb* AffectedVerb, bool IsEquipped, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "QtnVerbEquipChangeEvent__DelegateSignature");

	Params::UQtnVerb_QtnVerbEquipChangeEvent__DelegateSignature_Params Parms{};

	Parms.AffectedVerb = AffectedVerb;
	Parms.IsEquipped = IsEquipped;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction QtnGame.QtnVerb.QtnVerbDormancyChangeEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UQtnVerb*                    Verb                                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Dormant                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::QtnVerbDormancyChangeEvent__DelegateSignature(class UQtnVerb* Verb, bool Dormant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "QtnVerbDormancyChangeEvent__DelegateSignature");

	Params::UQtnVerb_QtnVerbDormancyChangeEvent__DelegateSignature_Params Parms{};

	Parms.Verb = Verb;
	Parms.Dormant = Dormant;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnVerbUnInit
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnVerbUnInit(bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnVerbUnInit");

	Params::UQtnVerb_OnVerbUnInit_Params Parms{};

	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnVerbStop
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EQtnStopReason          StopReason                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnVerbStop(enum class EQtnStopReason StopReason, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnVerbStop");

	Params::UQtnVerb_OnVerbStop_Params Parms{};

	Parms.StopReason = StopReason;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnVerbStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                     IntendedTarget                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnVerbStart(class UObject* IntendedTarget, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnVerbStart");

	Params::UQtnVerb_OnVerbStart_Params Parms{};

	Parms.IntendedTarget = IntendedTarget;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnVerbInit
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnVerbInit(bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnVerbInit");

	Params::UQtnVerb_OnVerbInit_Params Parms{};

	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnVerbEquipChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsEquipped                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnVerbEquipChange(bool IsEquipped, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnVerbEquipChange");

	Params::UQtnVerb_OnVerbEquipChange_Params Parms{};

	Parms.IsEquipped = IsEquipped;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnRep_AttributeContainer
// (Final, Native, Private)
// Parameters:

void UQtnVerb::OnRep_AttributeContainer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnRep_AttributeContainer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.OnProjectileSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class AQtnProjectile*              SpawnedProjectile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnProjectileSpawned(class AQtnProjectile* SpawnedProjectile, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnProjectileSpawned");

	Params::UQtnVerb_OnProjectileSpawned_Params Parms{};

	Parms.SpawnedProjectile = SpawnedProjectile;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnProjectilePreHit_ServerOnly
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AQtnProjectile*              Projectile                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreCollision                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnProjectilePreHit_ServerOnly(class AQtnProjectile* Projectile, bool* IgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnProjectilePreHit_ServerOnly");

	Params::UQtnVerb_OnProjectilePreHit_ServerOnly_Params Parms{};

	Parms.Projectile = Projectile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IgnoreCollision != nullptr)
		*IgnoreCollision = Parms.IgnoreCollision;

}


// Function QtnGame.QtnVerb.OnProjectileMelee
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AQtnProjectile*              Projectile                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreDamage                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnProjectileMelee(class AQtnProjectile* Projectile, bool IsServer, bool* IgnoreDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnProjectileMelee");

	Params::UQtnVerb_OnProjectileMelee_Params Parms{};

	Parms.Projectile = Projectile;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

	if (IgnoreDamage != nullptr)
		*IgnoreDamage = Parms.IgnoreDamage;

}


// Function QtnGame.QtnVerb.OnMovementBlocked
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                  Impact                                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnMovementBlocked(struct FHitResult& Impact, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnMovementBlocked");

	Params::UQtnVerb_OnMovementBlocked_Params Parms{};

	Parms.Impact = Impact;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnMontageEnded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnMontageEnded(class UAnimMontage* Montage, bool Interrupted, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnMontageEnded");

	Params::UQtnVerb_OnMontageEnded_Params Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnMontageBlendingOut
// (Event, Public, BlueprintEvent)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnMontageBlendingOut(class UAnimMontage* Montage, bool Interrupted, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnMontageBlendingOut");

	Params::UQtnVerb_OnMontageBlendingOut_Params Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnDebugDisplay
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnDebugWrapper*            DebugWrapper                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnDebugDisplay(class UQtnDebugWrapper* DebugWrapper)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnDebugDisplay");

	Params::UQtnVerb_OnDebugDisplay_Params Parms{};

	Parms.DebugWrapper = DebugWrapper;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnComboBegin
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnPawnMontage             ComboAction                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnComboBegin(struct FQtnPawnMontage& ComboAction, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnComboBegin");

	Params::UQtnVerb_OnComboBegin_Params Parms{};

	Parms.ComboAction = ComboAction;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnAnimWindowEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Interrupted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnAnimWindowEnd(class UQtnAnimWindow* AnimWindow, bool Interrupted, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnAnimWindowEnd");

	Params::UQtnVerb_OnAnimWindowEnd_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.Interrupted = Interrupted;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnAnimWindowBegin
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimWindow*              AnimWindow                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TotalDuration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnAnimWindowBegin(class UQtnAnimWindow* AnimWindow, float TotalDuration, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnAnimWindowBegin");

	Params::UQtnVerb_OnAnimWindowBegin_Params Parms{};

	Parms.AnimWindow = AnimWindow;
	Parms.TotalDuration = TotalDuration;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnAnimNotify
// (Event, Public, BlueprintEvent)
// Parameters:
// class UQtnAnimNotify*              AnimNotify                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnAnimNotify(class UQtnAnimNotify* AnimNotify, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnAnimNotify");

	Params::UQtnVerb_OnAnimNotify_Params Parms{};

	Parms.AnimNotify = AnimNotify;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.OnActiveVerbTicked
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnPawnIntentions          PawnIntentions                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                              DeltaSeconds                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ElapsedTime                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::OnActiveVerbTicked(struct FQtnPawnIntentions& PawnIntentions, float DeltaSeconds, float ElapsedTime, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "OnActiveVerbTicked");

	Params::UQtnVerb_OnActiveVerbTicked_Params Parms{};

	Parms.PawnIntentions = PawnIntentions;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.ElapsedTime = ElapsedTime;
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function QtnGame.QtnVerb.ModifyAnimWindowBlockParryValues
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FQtnRangedFloat             OriginalDegrees                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              OriginalCm                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnRangedFloat             ModifiedDegrees                                                  (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// float                              ModifiedCm                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::ModifyAnimWindowBlockParryValues(struct FQtnRangedFloat& OriginalDegrees, float OriginalCm, struct FQtnRangedFloat* ModifiedDegrees, float* ModifiedCm)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "ModifyAnimWindowBlockParryValues");

	Params::UQtnVerb_ModifyAnimWindowBlockParryValues_Params Parms{};

	Parms.OriginalDegrees = OriginalDegrees;
	Parms.OriginalCm = OriginalCm;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ModifiedDegrees != nullptr)
		*ModifiedDegrees = std::move(Parms.ModifiedDegrees);

	if (ModifiedCm != nullptr)
		*ModifiedCm = Parms.ModifiedCm;

}


// Function QtnGame.QtnVerb.LineTrace
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::LineTrace(struct FVector& Start, struct FVector& End, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "LineTrace");

	Params::UQtnVerb_LineTrace_Params Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsVerbFinished
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsVerbFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsVerbFinished");

	Params::UQtnVerb_IsVerbFinished_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsVerbEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsVerbEquipped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsVerbEquipped");

	Params::UQtnVerb_IsVerbEquipped_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsVerbActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsVerbActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsVerbActive");

	Params::UQtnVerb_IsVerbActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsTargetActorWorthyOfAttack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AQtnPawn*                    SelfPawn                                                         (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PotentialVictim                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsTargetActorWorthyOfAttack(class AQtnPawn* SelfPawn, class AActor* PotentialVictim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsTargetActorWorthyOfAttack");

	Params::UQtnVerb_IsTargetActorWorthyOfAttack_Params Parms{};

	Parms.SelfPawn = SelfPawn;
	Parms.PotentialVictim = PotentialVictim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsServer");

	Params::UQtnVerb_IsServer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsRangedWeaponVerb
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsRangedWeaponVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsRangedWeaponVerb");

	Params::UQtnVerb_IsRangedWeaponVerb_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsMeleeWeaponVerb
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsMeleeWeaponVerb()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsMeleeWeaponVerb");

	Params::UQtnVerb_IsMeleeWeaponVerb_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsMeleeComboPending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsMeleeComboPending()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsMeleeComboPending");

	Params::UQtnVerb_IsMeleeComboPending_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.IsAssociatedInputActionPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::IsAssociatedInputActionPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "IsAssociatedInputActionPressed");

	Params::UQtnVerb_IsAssociatedInputActionPressed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.HasDodgeBeenReleased
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::HasDodgeBeenReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "HasDodgeBeenReleased");

	Params::UQtnVerb_HasDodgeBeenReleased_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.HasAttackTicket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::HasAttackTicket()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "HasAttackTicket");

	Params::UQtnVerb_HasAttackTicket_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.HandleOutgoingDamage
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                      DamagedActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsServer                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::HandleOutgoingDamage(class AActor* DamagedActor, struct FQtnDamageInfo& DamageInfo, struct FQtnHitReactionInfo& HitReactionInfo, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "HandleOutgoingDamage");

	Params::UQtnVerb_HandleOutgoingDamage_Params Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.DamageInfo = DamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;
	Parms.IsServer = IsServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.HandleIncomingParry
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::HandleIncomingParry(struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "HandleIncomingParry");

	Params::UQtnVerb_HandleIncomingParry_Params Parms{};

	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.HandleIncomingDamage
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              IncomingDamageInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnHitReactionInfo         HitReactionInfo                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              ModifiedDamageInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVerb::HandleIncomingDamage(struct FQtnDamageInfo& IncomingDamageInfo, struct FQtnHitReactionInfo& HitReactionInfo, struct FQtnDamageInfo* ModifiedDamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "HandleIncomingDamage");

	Params::UQtnVerb_HandleIncomingDamage_Params Parms{};

	Parms.IncomingDamageInfo = IncomingDamageInfo;
	Parms.HitReactionInfo = HitReactionInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ModifiedDamageInfo != nullptr)
		*ModifiedDamageInfo = std::move(Parms.ModifiedDamageInfo);

}


// Function QtnGame.QtnVerb.HandleIncomingBlock
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnDamageInfo              DamageInfo                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::HandleIncomingBlock(struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "HandleIncomingBlock");

	Params::UQtnVerb_HandleIncomingBlock_Params Parms{};

	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetWorldGravity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UQtnVerb::GetWorldGravity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetWorldGravity");

	Params::UQtnVerb_GetWorldGravity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetWorld
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWorld*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWorld* UQtnVerb::GetWorld()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetWorld");

	Params::UQtnVerb_GetWorld_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetVerbTuningData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQtnVerbTuningDataRow       ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FQtnVerbTuningDataRow UQtnVerb::GetVerbTuningData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetVerbTuningData");

	Params::UQtnVerb_GetVerbTuningData_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetVerbLocalProjectileAimTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*             MuzzleComponentPtr                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Speed                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              GravityModifier                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetPoint                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnCameraVerbAim           ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnCameraVerbAim UQtnVerb::GetVerbLocalProjectileAimTarget(class USceneComponent* MuzzleComponentPtr, float Speed, float GravityModifier, const struct FVector& TargetPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetVerbLocalProjectileAimTarget");

	Params::UQtnVerb_GetVerbLocalProjectileAimTarget_Params Parms{};

	Parms.MuzzleComponentPtr = MuzzleComponentPtr;
	Parms.Speed = Speed;
	Parms.GravityModifier = GravityModifier;
	Parms.TargetPoint = TargetPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetVerbLocalProjectileAim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*             MuzzleComponentPtr                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Speed                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Range                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              GravityModifier                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AimAssistRadius                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnCameraVerbAim           ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FQtnCameraVerbAim UQtnVerb::GetVerbLocalProjectileAim(class USceneComponent* MuzzleComponentPtr, float Speed, float Range, float GravityModifier, float AimAssistRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetVerbLocalProjectileAim");

	Params::UQtnVerb_GetVerbLocalProjectileAim_Params Parms{};

	Parms.MuzzleComponentPtr = MuzzleComponentPtr;
	Parms.Speed = Speed;
	Parms.Range = Range;
	Parms.GravityModifier = GravityModifier;
	Parms.AimAssistRadius = AimAssistRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetVerbDamageFromChannel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnStatChannel         Channel                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetVerbDamageFromChannel(enum class EQtnStatChannel Channel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetVerbDamageFromChannel");

	Params::UQtnVerb_GetVerbDamageFromChannel_Params Parms{};

	Parms.Channel = Channel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetVerbButtonGlyph
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               EncloseKeyboardKeysInBrackets                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnVerb::GetVerbButtonGlyph(bool EncloseKeyboardKeysInBrackets)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetVerbButtonGlyph");

	Params::UQtnVerb_GetVerbButtonGlyph_Params Parms{};

	Parms.EncloseKeyboardKeysInBrackets = EncloseKeyboardKeysInBrackets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetVerbAffordancePrompt
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                     PotentialTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnVerb::GetVerbAffordancePrompt(class UObject* PotentialTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetVerbAffordancePrompt");

	Params::UQtnVerb_GetVerbAffordancePrompt_Params Parms{};

	Parms.PotentialTarget = PotentialTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetUpgradeSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnUpgradeSlot*>     ReturnValue                                                      (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UQtnUpgradeSlot*> UQtnVerb::GetUpgradeSlots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetUpgradeSlots");

	Params::UQtnVerb_GetUpgradeSlots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetReticleTexture
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnVerb::GetReticleTexture()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetReticleTexture");

	Params::UQtnVerb_GetReticleTexture_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetResourceMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetResourceMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetResourceMultiplier");

	Params::UQtnVerb_GetResourceMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetResourceCostMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetResourceCostMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetResourceCostMultiplier");

	Params::UQtnVerb_GetResourceCostMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetOwningPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnPawn*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnPawn* UQtnVerb::GetOwningPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetOwningPawn");

	Params::UQtnVerb_GetOwningPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetOwningItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnItem*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnItem* UQtnVerb::GetOwningItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetOwningItem");

	Params::UQtnVerb_GetOwningItem_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetOwningBodyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnVerb::GetOwningBodyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetOwningBodyPawn");

	Params::UQtnVerb_GetOwningBodyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetLocoTurnSpeed
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetLocoTurnSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetLocoTurnSpeed");

	Params::UQtnVerb_GetLocoTurnSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetLocomotionRatio
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetLocomotionRatio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetLocomotionRatio");

	Params::UQtnVerb_GetLocomotionRatio_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetLocoBlendOverride
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UBlendSpace*                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlendSpace* UQtnVerb::GetLocoBlendOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetLocoBlendOverride");

	Params::UQtnVerb_GetLocoBlendOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetLocalCooldownValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetLocalCooldownValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetLocalCooldownValue");

	Params::UQtnVerb_GetLocalCooldownValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetIntendedTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UQtnVerb::GetIntendedTarget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetIntendedTarget");

	Params::UQtnVerb_GetIntendedTarget_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnVerb::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetIconForUI");

	Params::UQtnVerb_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetFlameThrowerMaxDistance
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     InStartLoc                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InMaxDistance                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TraceHitDistance                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TraceHitPoint                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  HitData                                                          (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVerb::GetFlameThrowerMaxDistance(struct FVector& InStartLoc, float& InMaxDistance, float* TraceHitDistance, struct FVector* TraceHitPoint, struct FHitResult* HitData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetFlameThrowerMaxDistance");

	Params::UQtnVerb_GetFlameThrowerMaxDistance_Params Parms{};

	Parms.InStartLoc = InStartLoc;
	Parms.InMaxDistance = InMaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (TraceHitDistance != nullptr)
		*TraceHitDistance = Parms.TraceHitDistance;

	if (TraceHitPoint != nullptr)
		*TraceHitPoint = std::move(Parms.TraceHitPoint);

	if (HitData != nullptr)
		*HitData = std::move(Parms.HitData);

}


// Function QtnGame.QtnVerb.GetEntitiyDamageFromChannel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnStatChannel         Channel                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetEntitiyDamageFromChannel(enum class EQtnStatChannel Channel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetEntitiyDamageFromChannel");

	Params::UQtnVerb_GetEntitiyDamageFromChannel_Params Parms{};

	Parms.Channel = Channel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetElapsedVerbTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetElapsedVerbTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetElapsedVerbTime");

	Params::UQtnVerb_GetElapsedVerbTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetDamageValueFromChannel
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      VictimActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BaseDamage                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnStatChannel         LocalDamageTableChannelOverride                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageMultiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetDamageValueFromChannel(class AActor* VictimActor, float* BaseDamage, enum class EQtnStatChannel LocalDamageTableChannelOverride, float DamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetDamageValueFromChannel");

	Params::UQtnVerb_GetDamageValueFromChannel_Params Parms{};

	Parms.VictimActor = VictimActor;
	Parms.LocalDamageTableChannelOverride = LocalDamageTableChannelOverride;
	Parms.DamageMultiplier = DamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (BaseDamage != nullptr)
		*BaseDamage = Parms.BaseDamage;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetDamageValue
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                      VictimActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BaseDamage                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageMultiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVerb::GetDamageValue(class AActor* VictimActor, float* BaseDamage, float DamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetDamageValue");

	Params::UQtnVerb_GetDamageValue_Params Parms{};

	Parms.VictimActor = VictimActor;
	Parms.DamageMultiplier = DamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (BaseDamage != nullptr)
		*BaseDamage = Parms.BaseDamage;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetDamageType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnDamageType>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UQtnDamageType> UQtnVerb::GetDamageType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetDamageType");

	Params::UQtnVerb_GetDamageType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetContactFXKey
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                        MeleeKey                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UQtnVerb::GetContactFXKey(class FName& MeleeKey)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetContactFXKey");

	Params::UQtnVerb_GetContactFXKey_Params Parms{};

	Parms.MeleeKey = MeleeKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetContactFXDataTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDataTable*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDataTable* UQtnVerb::GetContactFXDataTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetContactFXDataTable");

	Params::UQtnVerb_GetContactFXDataTable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetBodyToBlame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AQtnBodyPawn*                ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AQtnBodyPawn* UQtnVerb::GetBodyToBlame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetBodyToBlame");

	Params::UQtnVerb_GetBodyToBlame_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.GetAssociatedInputAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EQtnUIBodyActionEnum    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EQtnUIBodyActionEnum UQtnVerb::GetAssociatedInputAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "GetAssociatedInputAction");

	Params::UQtnVerb_GetAssociatedInputAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.FinishVerbAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQtnPawnMontage             VerbAction                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               JumpToOutro                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::FinishVerbAction(struct FQtnPawnMontage& VerbAction, bool JumpToOutro)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "FinishVerbAction");

	Params::UQtnVerb_FinishVerbAction_Params Parms{};

	Parms.VerbAction = VerbAction;
	Parms.JumpToOutro = JumpToOutro;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.EndRootMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::EndRootMotion(class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "EndRootMotion");

	Params::UQtnVerb_EndRootMotion_Params Parms{};

	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.CapsuleTrace
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfHeight                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::CapsuleTrace(struct FVector& Start, struct FVector& End, float Radius, float HalfHeight, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "CapsuleTrace");

	Params::UQtnVerb_CapsuleTrace_Params Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.Radius = Radius;
	Parms.HalfHeight = HalfHeight;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.CanVerbStart
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UObject*                     PotentialTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::CanVerbStart(class UObject* PotentialTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "CanVerbStart");

	Params::UQtnVerb_CanVerbStart_Params Parms{};

	Parms.PotentialTarget = PotentialTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.CanMantle
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::CanMantle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "CanMantle");

	Params::UQtnVerb_CanMantle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.BufferJumpInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantBuffer                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::BufferJumpInput(bool WantBuffer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BufferJumpInput");

	Params::UQtnVerb_BufferJumpInput_Params Parms{};

	Parms.WantBuffer = WantBuffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.BufferDodgeInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               WantBuffer                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::BufferDodgeInput(bool WantBuffer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BufferDodgeInput");

	Params::UQtnVerb_BufferDodgeInput_Params Parms{};

	Parms.WantBuffer = WantBuffer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.BoxTrace
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Start                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     End                                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     boxSize                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ECollisionChannel       TraceChannel                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>          Hits                                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                               SingleResult                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnorePawns                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::BoxTrace(struct FVector& Start, struct FVector& End, struct FVector& boxSize, enum class ECollisionChannel TraceChannel, TArray<struct FHitResult>* Hits, bool SingleResult, bool IgnorePawns)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BoxTrace");

	Params::UQtnVerb_BoxTrace_Params Parms{};

	Parms.Start = Start;
	Parms.End = End;
	Parms.boxSize = boxSize;
	Parms.TraceChannel = TraceChannel;
	Parms.SingleResult = SingleResult;
	Parms.IgnorePawns = IgnorePawns;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Hits != nullptr)
		*Hits = std::move(Parms.Hits);

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.BeginRootMotionSmoothMoveToDynamic
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::BeginRootMotionSmoothMoveToDynamic(const struct FVector& StartLocation, const struct FVector& TargetLocation, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BeginRootMotionSmoothMoveToDynamic");

	Params::UQtnVerb_BeginRootMotionSmoothMoveToDynamic_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.TargetLocation = TargetLocation;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.BeginRootMotionSmoothMoveTo
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     StartLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::BeginRootMotionSmoothMoveTo(const struct FVector& StartLocation, const struct FVector& EndLocation, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BeginRootMotionSmoothMoveTo");

	Params::UQtnVerb_BeginRootMotionSmoothMoveTo_Params Parms{};

	Parms.StartLocation = StartLocation;
	Parms.EndLocation = EndLocation;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.BeginRootMotionInstantMoveToDynamic
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::BeginRootMotionInstantMoveToDynamic(const struct FVector& TargetLocation, float Duration, bool OverrideVelocity, bool ZeroVelocityWhenFinished, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BeginRootMotionInstantMoveToDynamic");

	Params::UQtnVerb_BeginRootMotionInstantMoveToDynamic_Params Parms{};

	Parms.TargetLocation = TargetLocation;
	Parms.Duration = Duration;
	Parms.OverrideVelocity = OverrideVelocity;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.BeginRootMotionImpulse
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Impulse                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               OverrideVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::BeginRootMotionImpulse(const struct FVector& Impulse, bool OverrideVelocity, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BeginRootMotionImpulse");

	Params::UQtnVerb_BeginRootMotionImpulse_Params Parms{};

	Parms.Impulse = Impulse;
	Parms.OverrideVelocity = OverrideVelocity;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.BeginRootMotionConstantForce
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Strength                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ZeroVelocityWhenFinished                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        InstanceName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerb::BeginRootMotionConstantForce(const struct FVector& Direction, float Strength, float Duration, bool ZeroVelocityWhenFinished, class FName InstanceName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "BeginRootMotionConstantForce");

	Params::UQtnVerb_BeginRootMotionConstantForce_Params Parms{};

	Parms.Direction = Direction;
	Parms.Strength = Strength;
	Parms.Duration = Duration;
	Parms.ZeroVelocityWhenFinished = ZeroVelocityWhenFinished;
	Parms.InstanceName = InstanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.AreVerbConditionsSatisfied
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     PotentialTarget                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               WillVerbSucceed                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::AreVerbConditionsSatisfied(class UObject* PotentialTarget, bool WillVerbSucceed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "AreVerbConditionsSatisfied");

	Params::UQtnVerb_AreVerbConditionsSatisfied_Params Parms{};

	Parms.PotentialTarget = PotentialTarget;
	Parms.WillVerbSucceed = WillVerbSucceed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.AreAllMeleeSweepsDone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::AreAllMeleeSweepsDone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "AreAllMeleeSweepsDone");

	Params::UQtnVerb_AreAllMeleeSweepsDone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerb.ApplyVerbContactEffect
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FQtnContactEventInfo        ContactInfo                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FQtnContactSystemResult     ContactSystemResults                                             (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVerb::ApplyVerbContactEffect(struct FQtnContactEventInfo& ContactInfo, struct FQtnContactSystemResult& ContactSystemResults)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "ApplyVerbContactEffect");

	Params::UQtnVerb_ApplyVerbContactEffect_Params Parms{};

	Parms.ContactInfo = ContactInfo;
	Parms.ContactSystemResults = ContactSystemResults;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.ApplyVerbContact
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                     ContactKey                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        SurfaceType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnContactEventData        ContactEventData                                                 (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVerb::ApplyVerbContact(class UObject* ContactKey, enum class EPhysicalSurface SurfaceType, const struct FQtnContactEventData& ContactEventData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "ApplyVerbContact");

	Params::UQtnVerb_ApplyVerbContact_Params Parms{};

	Parms.ContactKey = ContactKey;
	Parms.SurfaceType = SurfaceType;
	Parms.ContactEventData = ContactEventData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.ApplyMeleeDamage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      MeleeVictim                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQtnDamageInfo              DamageInfo                                                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVerb::ApplyMeleeDamage(class AActor* MeleeVictim, const struct FQtnDamageInfo& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "ApplyMeleeDamage");

	Params::UQtnVerb_ApplyMeleeDamage_Params Parms{};

	Parms.MeleeVictim = MeleeVictim;
	Parms.DamageInfo = DamageInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerb.AllowOtherVerbToInterrupt
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQtnVerb*                    OtherVerb                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerb::AllowOtherVerbToInterrupt(class UQtnVerb* OtherVerb)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerb", "AllowOtherVerbToInterrupt");

	Params::UQtnVerb_AllowOtherVerbToInterrupt_Params Parms{};

	Parms.OtherVerb = OtherVerb;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnVerbComponent
// (None)

class UClass* UQtnVerbComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVerbComponent");

	return Clss;
}


// QtnVerbComponent QtnGame.Default__QtnVerbComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnVerbComponent* UQtnVerbComponent::GetDefaultObj()
{
	static class UQtnVerbComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnVerbComponent*>(UQtnVerbComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnVerbComponent.SetPowerUpgrades_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        PowerVerbClass                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FQtnUpgradeRunProgressData>PowerUpgrades                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQtnVerbComponent::SetPowerUpgrades_ServerOnly(TSubclassOf<class UQtnVerb>& PowerVerbClass, TArray<struct FQtnUpgradeRunProgressData>& PowerUpgrades)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "SetPowerUpgrades_ServerOnly");

	Params::UQtnVerbComponent_SetPowerUpgrades_ServerOnly_Params Parms{};

	Parms.PowerVerbClass = PowerVerbClass;
	Parms.PowerUpgrades = PowerUpgrades;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerbComponent.RemoveVerbs_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EQtnUIBodyActionEnum    AssociatedBodyAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerbComponent::RemoveVerbs_ServerOnly(enum class EQtnUIBodyActionEnum AssociatedBodyAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "RemoveVerbs_ServerOnly");

	Params::UQtnVerbComponent_RemoveVerbs_ServerOnly_Params Parms{};

	Parms.AssociatedBodyAction = AssociatedBodyAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerbComponent.RemoveVerbInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     VerbInhibitor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerbComponent::RemoveVerbInhibitor_ServerOnly(class UObject* VerbInhibitor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "RemoveVerbInhibitor_ServerOnly");

	Params::UQtnVerbComponent_RemoveVerbInhibitor_ServerOnly_Params Parms{};

	Parms.VerbInhibitor = VerbInhibitor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerbComponent.RemoveVerb_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        VerbClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerbComponent::RemoveVerb_ServerOnly(TSubclassOf<class UQtnVerb> VerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "RemoveVerb_ServerOnly");

	Params::UQtnVerbComponent_RemoveVerb_ServerOnly_Params Parms{};

	Parms.VerbClass = VerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerbComponent.OnRep_MappedVerbsOnRepInducer
// (Final, Native, Private)
// Parameters:

void UQtnVerbComponent::OnRep_MappedVerbsOnRepInducer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "OnRep_MappedVerbsOnRepInducer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerbComponent.OnRep_MappedVerbs
// (Final, Native, Private)
// Parameters:

void UQtnVerbComponent::OnRep_MappedVerbs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "OnRep_MappedVerbs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerbComponent.GetVerbs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EQtnUIBodyActionEnum    AssociatedBodyAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQtnVerb*>            Verbs                                                            (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVerbComponent::GetVerbs(enum class EQtnUIBodyActionEnum AssociatedBodyAction, TArray<class UQtnVerb*>* Verbs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "GetVerbs");

	Params::UQtnVerbComponent_GetVerbs_Params Parms{};

	Parms.AssociatedBodyAction = AssociatedBodyAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Verbs != nullptr)
		*Verbs = std::move(Parms.Verbs);

}


// Function QtnGame.QtnVerbComponent.GetVerb
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQtnVerb>        VerbClass                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* UQtnVerbComponent::GetVerb(TSubclassOf<class UQtnVerb> VerbClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "GetVerb");

	Params::UQtnVerbComponent_GetVerb_Params Parms{};

	Parms.VerbClass = VerbClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerbComponent.GetAllVerbs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQtnVerb*>            Verbs                                                            (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVerbComponent::GetAllVerbs(TArray<class UQtnVerb*>* Verbs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "GetAllVerbs");

	Params::UQtnVerbComponent_GetAllVerbs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Verbs != nullptr)
		*Verbs = std::move(Parms.Verbs);

}


// Function QtnGame.QtnVerbComponent.AreVerbsInhibited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVerbComponent::AreVerbsInhibited()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "AreVerbsInhibited");

	Params::UQtnVerbComponent_AreVerbsInhibited_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVerbComponent.AddVerbInhibitor_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                     VerbInhibitor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVerbComponent::AddVerbInhibitor_ServerOnly(class UObject* VerbInhibitor, float Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "AddVerbInhibitor_ServerOnly");

	Params::UQtnVerbComponent_AddVerbInhibitor_ServerOnly_Params Parms{};

	Parms.VerbInhibitor = VerbInhibitor;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVerbComponent.AddVerb_ServerOnly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQtnVerb>        VerbClass                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnUIBodyActionEnum    AssociatedBodyAction                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RemoveAllOtherVerbs                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVerb*                    ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnVerb* UQtnVerbComponent::AddVerb_ServerOnly(TSubclassOf<class UQtnVerb> VerbClass, enum class EQtnUIBodyActionEnum AssociatedBodyAction, bool RemoveAllOtherVerbs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVerbComponent", "AddVerb_ServerOnly");

	Params::UQtnVerbComponent_AddVerb_ServerOnly_Params Parms{};

	Parms.VerbClass = VerbClass;
	Parms.AssociatedBodyAction = AssociatedBodyAction;
	Parms.RemoveAllOtherVerbs = RemoveAllOtherVerbs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnVerbDriverInterface
// (None)

class UClass* IQtnVerbDriverInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVerbDriverInterface");

	return Clss;
}


// QtnVerbDriverInterface QtnGame.Default__QtnVerbDriverInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IQtnVerbDriverInterface* IQtnVerbDriverInterface::GetDefaultObj()
{
	static class IQtnVerbDriverInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IQtnVerbDriverInterface*>(IQtnVerbDriverInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnViewportHUD
// (None)

class UClass* UQtnViewportHUD::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnViewportHUD");

	return Clss;
}


// QtnViewportHUD QtnGame.Default__QtnViewportHUD
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnViewportHUD* UQtnViewportHUD::GetDefaultObj()
{
	static class UQtnViewportHUD* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnViewportHUD*>(UQtnViewportHUD::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnVisualWaypoint
// (Actor)

class UClass* AQtnVisualWaypoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVisualWaypoint");

	return Clss;
}


// QtnVisualWaypoint QtnGame.Default__QtnVisualWaypoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnVisualWaypoint* AQtnVisualWaypoint::GetDefaultObj()
{
	static class AQtnVisualWaypoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnVisualWaypoint*>(AQtnVisualWaypoint::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnVOComponent
// (SceneComponent)

class UClass* UQtnVOComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVOComponent");

	return Clss;
}


// QtnVOComponent QtnGame.Default__QtnVOComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnVOComponent* UQtnVOComponent::GetDefaultObj()
{
	static class UQtnVOComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnVOComponent*>(UQtnVOComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnVOComponent.OnAudioFinished
// (Final, Native, Public)
// Parameters:
// class UAudioComponent*             PAudioComponent                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOComponent::OnAudioFinished(class UAudioComponent* PAudioComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOComponent", "OnAudioFinished");

	Params::UQtnVOComponent_OnAudioFinished_Params Parms{};

	Parms.PAudioComponent = PAudioComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOComponent.MulticastStopVO
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void UQtnVOComponent::MulticastStopVO()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOComponent", "MulticastStopVO");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOComponent.MulticastSetVOPaused
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// bool                               Paused                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOComponent::MulticastSetVOPaused(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOComponent", "MulticastSetVOPaused");

	Params::UQtnVOComponent_MulticastSetVOPaused_Params Parms{};

	Parms.Paused = Paused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOComponent.MulticastPlayVO
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FQtnPlayVOParams            PlayVOParams                                                     (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UQtnVOComponent::MulticastPlayVO(const struct FQtnPlayVOParams& PlayVOParams)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOComponent", "MulticastPlayVO");

	Params::UQtnVOComponent_MulticastPlayVO_Params Parms{};

	Parms.PlayVOParams = PlayVOParams;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOComponent.GetSpeakerTypeTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UQtnVOComponent::GetSpeakerTypeTag()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOComponent", "GetSpeakerTypeTag");

	Params::UQtnVOComponent_GetSpeakerTypeTag_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnVODatabase
// (None)

class UClass* UQtnVODatabase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVODatabase");

	return Clss;
}


// QtnVODatabase QtnGame.Default__QtnVODatabase
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnVODatabase* UQtnVODatabase::GetDefaultObj()
{
	static class UQtnVODatabase* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnVODatabase*>(UQtnVODatabase::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnVOManager
// (None)

class UClass* UQtnVOManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVOManager");

	return Clss;
}


// QtnVOManager QtnGame.Default__QtnVOManager
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnVOManager* UQtnVOManager::GetDefaultObj()
{
	static class UQtnVOManager* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnVOManager*>(UQtnVOManager::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnVOManager.WaitForScriptedVO
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               WaitForVOPlayed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::WaitForScriptedVO(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, bool WaitForVOPlayed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "WaitForScriptedVO");

	Params::UQtnVOManager_WaitForScriptedVO_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = LatentInfo;
	Parms.WaitForVOPlayed = WaitForVOPlayed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.WaitForExclusiveVO
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnVOManager::WaitForExclusiveVO(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "WaitForExclusiveVO");

	Params::UQtnVOManager_WaitForExclusiveVO_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.WaitForBackgroundVO
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQtnVOManager::WaitForBackgroundVO(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "WaitForBackgroundVO");

	Params::UQtnVOManager_WaitForBackgroundVO_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = LatentInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.UnsetSpeakerTypeOverride_ServerOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::UnsetSpeakerTypeOverride_ServerOnly(class AActor* Speaker)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "UnsetSpeakerTypeOverride_ServerOnly");

	Params::UQtnVOManager_UnsetSpeakerTypeOverride_ServerOnly_Params Parms{};

	Parms.Speaker = Speaker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.UnmuteCommentarySpeakerType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                SpeakerType                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::UnmuteCommentarySpeakerType(const struct FGameplayTag& SpeakerType, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "UnmuteCommentarySpeakerType");

	Params::UQtnVOManager_UnmuteCommentarySpeakerType_Params Parms{};

	Parms.SpeakerType = SpeakerType;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.StopVO
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::StopVO(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "StopVO");

	Params::UQtnVOManager_StopVO_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.SetVOManagerEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bEnabled                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::SetVOManagerEnabled(class UObject* WorldContextObject, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "SetVOManagerEnabled");

	Params::UQtnVOManager_SetVOManagerEnabled_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.SetSpeakerTypeOverride_ServerOnly
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                SpeakerType                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::SetSpeakerTypeOverride_ServerOnly(class AActor* Speaker, const struct FGameplayTag& SpeakerType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "SetSpeakerTypeOverride_ServerOnly");

	Params::UQtnVOManager_SetSpeakerTypeOverride_ServerOnly_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.SpeakerType = SpeakerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.SetPhoneSpeakerWeight
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Weight                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::SetPhoneSpeakerWeight(class AActor* Speaker, float Weight, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "SetPhoneSpeakerWeight");

	Params::UQtnVOManager_SetPhoneSpeakerWeight_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.Weight = Weight;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RequestScriptedVOWithPlayerCallout
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                PlayerBodyPawn                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                LeadInTag                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PriorityOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RequestScriptedVOWithPlayerCallout(class UObject* WorldContextObject, class AActor* Speaker, class AQtnBodyPawn* PlayerBodyPawn, const struct FGameplayTag& ScriptedId, const struct FGameplayTag& LeadInTag, bool PreferToPlayOnBody, int32 PrescribedVariant, int32 PriorityOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RequestScriptedVOWithPlayerCallout");

	Params::UQtnVOManager_RequestScriptedVOWithPlayerCallout_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.PlayerBodyPawn = PlayerBodyPawn;
	Parms.ScriptedId = ScriptedId;
	Parms.LeadInTag = LeadInTag;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;
	Parms.PriorityOverride = PriorityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RequestScriptedVOForOnePlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AQtnBodyPawn*                TargetPlayerBodyPawn                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PriorityOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RequestScriptedVOForOnePlayer(class UObject* WorldContextObject, class AActor* Speaker, const struct FGameplayTag& ScriptedId, class AQtnBodyPawn* TargetPlayerBodyPawn, bool PreferToPlayOnBody, int32 PrescribedVariant, int32 PriorityOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RequestScriptedVOForOnePlayer");

	Params::UQtnVOManager_RequestScriptedVOForOnePlayer_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.ScriptedId = ScriptedId;
	Parms.TargetPlayerBodyPawn = TargetPlayerBodyPawn;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;
	Parms.PriorityOverride = PriorityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RequestScriptedVOForceClientSide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PriorityOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                AnimMontage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AutoClosePhone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ForCutsceneHUD                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DoNotStopOtherVO                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RequestScriptedVOForceClientSide(class UObject* WorldContextObject, class AActor* Speaker, const struct FGameplayTag& ScriptedId, bool PreferToPlayOnBody, int32 PrescribedVariant, int32 PriorityOverride, class UAnimMontage* AnimMontage, bool AutoClosePhone, bool ForCutsceneHUD, bool DoNotStopOtherVO)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RequestScriptedVOForceClientSide");

	Params::UQtnVOManager_RequestScriptedVOForceClientSide_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.ScriptedId = ScriptedId;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;
	Parms.PriorityOverride = PriorityOverride;
	Parms.AnimMontage = AnimMontage;
	Parms.AutoClosePhone = AutoClosePhone;
	Parms.ForCutsceneHUD = ForCutsceneHUD;
	Parms.DoNotStopOtherVO = DoNotStopOtherVO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RequestScriptedVOAndWait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PriorityOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RequestScriptedVOAndWait(class UObject* WorldContextObject, class AActor* Speaker, const struct FGameplayTag& ScriptedId, const struct FLatentActionInfo& LatentInfo, bool PreferToPlayOnBody, int32 PrescribedVariant, int32 PriorityOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RequestScriptedVOAndWait");

	Params::UQtnVOManager_RequestScriptedVOAndWait_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.ScriptedId = ScriptedId;
	Parms.LatentInfo = LatentInfo;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;
	Parms.PriorityOverride = PriorityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RequestScriptedVO
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PriorityOverride                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RequestScriptedVO(class UObject* WorldContextObject, class AActor* Speaker, const struct FGameplayTag& ScriptedId, bool PreferToPlayOnBody, int32 PrescribedVariant, int32 PriorityOverride)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RequestScriptedVO");

	Params::UQtnVOManager_RequestScriptedVO_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.ScriptedId = ScriptedId;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;
	Parms.PriorityOverride = PriorityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RequestBackgroundVOAndWait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo           LatentInfo                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RequestBackgroundVOAndWait(class UObject* WorldContextObject, class AActor* Speaker, const struct FGameplayTag& ScriptedId, const struct FLatentActionInfo& LatentInfo, bool PreferToPlayOnBody, int32 PrescribedVariant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RequestBackgroundVOAndWait");

	Params::UQtnVOManager_RequestBackgroundVOAndWait_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.ScriptedId = ScriptedId;
	Parms.LatentInfo = LatentInfo;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RequestBackgroundVO
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               PreferToPlayOnBody                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PrescribedVariant                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RequestBackgroundVO(class UObject* WorldContextObject, class AActor* Speaker, const struct FGameplayTag& ScriptedId, bool PreferToPlayOnBody, int32 PrescribedVariant)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RequestBackgroundVO");

	Params::UQtnVOManager_RequestBackgroundVO_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Speaker = Speaker;
	Parms.ScriptedId = ScriptedId;
	Parms.PreferToPlayOnBody = PreferToPlayOnBody;
	Parms.PrescribedVariant = PrescribedVariant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RemoveSystemicVOInhibitor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RemoveSystemicVOInhibitor(class UObject* Inhibitor, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RemoveSystemicVOInhibitor");

	Params::UQtnVOManager_RemoveSystemicVOInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RemovePrioritySpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RemovePrioritySpeaker(class AActor* Speaker, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RemovePrioritySpeaker");

	Params::UQtnVOManager_RemovePrioritySpeaker_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RemovePotentialSpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RemovePotentialSpeaker(class AActor* Speaker, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RemovePotentialSpeaker");

	Params::UQtnVOManager_RemovePotentialSpeaker_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RemovePhoneSpeakerByClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          SpeakerClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RemovePhoneSpeakerByClass(TSubclassOf<class AActor> SpeakerClass, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RemovePhoneSpeakerByClass");

	Params::UQtnVOManager_RemovePhoneSpeakerByClass_Params Parms{};

	Parms.SpeakerClass = SpeakerClass;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RemovePhoneSpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RemovePhoneSpeaker(class AActor* Speaker, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RemovePhoneSpeaker");

	Params::UQtnVOManager_RemovePhoneSpeaker_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RemoveCompleteVOInhibitor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RemoveCompleteVOInhibitor(class UObject* Inhibitor, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RemoveCompleteVOInhibitor");

	Params::UQtnVOManager_RemoveCompleteVOInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RemoveCommentaryVOInhibitor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RemoveCommentaryVOInhibitor(class UObject* Inhibitor, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RemoveCommentaryVOInhibitor");

	Params::UQtnVOManager_RemoveCommentaryVOInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.RegisterSpeakerType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      SpeakerClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::RegisterSpeakerType(class UObject* WorldContextObject, class UClass* SpeakerClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "RegisterSpeakerType");

	Params::UQtnVOManager_RegisterSpeakerType_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpeakerClass = SpeakerClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.PreloadVOForCutscene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PSpeaker                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bBlocking                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::PreloadVOForCutscene(class UObject* WorldContextObject, class AActor* PSpeaker, const struct FGameplayTag& ScriptedId, bool bBlocking)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "PreloadVOForCutscene");

	Params::UQtnVOManager_PreloadVOForCutscene_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PSpeaker = PSpeaker;
	Parms.ScriptedId = ScriptedId;
	Parms.bBlocking = bBlocking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.PreloadAllVOCuesByTagAndSpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      PSpeaker                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                PGameplayTag                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::PreloadAllVOCuesByTagAndSpeaker(class UObject* WorldContextObject, class AActor* PSpeaker, const struct FGameplayTag& PGameplayTag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "PreloadAllVOCuesByTagAndSpeaker");

	Params::UQtnVOManager_PreloadAllVOCuesByTagAndSpeaker_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PSpeaker = PSpeaker;
	Parms.PGameplayTag = PGameplayTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.PickScriptedVOVariant
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                SpeakerType                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                ScriptedId                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnVOManager::PickScriptedVOVariant(class UObject* WorldContextObject, const struct FGameplayTag& SpeakerType, const struct FGameplayTag& ScriptedId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "PickScriptedVOVariant");

	Params::UQtnVOManager_PickScriptedVOVariant_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpeakerType = SpeakerType;
	Parms.ScriptedId = ScriptedId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.OnPhoneSpeakerLipsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVOComponent*             PhoneSpeakerVOComponent                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                 LipsyncAnim                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::OnPhoneSpeakerLipsync(class UObject* WorldContextObject, class UQtnVOComponent* PhoneSpeakerVOComponent, class UCurveFloat* LipsyncAnim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "OnPhoneSpeakerLipsync");

	Params::UQtnVOManager_OnPhoneSpeakerLipsync_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PhoneSpeakerVOComponent = PhoneSpeakerVOComponent;
	Parms.LipsyncAnim = LipsyncAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.OnAudioFinished
// (Final, Native, Public)
// Parameters:
// class UAudioComponent*             PAudioComponent                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::OnAudioFinished(class UAudioComponent* PAudioComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "OnAudioFinished");

	Params::UQtnVOManager_OnAudioFinished_Params Parms{};

	Parms.PAudioComponent = PAudioComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.MuteCommentarySpeakerType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                SpeakerType                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::MuteCommentarySpeakerType(const struct FGameplayTag& SpeakerType, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "MuteCommentarySpeakerType");

	Params::UQtnVOManager_MuteCommentarySpeakerType_Params Parms{};

	Parms.SpeakerType = SpeakerType;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.IsScriptedVOPlaying
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQtnVOManager::IsScriptedVOPlaying(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "IsScriptedVOPlaying");

	Params::UQtnVOManager_IsScriptedVOPlaying_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.GetVOVolumeMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVOManager::GetVOVolumeMultiplier(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "GetVOVolumeMultiplier");

	Params::UQtnVOManager_GetVOVolumeMultiplier_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.GetPlayVOLogSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQtnVOManager::GetPlayVOLogSize(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "GetPlayVOLogSize");

	Params::UQtnVOManager_GetPlayVOLogSize_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.GetPlayVOLogEntryAlpha
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQtnVOManager::GetPlayVOLogEntryAlpha(class UObject* WorldContextObject, int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "GetPlayVOLogEntryAlpha");

	Params::UQtnVOManager_GetPlayVOLogEntryAlpha_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.GetPlayVOLogEntry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UQtnVOManager::GetPlayVOLogEntry(class UObject* WorldContextObject, int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "GetPlayVOLogEntry");

	Params::UQtnVOManager_GetPlayVOLogEntry_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.GetLocalizedCineAudio
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundCue*                   EnglishSoundCue                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundCue*                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundCue* UQtnVOManager::GetLocalizedCineAudio(class UObject* WorldContextObject, class USoundCue* EnglishSoundCue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "GetLocalizedCineAudio");

	Params::UQtnVOManager_GetLocalizedCineAudio_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EnglishSoundCue = EnglishSoundCue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.GetAvailableLocalizedAudioLanguages
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTag>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameplayTag> UQtnVOManager::GetAvailableLocalizedAudioLanguages(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "GetAvailableLocalizedAudioLanguages");

	Params::UQtnVOManager_GetAvailableLocalizedAudioLanguages_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnVOManager.DoMirrorLipsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVOComponent*             FromSpeaker                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                 LipsyncAnim                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::DoMirrorLipsync(class UObject* WorldContextObject, class UQtnVOComponent* FromSpeaker, class UCurveFloat* LipsyncAnim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "DoMirrorLipsync");

	Params::UQtnVOManager_DoMirrorLipsync_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FromSpeaker = FromSpeaker;
	Parms.LipsyncAnim = LipsyncAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.AddSystemicVOInhibitor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::AddSystemicVOInhibitor(class UObject* Inhibitor, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "AddSystemicVOInhibitor");

	Params::UQtnVOManager_AddSystemicVOInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.AddPrioritySpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::AddPrioritySpeaker(class AActor* Speaker, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "AddPrioritySpeaker");

	Params::UQtnVOManager_AddPrioritySpeaker_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.AddPotentialSpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::AddPotentialSpeaker(class AActor* Speaker, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "AddPotentialSpeaker");

	Params::UQtnVOManager_AddPotentialSpeaker_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.AddPhoneSpeaker
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Speaker                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::AddPhoneSpeaker(class AActor* Speaker, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "AddPhoneSpeaker");

	Params::UQtnVOManager_AddPhoneSpeaker_Params Parms{};

	Parms.Speaker = Speaker;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.AddLipsyncMirror
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVOComponent*             FromSpeaker                                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnVOComponent*             ToSpeaker                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::AddLipsyncMirror(class UObject* WorldContextObject, class UQtnVOComponent* FromSpeaker, class UQtnVOComponent* ToSpeaker)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "AddLipsyncMirror");

	Params::UQtnVOManager_AddLipsyncMirror_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FromSpeaker = FromSpeaker;
	Parms.ToSpeaker = ToSpeaker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.AddCompleteVOInhibitor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::AddCompleteVOInhibitor(class UObject* Inhibitor, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "AddCompleteVOInhibitor");

	Params::UQtnVOManager_AddCompleteVOInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function QtnGame.QtnVOManager.AddCommentaryVOInhibitor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     Inhibitor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQtnVOManager::AddCommentaryVOInhibitor(class UObject* Inhibitor, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnVOManager", "AddCommentaryVOInhibitor");

	Params::UQtnVOManager_AddCommentaryVOInhibitor_Params Parms{};

	Parms.Inhibitor = Inhibitor;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class QtnGame.QtnVOPatternMatching
// (None)

class UClass* UQtnVOPatternMatching::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVOPatternMatching");

	return Clss;
}


// QtnVOPatternMatching QtnGame.Default__QtnVOPatternMatching
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnVOPatternMatching* UQtnVOPatternMatching::GetDefaultObj()
{
	static class UQtnVOPatternMatching* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnVOPatternMatching*>(UQtnVOPatternMatching::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnVOStructs
// (None)

class UClass* UQtnVOStructs::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnVOStructs");

	return Clss;
}


// QtnVOStructs QtnGame.Default__QtnVOStructs
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnVOStructs* UQtnVOStructs::GetDefaultObj()
{
	static class UQtnVOStructs* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnVOStructs*>(UQtnVOStructs::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnWaypoint
// (Actor)

class UClass* AQtnWaypoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnWaypoint");

	return Clss;
}


// QtnWaypoint QtnGame.Default__QtnWaypoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnWaypoint* AQtnWaypoint::GetDefaultObj()
{
	static class AQtnWaypoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnWaypoint*>(AQtnWaypoint::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnWaypointProxyComponent
// (None)

class UClass* UQtnWaypointProxyComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnWaypointProxyComponent");

	return Clss;
}


// QtnWaypointProxyComponent QtnGame.Default__QtnWaypointProxyComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnWaypointProxyComponent* UQtnWaypointProxyComponent::GetDefaultObj()
{
	static class UQtnWaypointProxyComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnWaypointProxyComponent*>(UQtnWaypointProxyComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class QtnGame.QtnWorldCustomization
// (None)

class UClass* UQtnWorldCustomization::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnWorldCustomization");

	return Clss;
}


// QtnWorldCustomization QtnGame.Default__QtnWorldCustomization
// (Public, ClassDefaultObject, ArchetypeObject)

class UQtnWorldCustomization* UQtnWorldCustomization::GetDefaultObj()
{
	static class UQtnWorldCustomization* Default = nullptr;

	if (!Default)
		Default = static_cast<UQtnWorldCustomization*>(UQtnWorldCustomization::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnWorldCustomization.GetWorldCustomizationArchetype
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UQtnWorldCustomization>WorldCustomizationClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQtnWorldCustomization*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQtnWorldCustomization* UQtnWorldCustomization::GetWorldCustomizationArchetype(TSubclassOf<class UQtnWorldCustomization> WorldCustomizationClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldCustomization", "GetWorldCustomizationArchetype");

	Params::UQtnWorldCustomization_GetWorldCustomizationArchetype_Params Parms{};

	Parms.WorldCustomizationClass = WorldCustomizationClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnWorldCustomization.GetIconForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UQtnWorldCustomization::GetIconForUI()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldCustomization", "GetIconForUI");

	Params::UQtnWorldCustomization_GetIconForUI_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class QtnGame.QtnWorldSettings
// (Actor)

class UClass* AQtnWorldSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("QtnWorldSettings");

	return Clss;
}


// QtnWorldSettings QtnGame.Default__QtnWorldSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class AQtnWorldSettings* AQtnWorldSettings::GetDefaultObj()
{
	static class AQtnWorldSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<AQtnWorldSettings*>(AQtnWorldSettings::StaticClass()->DefaultObject);

	return Default;
}


// Function QtnGame.QtnWorldSettings.ShouldMapGrantEnemyUpgrades
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AQtnWorldSettings::ShouldMapGrantEnemyUpgrades(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldSettings", "ShouldMapGrantEnemyUpgrades");

	Params::AQtnWorldSettings_ShouldMapGrantEnemyUpgrades_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnWorldSettings.IsThisMapForHordeMode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputYesNoEnum     OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnWorldSettings::IsThisMapForHordeMode(class UObject* WorldContextObject, enum class EQtnOutputYesNoEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldSettings", "IsThisMapForHordeMode");

	Params::AQtnWorldSettings_IsThisMapForHordeMode_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnWorldSettings.IsThisMapAMissionWorldBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputYesNoEnum     OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnWorldSettings::IsThisMapAMissionWorldBP(class UObject* WorldContextObject, enum class EQtnOutputYesNoEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldSettings", "IsThisMapAMissionWorldBP");

	Params::AQtnWorldSettings_IsThisMapAMissionWorldBP_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnWorldSettings.GetMusicDataTableRowName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AQtnWorldSettings::GetMusicDataTableRowName(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldSettings", "GetMusicDataTableRowName");

	Params::AQtnWorldSettings_GetMusicDataTableRowName_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function QtnGame.QtnWorldSettings.DoesThisMapSpawnBodiesBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputYesNoEnum     OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnWorldSettings::DoesThisMapSpawnBodiesBP(class UObject* WorldContextObject, enum class EQtnOutputYesNoEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldSettings", "DoesThisMapSpawnBodiesBP");

	Params::AQtnWorldSettings_DoesThisMapSpawnBodiesBP_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}


// Function QtnGame.QtnWorldSettings.DoesThisMapAffectPlayerProgressBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EQtnOutputYesNoEnum     OutputPin                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AQtnWorldSettings::DoesThisMapAffectPlayerProgressBP(class UObject* WorldContextObject, enum class EQtnOutputYesNoEnum* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("QtnWorldSettings", "DoesThisMapAffectPlayerProgressBP");

	Params::AQtnWorldSettings_DoesThisMapAffectPlayerProgressBP_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;

}

}


