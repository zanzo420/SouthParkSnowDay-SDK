#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x23C (0x4D4 - 0x298)
// WidgetBlueprintGeneratedClass Menu_DarkMatterPerks.Menu_DarkMatterPerks_C
class UMenu_DarkMatterPerks_C : public UQtnUserWidget
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x298(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UPerkMap_Widget_C*                     BP_PerkMap;                                        // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                          CanvasPanel_Main;                                  // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Image_989;                                         // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                Image_Gamepad;                                     // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPerkTooltip_Widget_C*                 PerkTooltip_Widget;                                // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                        RText_PerkCount;                                   // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                            TrainingMoment_ScreenLocked;                       // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                             OriginalMapSize;                                   // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                             OriginalStartSize;                                 // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        DefaultPerkSize;                                   // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                        CurrentSizeMultiplier;                             // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         KeepStartSizeWhenZooming;                          // 0x2F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                        Pad_55BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinZoom;                                           // 0x2F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                        MaxZoom;                                           // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                        Pad_55BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPerkSlot_Widget_C*>            AllPerkSlots;                                      // 0x300(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                        PerkSize;                                          // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_55C0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UClass*>                        PerkWidgetsArray;                                  // 0x318(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UQtnPerk*>                      BodyPerksEquipped;                                 // 0x328(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_            OnTooltipHover;                                    // 0x338(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_            OnTooltipUnhovered;                                // 0x348(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                             TooltipSize;                                       // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABodyPawnPlayer_C*                     MyBodyPawnPlayer;                                  // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                        CurrencyDarkMatter;                                // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_55C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGlobalNav_Widget_C*                   GlobalNav;                                         // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TMap<class FString, class FText>             Affordances;                                       // 0x378(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                        AvailableSkillPoints;                              // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        Zoom_Percent;                                      // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         SocialHubTrainingMoment_ValidAccess;               // 0x3D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         SocialHubTrainingMoment_GetSnark;                  // 0x3D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_55C2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQtnStruct_VOLine>             TrainingMoment_VO_Entry;                           // 0x3D8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FQtnStruct_VOLine>             TrainingMoment_VO_Purchase;                        // 0x3E8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FQtnStruct_VOLine>             TrainingMoment_VO_PerkRemoval;                     // 0x3F8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         SocialHubTrainingMoment_HasPlayedPurchaseVO;       // 0x408(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         SocialHubTrainingMoment_HasPlayedEntryVO;          // 0x409(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         SocialHubTrainingMoment_HasPlayedRemovalVO;        // 0x40A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                         InSocialHubTrainingMoment;                         // 0x40B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                        MaxAllowedPerks;                                   // 0x40C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         EnteredThroughFrobbable;                           // 0x410(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                        Pad_55C3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStoreSelectedItemWidget_C*            PerkTooltip2;                                      // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                  TrainingMoment_Text_SelectPerk_Keys;               // 0x420(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  TrainingMoment_Text_SelectPerk_Gamepad;            // 0x438(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  TrainingMoment_Text_Header;                        // 0x450(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  TrainingMoment_Text_Unselect_Keys;                 // 0x468(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  TrainingMoment_Text_Unselect_Gamepad;              // 0x480(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                  TrainingMoment_Text_Exit;                          // 0x498(0x18)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUI_FTUX_TrainingMoment_Screen_C*      Ftux_Training_Moment_Screen;                       // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPerkSlot_Widget_C*>            LastSimulatedDisconnectionResults;                 // 0x4B8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UCanvasPanelSlot*                      TooltipCanvasSlot;                                 // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                        DefaultSizeMultiplier;                             // 0x4D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UMenu_DarkMatterPerks_C* GetDefaultObj();

	void RequestCurrencyVisibilities(bool* ShowTP, bool* ShowDM, bool* ShowPP);
	void GetPerksToDeactivate(TArray<class UPerkSlot_Widget_C*>& PerkSlotWidgets, TArray<class UClass*>* PerkClasses, TArray<int32>* SourceLoadoutSlots, const TArray<int32>& LOCAL_sourceLoadoutSlots, const TArray<class UClass*>& LOCAL_perkClasses, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1);
	void Center_Cursor_for_Gamepad_Selection(const struct FVector2D& CallFunc_GetViewportSize_ReturnValue, class AQtnPlayerController* CallFunc_GetLocalPlayerControllerBP_localPlayerController, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerControllerBP_outputPin, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1);
	void CannotEquipPerk();
	void RefreshTooltip(class UPerkSlot_Widget_C* PerkSlot, int32 CallFunc_Calculate_Perk_Cost_or_Refund_CostOrRefund, int32 CallFunc_Calculate_Perk_Cost_or_Refund_OldWalletAmount, int32 CallFunc_Calculate_Perk_Cost_or_Refund_NewWalletAmount, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void RefreshPerkCount(const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, int32 CallFunc_GetActivePerkCount_Count, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Training_Moment_Save_Complete(bool CallFunc_PIEBypass_bypass, class AQtnBodyPawn* CallFunc_GetLocalPlayerInformation_occupiedBodyPawn, class AQtnPlayerPawn* CallFunc_GetLocalPlayerInformation_playerPawn, class AQtnPlayerController* CallFunc_GetLocalPlayerInformation_playerController, class AQtnPlayerUI* CallFunc_GetLocalPlayerInformation_playerUI, class AQtnPlayerState* CallFunc_GetLocalPlayerInformation_qtnPlayerState, bool CallFunc_GetLocalPlayerInformation_isHosting, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerInformation_outputPin, bool K2Node_SwitchEnum_CmpSuccess);
	void Training_Moment_Exit(int32 Temp_int_Array_Index_Variable, class AQtnGameState* CallFunc_GetQtnGameState_ReturnValue, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, class AQtnGameStateArchetype_C* K2Node_DynamicCast_AsQtn_Game_State_Archetype, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_PIEBypass_bypass, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class AQtnBodyPawn* CallFunc_GetLocalPlayerInformation_occupiedBodyPawn, class AQtnPlayerPawn* CallFunc_GetLocalPlayerInformation_playerPawn, class AQtnPlayerController* CallFunc_GetLocalPlayerInformation_playerController, class AQtnPlayerUI* CallFunc_GetLocalPlayerInformation_playerUI, class AQtnPlayerState* CallFunc_GetLocalPlayerInformation_qtnPlayerState, bool CallFunc_GetLocalPlayerInformation_isHosting, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerInformation_outputPin, bool K2Node_SwitchEnum_CmpSuccess);
	void GetSummedRefundCost(int32 NumberOfPerksDeactivating, int32* Cost, int32 CombinedCost, int32 ActivePerkCount, int32 Temp_int_Variable, int32 Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FDarkMatterCost_Struct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_GetActivePerkCount_Count, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void TrainingMoment_HasPlayerPurchasedAPerk(bool* Found_purchased_perk, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void MaxPerksReached_(bool* Maxed, int32 CallFunc_GetActivePerkCount_Count, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void Training_Moment_Toggle_First_Purchase_Highlight(bool Want_Highlight, class UPerkSlot_Widget_C* Chosen_Perk, class UPerkSlot_Widget_C* LOCAL_ChosenPerk, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item_1, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);
	void Training_Moment_Toggle_Initial_Perks_Highlight(bool Want_Highlight, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void GetPurchaseCost(int32* Cost, int32 CallFunc_GetActivePerkCount_Count, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FDarkMatterCost_Struct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	void GetRefundCost(int32* Cost, int32 CallFunc_GetActivePerkCount_Count, const class FString& CallFunc_Conv_IntToString_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FDarkMatterCost_Struct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	void Calculate_Perk_Cost_or_Refund(bool IsFocusedPerkEquipped_, class UPerkSlot_Widget_C* FocusedPerk, int32* CostOrRefund, int32* OldWalletAmount, int32* NewWalletAmount, int32 LOCAL_CumulativeRefund, bool CallFunc_ForwardSimulateDisconnectionResult_ValidResult, TArray<class UPerkSlot_Widget_C*>& CallFunc_ForwardSimulateDisconnectionResult_ResultsArray, int32 CallFunc_GetPurchaseCost_Cost, int32 CallFunc_GetRefundCost_Cost, const struct FGameplayTag& CallFunc_MakeLiteralGameplayTag_ReturnValue, int32 CallFunc_GetCurrencyQuantity_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_GetSummedRefundCost_Cost, const struct FGameplayTag& CallFunc_MakeLiteralGameplayTag_ReturnValue_1, int32 CallFunc_GetCurrencyQuantity_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void PIEBypass(bool* bypass, const class FString& CallFunc_GetCurrentLevelName_ReturnValue, bool CallFunc_IsPlayingInEditor_ReturnValue, bool CallFunc_NotEqual_StrStr_ReturnValue);
	void Fetch_Perk_Slots_Info(TArray<class UPerkSlot_Widget_C*>* ActivePerkSlots, TArray<class UPerkSlot_Widget_C*>* InactivePerkSlots, TArray<class UPerkSlot_Widget_C*>* UnavailiablePerkSlots, const TArray<class UPerkSlot_Widget_C*>& UnavailiablePerkSlotsArray, const TArray<class UPerkSlot_Widget_C*>& AvailiablePerkSlotsArray, const TArray<class UPerkSlot_Widget_C*>& ActivePerkSlotsArray, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Is_A_Connection_Equipped_ValidConnection, bool CallFunc_IsPerkActive_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue_1, int32 CallFunc_Array_AddUnique_ReturnValue_2);
	void FetchActivePerks(TArray<class UQtnPerk*>* ActivePerksArray, TArray<class UQtnPerk*>& CallFunc_GetAllPerks_ReturnValue);
	void GetActivePerkCount(int32* Count, int32 ActivePerks, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class UQtnPerk*>& CallFunc_GetAllPerks_ReturnValue, class UQtnPerk* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_GetPerkInstanceCount_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void CheckAndPlayTrainingMomentVO(class FName CallFunc_MakeLiteralName_ReturnValue, enum class EQtnTutorialStatus CallFunc_GetTutorialState_ReturnValue, bool CallFunc_GetTutorialBoolValue_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class AQtnGameState* CallFunc_GetQtnGameState_ReturnValue, class AQtnGameStateArchetype_C* K2Node_DynamicCast_AsQtn_Game_State_Archetype, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void CheckAndUpdateIfPlayerTrained(bool* Menu_unlocked, enum class EQtnTutorialStatus CallFunc_GetTutorialState_ReturnValue, bool CallFunc_TrainingMoment_HasPlayerPurchasedAPerk_found_purchased_perk, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_GetTutorialBoolValue_ReturnValue, class AQtnBodyPawn* CallFunc_GetLocalPlayerInformation_occupiedBodyPawn, class AQtnPlayerPawn* CallFunc_GetLocalPlayerInformation_playerPawn, class AQtnPlayerController* CallFunc_GetLocalPlayerInformation_playerController, class AQtnPlayerUI* CallFunc_GetLocalPlayerInformation_playerUI, class AQtnPlayerState* CallFunc_GetLocalPlayerInformation_qtnPlayerState, bool CallFunc_GetLocalPlayerInformation_isHosting, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerInformation_outputPin, bool K2Node_SwitchEnum_CmpSuccess, class UQtnLocalOptionsSaveData* CallFunc_GetSaveLoadDataBP_localOptionsSaveData, class UQtnCloudOptionsSaveData* CallFunc_GetSaveLoadDataBP_cloudOptionsSaveData, class UQtnProgressSaveData* CallFunc_GetSaveLoadDataBP_progressSaveData, enum class EQtnOutputValidityEnum CallFunc_GetSaveLoadDataBP_outputPin, class UMissionDataBag_C* CallFunc_GetCustomDataBag_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, int32 CallFunc_GetCurrentArc_CurrentArc, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void IsAnyPerkFocused_(bool* PerkHovered, class UPerkSlot_Widget_C** FocusedPerkObject, class UPerkSlot_Widget_C* LOCAL_HoveredPerkWidget, bool LOCAL_HoveredFound, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsHovered_ReturnValue);
	void Equip_or_Unequip_Perk_Server(class UPerkSlot_Widget_C* EquippingSlot, bool Equipping_, bool* Equipping, class UPerkSlot_Widget_C* LOCAL_EquippingPerkSlot, class AQtnBodyPawn* LOCAL_QtnOccupiedBody, bool CallFunc_IsValid_ReturnValue, class UQtnInventoryComponent* CallFunc_GetBodyInventory_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UQtnInventoryComponent* CallFunc_GetBodyInventory_ReturnValue_1, int32 CallFunc_GetPurchaseCost_Cost, bool CallFunc_ForwardSimulateDisconnectionResult_ValidResult, TArray<class UPerkSlot_Widget_C*>& CallFunc_ForwardSimulateDisconnectionResult_ResultsArray, TArray<class UClass*>& CallFunc_GetPerksToDeactivate_perkClasses, TArray<int32>& CallFunc_GetPerksToDeactivate_sourceLoadoutSlots, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_GetSummedRefundCost_Cost, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerOccupiedBody_outputPin, class AQtnBodyPawn* CallFunc_GetLocalPlayerOccupiedBody_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void Update_Affordance(bool IsUsingMouseKeyboard, bool IsUsingMouseKB, bool Temp_bool_Variable, class FText Temp_text_Variable, class FText Temp_text_Variable_1, class UClass* CallFunc_GetObjectClass_ReturnValue, TScriptInterface<class IGlobalNavAffordance_Interface_C> K2Node_DynamicCast_AsGlobal_Nav_Affordance_Interface, bool K2Node_DynamicCast_bSuccess, class FText K2Node_Select_Default, const class FString& CallFunc_Conv_TextToString_ReturnValue, class FText CallFunc_MakeLiteralText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_MakeLiteralText_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void Unequip_Perk_Server(class UPerkSlot_Widget_C* PerkSlot, class UPerkSlot_Widget_C* LocalPerkSlot, int32 CallFunc_GetRefundCost_Cost, bool CallFunc_IsValid_ReturnValue, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerOccupiedBody_outputPin, class AQtnBodyPawn* CallFunc_GetLocalPlayerOccupiedBody_ReturnValue, class UQtnInventoryComponent* CallFunc_GetBodyInventory_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	void SetupAndCheckCurrencies();
	void SearchMapForEquippedPerks(class AQtnBodyPawn* Body, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_2, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, int32 CallFunc_Add_IntInt_ReturnValue_2, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_UpdateLockedUI_Unlocked, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerOccupiedBody_outputPin, class AQtnBodyPawn* CallFunc_GetLocalPlayerOccupiedBody_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, int32 CallFunc_Array_Length_ReturnValue_2, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item_2, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsPerkLoadoutActive_ReturnValue);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent, const struct FEventReply& CallFunc_Handled_ReturnValue);
	void ModifyMapSize(float Multiplier, const struct FVector2D& LOCAL_OldRelativeTranslation, bool LOCAL_OutsideViewport, int32 Temp_int_Array_Index_Variable, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_GetDesiredSize_ReturnValue, float CallFunc_FMax_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue, const struct FVector2D& CallFunc_GetDesiredSize_ReturnValue_1, const struct FVector2D& CallFunc_Divide_Vector2DVector2D_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue_1, const struct FVector2D& CallFunc_Multiply_Vector2DVector2D_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_Multiply_IntFloat_ReturnValue, int32 CallFunc_Round_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue_2, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, int32 CallFunc_Round_ReturnValue_1, int32 CallFunc_Round_ReturnValue_2, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue_3, float CallFunc_BreakVector2D_X_1, float CallFunc_BreakVector2D_Y_1, int32 CallFunc_Round_ReturnValue_3, float CallFunc_Multiply_FloatFloat_ReturnValue, int32 CallFunc_Round_ReturnValue_4, float CallFunc_FClamp_ReturnValue);
	void UpdateGlobalNavAffordances(TMap<class FString, class FText> Affordances, class UClass* MyClass);
	void OnUIScroll(float ScrollDelta, bool FromStick);
	void OnUIScreenActionReleased(enum class EQtnUIScreenActionEnum ScreenAction);
	void OnUIScreenActionPressed(enum class EQtnUIScreenActionEnum ScreenAction);
	void OnCursorDelta(float DeltaSeconds, const struct FVector2D& CursorDelta);
	void OnQtnWidgetTicked(float DeltaSeconds);
	void Destruct();
	void CloseTooltip();
	void ResetTooltips();
	void PopUpTooltip(class UPerkSlot_Widget_C* PerkSlotWidget);
	void DMPTrainingVO_OnMenuEntry();
	void DMPTrainingVO_OnPurchase(class UPerkSlot_Widget_C* Chosen_Perk);
	void DMPTrainingVO_OnPerkRemoval(class UPerkSlot_Widget_C* Perk_to_remove);
	void ExitMenu();
	void OnQtnWidgetResumed(class UQtnScreen* PreviousScreen);
	void InputChanged(bool IsUsingMouseAndKeyboard);
	void VisChange(enum class ESlateVisibility InVisibility);
	void RequestAffordance();
	void RefreshPerkMapState();
	void LoadoutChanged();
	void OnQtnWidgetPaused();
	void OnQtnWidgetInitialized();
	void OnPerksDisconnected(TArray<class UPerkSlot_Widget_C*>& PerksDisconnected);
	void OnInputModifySize(float ZoomPercent);
	void OnQtnWidgetShown();
	void ExecuteUbergraph_Menu_DarkMatterPerks(int32 EntryPoint, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_2, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, class UClass* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, TMap<class FString, class FText> K2Node_Event_Affordances, class UClass* K2Node_Event_myClass, float K2Node_Event_scrollDelta, bool K2Node_Event_fromStick, float CallFunc_Multiply_FloatFloat_ReturnValue, enum class EQtnUIScreenActionEnum K2Node_Event_screenAction_1, bool K2Node_SwitchEnum_CmpSuccess, enum class EQtnUIScreenActionEnum K2Node_Event_screenAction, bool K2Node_SwitchEnum_CmpSuccess_1, class UClass* CallFunc_GetObjectClass_ReturnValue, class UQtnScreen* CallFunc_GetOwningScreen_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, class UUserWidget* CallFunc_GetMainWidget_ReturnValue, class UGlobalNav_Widget_C* K2Node_DynamicCast_AsGlobal_Nav_Widget, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaSeconds_1, const struct FVector2D& K2Node_Event_cursorDelta, class AQtnPlayerUI* CallFunc_GetOwningPlayerUI_ReturnValue, float K2Node_Event_DeltaSeconds, bool CallFunc_IsUsingMouseAndKeyboard_ReturnValue, const struct FVector2D& CallFunc_GetLeftStickInput_ReturnValue, float CallFunc_VSize2DSquared_ReturnValue, const struct FEventReply& CallFunc_Screen_Pan_Logic_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class AQtnPlayerUI* CallFunc_GetOwningPlayerUI_ReturnValue_1, const struct FVector2D& CallFunc_GetRightStickInput_ReturnValue, bool CallFunc_IsUsingMouseAndKeyboard_ReturnValue_1, float CallFunc_VSize2D_ReturnValue, const struct FEventReply& CallFunc_Screen_Pan_Logic_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_Multiply_FloatFloat_ReturnValue_1, class UQtnScreen* CallFunc_GetOwningScreen_ReturnValue_1, class UClass* CallFunc_GetObjectClass_ReturnValue_1, class UUserWidget* CallFunc_GetMainWidget_ReturnValue_1, bool CallFunc_IsVisible_ReturnValue, class UGlobalNav_Widget_C* K2Node_DynamicCast_AsGlobal_Nav_Widget_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_1, class UPerkSlot_Widget_C* K2Node_CustomEvent_PerkSlotWidget, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UPerkSlot_Widget_C* K2Node_CustomEvent_Chosen_Perk, const struct FQtnStruct_VOLine& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable_2, bool CallFunc_Not_PreBool_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, int32 Temp_int_Array_Index_Variable_3, const struct FQtnStruct_VOLine& CallFunc_Array_Get_Item_1, class UPerkSlot_Widget_C* K2Node_CustomEvent_perk_to_remove, const struct FQtnStruct_VOLine& CallFunc_Array_Get_Item_2, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_Not_PreBool_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_IsUsingMouseAndKeyboard_ReturnValue_2, bool CallFunc_IsUsingMouseAndKeyboard_ReturnValue_3, class UQtnScreen* CallFunc_GetScreenThatOwnsThisWidget_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_2, float CallFunc_Conv_IntToFloat_ReturnValue_3, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1, bool Temp_bool_Variable, class UQtnScreen* K2Node_Event_previousScreen, class AQtnBodyPawn* CallFunc_GetOccupiedBodyPawn_ReturnValue, class FText K2Node_Select_Default, class ABodyPawnPlayer_C* K2Node_DynamicCast_AsBody_Pawn_Player, bool K2Node_DynamicCast_bSuccess_2, TArray<class UQtnPerk*>& CallFunc_GetAllPerks_ReturnValue, class UQtnScreen* CallFunc_GetOwningScreen_ReturnValue_2, class UUserWidget* CallFunc_GetMainWidget_ReturnValue_2, class UGlobalNav_Widget_C* K2Node_DynamicCast_AsGlobal_Nav_Widget_2, bool K2Node_DynamicCast_bSuccess_3, bool K2Node_CustomEvent_isUsingMouseAndKeyboard, bool Temp_bool_Variable_1, enum class ESlateVisibility K2Node_CustomEvent_InVisibility, bool CallFunc_IsUsingMouseAndKeyboard_ReturnValue_4, class FText K2Node_Select_Default_1, bool CallFunc_IsUsingMouseAndKeyboard_ReturnValue_5, enum class EQtnOutputValidityEnum CallFunc_GetLocalPlayerOccupiedBody_outputPin, class AQtnBodyPawn* CallFunc_GetLocalPlayerOccupiedBody_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_2, class AQtnPlayerController* CallFunc_GetOwningPlayerController_ReturnValue, class AQtnPlayerUI* CallFunc_GetOwningPlayerUI_ReturnValue_2, bool CallFunc_IsUsingMouseAndKeyboard_ReturnValue_6, class AQtnPlayerController* CallFunc_GetOwningPlayerController_ReturnValue_1, class UUI_FTUX_TrainingMoment_Screen_C* CallFunc_GetScreen_ReturnValue, class UUI_FTUX_Archetype_Widget_C* CallFunc_GetUserWidget_ReturnValue, bool CallFunc_CheckAndUpdateIfPlayerTrained_menu_unlocked, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_PIEBypass_bypass, TArray<class UPerkSlot_Widget_C*>& K2Node_CustomEvent_PerksDisconnected, class UPerkSlot_Widget_C* CallFunc_Array_Get_Item_3, int32 CallFunc_Array_Length_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_3, class UClass* CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, float K2Node_CustomEvent_ZoomPercent, bool CallFunc_EqualEqual_ClassClass_ReturnValue_1, float CallFunc_FClamp_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_IsVisible_ReturnValue_1, bool CallFunc_IsAnyPerkFocused__PerkHovered, class UPerkSlot_Widget_C* CallFunc_IsAnyPerkFocused__FocusedPerkObject, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3);
	void OnTooltipUnhovered__DelegateSignature();
	void OnTooltipHover__DelegateSignature(class FText PerkName, class FText PerkDesc, class UPerkSlot_Widget_C* PerkWidget);
};

}


